if (typeof kotlin === 'undefined') {
  throw new Error("Error loading module 'SpicyMorenitta'. Its dependency 'kotlin' was not found. Please, check whether 'kotlin' is loaded prior to 'SpicyMorenitta'.");
}
if (typeof this['kotlinx-html-js'] === 'undefined') {
  throw new Error("Error loading module 'SpicyMorenitta'. Its dependency 'kotlinx-html-js' was not found. Please, check whether 'kotlinx-html-js' is loaded prior to 'SpicyMorenitta'.");
}
if (typeof this['kotlinx-serialization-runtime-js'] === 'undefined') {
  throw new Error("Error loading module 'SpicyMorenitta'. Its dependency 'kotlinx-serialization-runtime-js' was not found. Please, check whether 'kotlinx-serialization-runtime-js' is loaded prior to 'SpicyMorenitta'.");
}
if (typeof this['loritta-api'] === 'undefined') {
  throw new Error("Error loading module 'SpicyMorenitta'. Its dependency 'loritta-api' was not found. Please, check whether 'loritta-api' is loaded prior to 'SpicyMorenitta'.");
}
if (typeof this['ktor-ktor-client-core'] === 'undefined') {
  throw new Error("Error loading module 'SpicyMorenitta'. Its dependency 'ktor-ktor-client-core' was not found. Please, check whether 'ktor-ktor-client-core' is loaded prior to 'SpicyMorenitta'.");
}
if (typeof this['kotlinx-coroutines-core'] === 'undefined') {
  throw new Error("Error loading module 'SpicyMorenitta'. Its dependency 'kotlinx-coroutines-core' was not found. Please, check whether 'kotlinx-coroutines-core' is loaded prior to 'SpicyMorenitta'.");
}
if (typeof this['ktor-ktor-http'] === 'undefined') {
  throw new Error("Error loading module 'SpicyMorenitta'. Its dependency 'ktor-ktor-http' was not found. Please, check whether 'ktor-ktor-http' is loaded prior to 'SpicyMorenitta'.");
}
var SpicyMorenitta = function (_, Kotlin, $module$kotlinx_html_js, $module$kotlinx_serialization_runtime_js, $module$loritta_api, $module$ktor_ktor_client_core, $module$kotlinx_coroutines_core, $module$ktor_ktor_http) {
  'use strict';
  var $$importsForInline$$ = _.$$importsForInline$$ || (_.$$importsForInline$$ = {});
  var Kind_CLASS = Kotlin.Kind.CLASS;
  var Annotation = Kotlin.kotlin.Annotation;
  var throwUPAE = Kotlin.throwUPAE;
  var equals = Kotlin.equals;
  var Unit = Kotlin.kotlin.Unit;
  var contains = Kotlin.kotlin.collections.contains_mjy6jw$;
  var throwCCE = Kotlin.throwCCE;
  var println = Kotlin.kotlin.io.println_s8jyv4$;
  var TingleModal = tingle.modal;
  var toIntOrNull = Kotlin.kotlin.text.toIntOrNull_pdl1vz$;
  var Kind_OBJECT = Kotlin.Kind.OBJECT;
  var ArrayList_init = Kotlin.kotlin.collections.ArrayList_init_287e2$;
  var copyToArray = Kotlin.kotlin.collections.copyToArray;
  var ensureNotNull = Kotlin.ensureNotNull;
  var StringBuilder_init = Kotlin.kotlin.text.StringBuilder_init;
  var appendHTML = $module$kotlinx_html_js.kotlinx.html.stream.appendHTML_94plub$;
  var div = $module$kotlinx_html_js.kotlinx.html.div_ri36nr$;
  var option = $module$kotlinx_html_js.kotlinx.html.option_xfiiwk$;
  var select = $module$kotlinx_html_js.kotlinx.html.select_9klr40$;
  var InputType = $module$kotlinx_html_js.kotlinx.html.InputType;
  var input_0 = $module$kotlinx_html_js.kotlinx.html.input_e1g74z$;
  var div_0 = $module$kotlinx_html_js.kotlinx.html.div_59el9d$;
  var clear = Kotlin.kotlin.dom.clear_asww5s$;
  var toInt = Kotlin.kotlin.text.toInt_pdl1vz$;
  var asList = Kotlin.org.w3c.dom.asList_kt9thq$;
  var List = Kotlin.kotlin.collections.List;
  var toMutableMap = Kotlin.kotlin.collections.toMutableMap_abgq59$;
  var replace = Kotlin.kotlin.text.replace_680rmw$;
  var json = Kotlin.kotlin.js.json_pyyo18$;
  var to = Kotlin.kotlin.to_ujzrz7$;
  var mapOf = Kotlin.kotlin.collections.mapOf_qfcya0$;
  var toString = Kotlin.toString;
  var RuntimeException_init = Kotlin.kotlin.RuntimeException_init_pdl1vj$;
  var Pair = Kotlin.kotlin.Pair;
  var emptyMap = Kotlin.kotlin.collections.emptyMap_q3lmfv$;
  var HTMLTag = $module$kotlinx_html_js.kotlinx.html.HTMLTag;
  var HtmlInlineTag = $module$kotlinx_html_js.kotlinx.html.HtmlInlineTag;
  var visit = $module$kotlinx_html_js.kotlinx.html.visit_xwv8ym$;
  var p = $module$kotlinx_html_js.kotlinx.html.p_8pggrc$;
  var i = $module$kotlinx_html_js.kotlinx.html.i_5g1p9k$;
  var th = $module$kotlinx_html_js.kotlinx.html.th_bncpyi$;
  var tr = $module$kotlinx_html_js.kotlinx.html.tr_lut1f9$;
  var set_style = $module$kotlinx_html_js.kotlinx.html.set_style_ueiko3$;
  var code = $module$kotlinx_html_js.kotlinx.html.code_en26pm$;
  var td = $module$kotlinx_html_js.kotlinx.html.td_vlzo05$;
  var thead = $module$kotlinx_html_js.kotlinx.html.thead_j1nulr$;
  var table = $module$kotlinx_html_js.kotlinx.html.table_dmqmme$;
  var details = $module$kotlinx_html_js.kotlinx.html.details_d9zf4h$;
  var ShowdownConverter = showdown.Converter;
  var until = Kotlin.kotlin.ranges.until_dqglrj$;
  var slice = Kotlin.kotlin.text.slice_fc3b62$;
  var img = $module$kotlinx_html_js.kotlinx.html.img_evw26v$;
  var unsafe = $module$kotlinx_html_js.kotlinx.html.unsafe_vdrn79$;
  var a = $module$kotlinx_html_js.kotlinx.html.a_gu26kr$;
  var span = $module$kotlinx_html_js.kotlinx.html.span_6djfml$;
  var RegexOption = Kotlin.kotlin.text.RegexOption;
  var Regex_init = Kotlin.kotlin.text.Regex_init_sb3q2$;
  var lazy = Kotlin.kotlin.lazy_klfg04$;
  var Any = Object;
  var checkIndexOverflow = Kotlin.kotlin.collections.checkIndexOverflow_za3lpa$;
  var LinkedHashMap_init = Kotlin.kotlin.collections.LinkedHashMap_init_q3lmfv$;
  var StringBuilder_init_0 = Kotlin.kotlin.text.StringBuilder_init_za3lpa$;
  var JSON_0 = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.json.JSON;
  var getKClass = Kotlin.getKClass;
  var contains_0 = Kotlin.kotlin.text.contains_li3zpu$;
  var trimMargin = Kotlin.kotlin.text.trimMargin_rjktp$;
  var h3 = $module$kotlinx_html_js.kotlinx.html.h3_agelx2$;
  var pre = $module$kotlinx_html_js.kotlinx.html.pre_pcyp7f$;
  var getOrDefault = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.context.getOrDefault_6qy6ah$;
  var split = Kotlin.kotlin.text.split_ip8yn$;
  var last = Kotlin.kotlin.collections.last_2p1efm$;
  var first = Kotlin.kotlin.collections.first_2p1efm$;
  var getCallableRef = Kotlin.getCallableRef;
  var mutableListOf = Kotlin.kotlin.collections.mutableListOf_i5x0yv$;
  var L123170274651668480 = new Kotlin.Long(1400897536, 28677814);
  var L422839753923362827 = new Kotlin.Long(293863435, 98450052);
  var L347064573318135811 = new Kotlin.Long(-20971517, 80807267);
  var L310877707175198720 = new Kotlin.Long(-1463549952, 72381856);
  var L168759625875718145 = new Kotlin.Long(1354760193, 39292412);
  var L416056545051279370 = new Kotlin.Long(776077322, 96870713);
  var L489572594555813888 = new Kotlin.Long(1313079296, 113987502);
  var L332918506930831362 = new Kotlin.Long(1086586882, 77513630);
  var L335193454034419715 = new Kotlin.Long(-1497235453, 78043307);
  var set_id = $module$kotlinx_html_js.kotlinx.html.set_id_ueiko3$;
  var distinct = Kotlin.kotlin.collections.distinct_7wnvza$;
  var img_0 = $module$kotlinx_html_js.kotlinx.html.js.img_6lw7hj$;
  var source = $module$kotlinx_html_js.kotlinx.html.js.source_1ucc65$;
  var numberToInt = Kotlin.numberToInt;
  var contains_1 = Kotlin.kotlin.ranges.contains_wwtm9y$;
  var set_onTimeUpdateFunction = $module$kotlinx_html_js.kotlinx.html.js.set_onTimeUpdateFunction_pszlq2$;
  var audio = $module$kotlinx_html_js.kotlinx.html.audio_pitgtg$;
  var th_0 = $module$kotlinx_html_js.kotlinx.html.js.th_lypajb$;
  var tr_0 = $module$kotlinx_html_js.kotlinx.html.js.tr_9pz0lc$;
  var td_0 = $module$kotlinx_html_js.kotlinx.html.js.td_ftqcky$;
  var set_onDragFunction = $module$kotlinx_html_js.kotlinx.html.js.set_onDragFunction_pszlq2$;
  var getPropertyCallableRef = Kotlin.getPropertyCallableRef;
  var table_0 = $module$kotlinx_html_js.kotlinx.html.js.table_uk5qws$;
  var append = $module$kotlinx_html_js.kotlinx.html.dom.append_k9bwru$;
  var SerialClassDescImpl = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.SerialClassDescImpl;
  var UnknownFieldException = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.UnknownFieldException;
  var internal = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal;
  var GeneratedSerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.GeneratedSerializer;
  var MissingFieldException = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.MissingFieldException;
  var L16777215 = Kotlin.Long.fromInt(16777215);
  var toString_0 = Kotlin.kotlin.text.toString_if0zpk$;
  var collectionSizeOrDefault = Kotlin.kotlin.collections.collectionSizeOrDefault_ba2ldo$;
  var ArrayList_init_0 = Kotlin.kotlin.collections.ArrayList_init_ww73n8$;
  var NoSuchElementException_init = Kotlin.kotlin.NoSuchElementException;
  var sortedWith = Kotlin.kotlin.collections.sortedWith_eknfly$;
  var wrapFunction = Kotlin.wrapFunction;
  var Comparator = Kotlin.kotlin.Comparator;
  var get_list = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.get_list_gekvwj$;
  var removeSuffix = Kotlin.kotlin.text.removeSuffix_gsj5wt$;
  var getOrNull = Kotlin.kotlin.collections.getOrNull_yzln2o$;
  var startsWith = Kotlin.kotlin.text.startsWith_7epoxm$;
  var endsWith = Kotlin.kotlin.text.endsWith_7epoxm$;
  var removePrefix = Kotlin.kotlin.text.removePrefix_gsj5wt$;
  var hasClass = Kotlin.kotlin.dom.hasClass_46n0ku$;
  var removeClass = Kotlin.kotlin.dom.removeClass_hhb33f$;
  var addClass = Kotlin.kotlin.dom.addClass_hhb33f$;
  var set_onClickFunction = $module$kotlinx_html_js.kotlinx.html.js.set_onClickFunction_pszlq2$;
  var i_0 = $module$kotlinx_html_js.kotlinx.html.js.i_5jry8x$;
  var Math_0 = Math;
  var LorittaBot = $module$loritta_api.net.perfectdreams.loritta.api.LorittaBot;
  var User = $module$loritta_api.net.perfectdreams.loritta.api.entities.User;
  var listOf = Kotlin.kotlin.collections.listOf_mh5how$;
  var COROUTINE_SUSPENDED = Kotlin.kotlin.coroutines.intrinsics.COROUTINE_SUSPENDED;
  var CoroutineImpl = Kotlin.kotlin.coroutines.CoroutineImpl;
  var command = $module$loritta_api.net.perfectdreams.loritta.api.commands.command_8ghhn7$;
  var url = $module$ktor_ktor_client_core.io.ktor.client.request.url_g8iu3v$;
  var PrimitiveClasses$stringClass = Kotlin.kotlin.reflect.js.internal.PrimitiveClasses.stringClass;
  var createKType = Kotlin.createKType;
  var CommandCategory = $module$loritta_api.net.perfectdreams.loritta.api.commands.CommandCategory;
  var CommandCategory$values = $module$loritta_api.net.perfectdreams.loritta.api.commands.CommandCategory.values;
  var ins = $module$kotlinx_html_js.kotlinx.html.ins_g1dqgd$;
  var script = $module$kotlinx_html_js.kotlinx.html.script_fglb7v$;
  var h1 = $module$kotlinx_html_js.kotlinx.html.h1_vmej1w$;
  var hr = $module$kotlinx_html_js.kotlinx.html.hr_17yvwq$;
  var joinToString = Kotlin.kotlin.collections.joinToString_cgipc5$;
  var tr_1 = $module$kotlinx_html_js.kotlinx.html.tr_7wec05$;
  var NullableSerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.NullableSerializer;
  var ReferenceArraySerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.ReferenceArraySerializer;
  var EnumSerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.EnumSerializer;
  var NotImplementedError_init = Kotlin.kotlin.NotImplementedError;
  var utils = $module$ktor_ktor_client_core.io.ktor.client.utils;
  var url_0 = $module$ktor_ktor_client_core.io.ktor.client.request.url_3rzbk2$;
  var HttpMethod = $module$ktor_ktor_client_core.$$importsForInline$$['ktor-ktor-http'].io.ktor.http.HttpMethod;
  var HttpRequestBuilder_init = $module$ktor_ktor_client_core.io.ktor.client.request.HttpRequestBuilder;
  var HttpStatement_init = $module$ktor_ktor_client_core.io.ktor.client.statement.HttpStatement;
  var HttpResponse = $module$ktor_ktor_client_core.io.ktor.client.statement.HttpResponse;
  var complete = $module$ktor_ktor_client_core.io.ktor.client.statement.complete_abn2de$;
  var call = $module$ktor_ktor_client_core.io.ktor.client.call;
  var TypeInfo_init = $module$ktor_ktor_client_core.io.ktor.client.call.TypeInfo;
  var L900 = Kotlin.Long.fromInt(900);
  var delay = $module$kotlinx_coroutines_core.kotlinx.coroutines.delay_s8cxhz$;
  var L7000 = Kotlin.Long.fromInt(7000);
  var L140 = Kotlin.Long.fromInt(140);
  var rangeTo = Kotlin.kotlin.ranges.rangeTo_38ydlf$;
  var L5000 = Kotlin.Long.fromInt(5000);
  var toDouble = Kotlin.kotlin.text.toDouble_pdl1vz$;
  var L25 = Kotlin.Long.fromInt(25);
  var set_onChangeFunction = $module$kotlinx_html_js.kotlinx.html.js.set_onChangeFunction_pszlq2$;
  var set_onInputFunction = $module$kotlinx_html_js.kotlinx.html.js.set_onInputFunction_pszlq2$;
  var h2 = $module$kotlinx_html_js.kotlinx.html.h2_wky4k0$;
  var set_title = $module$kotlinx_html_js.kotlinx.html.set_title_ueiko3$;
  var Enum = Kotlin.kotlin.Enum;
  var throwISE = Kotlin.throwISE;
  var emptyList = Kotlin.kotlin.collections.emptyList_287e2$;
  var addAll = Kotlin.kotlin.collections.addAll_ipc267$;
  var Random = Kotlin.kotlin.random.Random;
  var random = Kotlin.kotlin.collections.random_iscd7z$;
  var addAll_0 = Kotlin.kotlin.collections.addAll_ye1y7v$;
  var b = $module$kotlinx_html_js.kotlinx.html.b_r0mnq7$;
  var toLong = Kotlin.kotlin.text.toLong_pdl1vz$;
  var button = $module$kotlinx_html_js.kotlinx.html.button_i4xb7r$;
  var textArea = $module$kotlinx_html_js.kotlinx.html.textArea_b1tfd9$;
  var span_0 = $module$kotlinx_html_js.kotlinx.html.span_fqsp1s$;
  var getValue = Kotlin.kotlin.collections.getValue_t9ocha$;
  var label = $module$kotlinx_html_js.kotlinx.html.label_yd75js$;
  var L5 = Kotlin.Long.fromInt(5);
  var L750 = Kotlin.Long.fromInt(750);
  var hr_0 = $module$kotlinx_html_js.kotlinx.html.hr_ks0ewg$;
  var h5 = $module$kotlinx_html_js.kotlinx.html.h5_aplb7s$;
  var createHTML = $module$kotlinx_html_js.kotlinx.html.stream.createHTML_dqye30$;
  var strong = $module$kotlinx_html_js.kotlinx.html.strong_okpg28$;
  var firstOrNull = Kotlin.kotlin.collections.firstOrNull_2p1efm$;
  var get_create = $module$kotlinx_html_js.kotlinx.html.dom.get_create_4wc2mh$;
  var L_1 = Kotlin.Long.NEG_ONE;
  var mapOf_0 = Kotlin.kotlin.collections.mapOf_x2b85n$;
  var L0 = Kotlin.Long.ZERO;
  var L2500 = Kotlin.Long.fromInt(2500);
  var parameter = $module$ktor_ktor_client_core.io.ktor.client.request.parameter_xadl6p$;
  var HttpStatusCode = $module$ktor_ktor_http.io.ktor.http.HttpStatusCode;
  var readText = $module$ktor_ktor_client_core.io.ktor.client.statement.readText_rjorc7$;
  var L100 = Kotlin.Long.fromInt(100);
  var takeFrom = $module$ktor_ktor_client_core.$$importsForInline$$['ktor-ktor-http'].io.ktor.http.takeFrom_jl1sg7$;
  var joinToString_0 = Kotlin.kotlin.collections.joinToString_fmv235$;
  var LinkedHashSet_init = Kotlin.kotlin.collections.LinkedHashSet_init_287e2$;
  var js = $module$ktor_ktor_client_core.io.ktor.client.engine.js;
  var HttpClient = $module$ktor_ktor_client_core.io.ktor.client.HttpClient_744i18$;
  var L10000 = Kotlin.Long.fromInt(10000);
  var L125 = Kotlin.Long.fromInt(125);
  var toBoolean = Kotlin.kotlin.text.toBoolean_pdl1vz$;
  var IllegalArgumentException = Kotlin.kotlin.IllegalArgumentException;
  var coroutines = $module$kotlinx_coroutines_core.kotlinx.coroutines;
  var launch = $module$kotlinx_coroutines_core.kotlinx.coroutines.launch_s496o7$;
  var async = $module$kotlinx_coroutines_core.kotlinx.coroutines.async_pda6u4$;
  var listOf_0 = Kotlin.kotlin.collections.listOf_i5x0yv$;
  var joinAll = $module$kotlinx_coroutines_core.kotlinx.coroutines.joinAll_k943iz$;
  var img_1 = $module$kotlinx_html_js.kotlinx.html.img_45d5o1$;
  var header = $module$ktor_ktor_client_core.io.ktor.client.request.header_xadl6p$;
  var Mutex = $module$kotlinx_coroutines_core.kotlinx.coroutines.sync.Mutex_6taknv$;
  var mutableMapOf = Kotlin.kotlin.collections.mutableMapOf_qfcya0$;
  var Random_0 = Kotlin.kotlin.random.Random_za3lpa$;
  var Collection = Kotlin.kotlin.collections.Collection;
  var withName = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.withName_8new1j$;
  var KSerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.KSerializer;
  var get_isActive = $module$kotlinx_coroutines_core.kotlinx.coroutines.get_isActive_e9pf1l$;
  var defineInlineFunction = Kotlin.defineInlineFunction;
  var LinkedHashSetSerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.LinkedHashSetSerializer;
  var ArrayListSerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.ArrayListSerializer;
  var Throwable = Error;
  var toShort = Kotlin.toShort;
  var Result = Kotlin.kotlin.Result;
  var intercepted = Kotlin.kotlin.coroutines.intrinsics.intercepted_f9mg25$;
  var SafeContinuation_init = Kotlin.kotlin.coroutines.SafeContinuation_init_wj8d80$;
  var iterator = Kotlin.kotlin.text.iterator_gw00vp$;
  var unboxChar = Kotlin.unboxChar;
  var RuntimeException = Kotlin.kotlin.RuntimeException;
  var replaceFirst = Kotlin.kotlin.text.replaceFirst_680rmw$;
  var RuntimeException_init_0 = Kotlin.kotlin.RuntimeException_init;
  var LinkedHashMapSerializer = $module$kotlinx_serialization_runtime_js.kotlinx.serialization.internal.LinkedHashMapSerializer;
  var first_0 = Kotlin.kotlin.collections.first_us0mfu$;
  var drop = Kotlin.kotlin.collections.drop_8ujjk8$;
  var Kind_INTERFACE = Kotlin.Kind.INTERFACE;
  var html = $module$kotlinx_html_js.kotlinx.html;
  var drop_0 = Kotlin.kotlin.collections.drop_ba2ldo$;
  var set_hidden = $module$kotlinx_html_js.kotlinx.html.set_hidden_jqpcbu$;
  var h1_0 = $module$kotlinx_html_js.kotlinx.html.h1_qzc46n$;
  var p_0 = $module$kotlinx_html_js.kotlinx.html.p_7ents2$;
  var DailyGuildMissingRequirement = $module$loritta_api.net.perfectdreams.loritta.utils.daily.DailyGuildMissingRequirement;
  var firstOrNull_0 = Kotlin.kotlin.collections.firstOrNull_us0mfu$;
  var Long = Kotlin.Long;
  var asSequence = Kotlin.kotlin.collections.asSequence_7wnvza$;
  var map = Kotlin.kotlin.sequences.map_z5avom$;
  var distinct_0 = Kotlin.kotlin.sequences.distinct_veqyi0$;
  var filter = Kotlin.kotlin.sequences.filter_euau3h$;
  var toList = Kotlin.kotlin.sequences.toList_veqyi0$;
  var table_1 = $module$kotlinx_html_js.kotlinx.html.table_llpdic$;
  var h2_0 = $module$kotlinx_html_js.kotlinx.html.h2_eh5gi3$;
  var sortedWith_0 = Kotlin.kotlin.sequences.sortedWith_vjgqpk$;
  var get_classes = $module$kotlinx_html_js.kotlinx.html.get_classes_fxodxh$;
  var plus = Kotlin.kotlin.collections.plus_xfiyik$;
  var set_classes = $module$kotlinx_html_js.kotlinx.html.set_classes_njy09m$;
  var toDoubleOrNull = Kotlin.kotlin.text.toDoubleOrNull_pdl1vz$;
  var dropLast = Kotlin.kotlin.text.dropLast_6ic1pp$;
  var UnsupportedOperationException_init = Kotlin.kotlin.UnsupportedOperationException_init_pdl1vj$;
  var iterator_0 = Kotlin.kotlin.js.iterator_s8jyvk$;
  LoriDashboard$SUMMARY.prototype = Object.create(HTMLTag.prototype);
  LoriDashboard$SUMMARY.prototype.constructor = LoriDashboard$SUMMARY;
  AudioRecordingRoute.prototype = Object.create(BaseRoute.prototype);
  AudioRecordingRoute.prototype.constructor = AudioRecordingRoute;
  CommandsRoute$LorittaJS.prototype = Object.create(LorittaBot.prototype);
  CommandsRoute$LorittaJS.prototype.constructor = CommandsRoute$LorittaJS;
  UpdateNavbarSizePostRender.prototype = Object.create(BaseRoute.prototype);
  UpdateNavbarSizePostRender.prototype.constructor = UpdateNavbarSizePostRender;
  CommandsRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  CommandsRoute.prototype.constructor = CommandsRoute;
  DashboardRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  DashboardRoute.prototype.constructor = DashboardRoute;
  DiscordBotBrasileiroRoute.prototype = Object.create(BaseRoute.prototype);
  DiscordBotBrasileiroRoute.prototype.constructor = DiscordBotBrasileiroRoute;
  FanArtsRoute$ArtistSortingMethod.prototype = Object.create(Enum.prototype);
  FanArtsRoute$ArtistSortingMethod.prototype.constructor = FanArtsRoute$ArtistSortingMethod;
  FanArtsRoute$FanArtSortingMethod.prototype = Object.create(Enum.prototype);
  FanArtsRoute$FanArtSortingMethod.prototype.constructor = FanArtsRoute$FanArtSortingMethod;
  FanArtsRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  FanArtsRoute.prototype.constructor = FanArtsRoute;
  AuditLogRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  AuditLogRoute.prototype.constructor = AuditLogRoute;
  BadgeRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  BadgeRoute.prototype.constructor = BadgeRoute;
  DailyMultiplierRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  DailyMultiplierRoute.prototype.constructor = DailyMultiplierRoute;
  GeneralConfigRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  GeneralConfigRoute.prototype.constructor = GeneralConfigRoute;
  GeneralDashboardRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  GeneralDashboardRoute.prototype.constructor = GeneralDashboardRoute;
  IFrameGeneralDashboardRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  IFrameGeneralDashboardRoute.prototype.constructor = IFrameGeneralDashboardRoute;
  LevelUpRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  LevelUpRoute.prototype.constructor = LevelUpRoute;
  PremiumKeyRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  PremiumKeyRoute.prototype.constructor = PremiumKeyRoute;
  RssFeedsRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  RssFeedsRoute.prototype.constructor = RssFeedsRoute;
  TwitterRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  TwitterRoute.prototype.constructor = TwitterRoute;
  HomeRoute.prototype = Object.create(BaseRoute.prototype);
  HomeRoute.prototype.constructor = HomeRoute;
  TranslateRoute.prototype = Object.create(UpdateNavbarSizePostRender.prototype);
  TranslateRoute.prototype.constructor = TranslateRoute;
  ActionType.prototype = Object.create(Enum.prototype);
  ActionType.prototype.constructor = ActionType;
  JsonObject.prototype = Object.create(JsonElement.prototype);
  JsonObject.prototype.constructor = JsonObject;
  LevelUpAnnouncementType.prototype = Object.create(Enum.prototype);
  LevelUpAnnouncementType.prototype.constructor = LevelUpAnnouncementType;
  WebsiteUtils$UserPermissionLevel.prototype = Object.create(Enum.prototype);
  WebsiteUtils$UserPermissionLevel.prototype.constructor = WebsiteUtils$UserPermissionLevel;
  WebsiteThemeUtils$WebsiteTheme.prototype = Object.create(Enum.prototype);
  WebsiteThemeUtils$WebsiteTheme.prototype.constructor = WebsiteThemeUtils$WebsiteTheme;
  PingCommand.prototype = Object.create(WebSocketCommand.prototype);
  PingCommand.prototype.constructor = PingCommand;
  CounterThemes.prototype = Object.create(Enum.prototype);
  CounterThemes.prototype.constructor = CounterThemes;
  ModerationConfig$PunishmentAction.prototype = Object.create(Enum.prototype);
  ModerationConfig$PunishmentAction.prototype.constructor = ModerationConfig$PunishmentAction;
  LorittaPartner$Keyword.prototype = Object.create(Enum.prototype);
  LorittaPartner$Keyword.prototype.constructor = LorittaPartner$Keyword;
  LorittaPartner$Language.prototype = Object.create(Enum.prototype);
  LorittaPartner$Language.prototype.constructor = LorittaPartner$Language;
  LorittaPartner$Type.prototype = Object.create(Enum.prototype);
  LorittaPartner$Type.prototype.constructor = LorittaPartner$Type;
  function JsonCreator() {
  }
  JsonCreator.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JsonCreator',
    interfaces: [Annotation]
  };
  function JsonProperty(name) {
    this.name = name;
  }
  JsonProperty.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JsonProperty',
    interfaces: [Annotation]
  };
  function ConfigureAutoroleView() {
    ConfigureAutoroleView_instance = this;
    this.serverConfig_jibg2x$_0 = this.serverConfig_jibg2x$_0;
  }
  Object.defineProperty(ConfigureAutoroleView.prototype, 'serverConfig', {
    get: function () {
      if (this.serverConfig_jibg2x$_0 == null)
        return throwUPAE('serverConfig');
      return this.serverConfig_jibg2x$_0;
    },
    set: function (serverConfig) {
      this.serverConfig_jibg2x$_0 = serverConfig;
    }
  });
  function ConfigureAutoroleView$start$lambda$ObjectLiteral() {
  }
  ConfigureAutoroleView$start$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function ConfigureAutoroleView$start$lambda$ObjectLiteral_0() {
  }
  ConfigureAutoroleView$start$lambda$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function ConfigureAutoroleView$start$lambda$lambda(str) {
    return str;
  }
  function ConfigureAutoroleView$start$lambda(this$ConfigureAutoroleView) {
    return function (it) {
      var tmp$;
      this$ConfigureAutoroleView.serverConfig = LoriDashboard_getInstance().loadServerConfig();
      var optionData = ArrayList_init();
      var $receiver = this$ConfigureAutoroleView.serverConfig.roles;
      var destination = ArrayList_init();
      var tmp$_0;
      for (tmp$_0 = 0; tmp$_0 !== $receiver.length; ++tmp$_0) {
        var element = $receiver[tmp$_0];
        if (!element.isPublicRole)
          destination.add_11rb$(element);
      }
      tmp$ = destination.iterator();
      while (tmp$.hasNext()) {
        var it_0 = tmp$.next();
        var option = new ConfigureAutoroleView$start$lambda$ObjectLiteral();
        option.id = it_0.id;
        var text = '<span style=' + '"' + 'font-weight: 600;' + '"' + '>' + it_0.name + '<\/span>';
        if (it_0.color != null) {
          text = '<span style=' + '"' + 'font-weight: 600; color: rgb(' + it_0.color.red + ', ' + it_0.color.green + ', ' + it_0.color.blue + ')' + '"' + '>' + it_0.name + '<\/span>';
        }
        option.text = text;
        if (!it_0.canInteract || it_0.isManaged) {
          if (it_0.isManaged) {
            option.text = text + ' <span class=' + '"' + 'keyword' + '"' + ' style=' + '"' + 'background-color: rgb(225, 149, 23);' + '"' + '>' + get_legacyLocale().get_25kzsl$('DASHBOARD_RoleByIntegration', []) + '<\/span>';
          }
           else {
            option.text = text + ' <span class=' + '"' + 'keyword' + '"' + ' style=' + '"' + 'background-color: rgb(231, 76, 60);' + '"' + '>' + get_legacyLocale().get_25kzsl$('DASHBOARD_NoPermission', []) + '<\/span>';
          }
        }
        optionData.add_11rb$(option);
      }
      var options = new ConfigureAutoroleView$start$lambda$ObjectLiteral_0();
      options.data = copyToArray(optionData);
      options.escapeMarkup = ConfigureAutoroleView$start$lambda$lambda;
      jq('#chooseRole').select2(options);
      var $receiver_0 = this$ConfigureAutoroleView.serverConfig.autoroleConfig.roles;
      var destination_0 = ArrayList_init();
      var tmp$_1;
      loop_label: for (tmp$_1 = 0; tmp$_1 !== $receiver_0.length; ++tmp$_1) {
        var element_0 = $receiver_0[tmp$_1];
        var tmp$_0_0;
        var $receiver_1 = this$ConfigureAutoroleView.serverConfig.roles;
        var firstOrNull$result;
        firstOrNull$break: do {
          var tmp$_2;
          for (tmp$_2 = 0; tmp$_2 !== $receiver_1.length; ++tmp$_2) {
            var element_1 = $receiver_1[tmp$_2];
            if (equals(element_1.id, element_0)) {
              firstOrNull$result = element_1;
              break firstOrNull$break;
            }
          }
          firstOrNull$result = null;
        }
         while (false);
        if ((tmp$_0_0 = firstOrNull$result) != null) {
          destination_0.add_11rb$(tmp$_0_0);
        }
      }
      var roleList = destination_0;
      var tmp$_3;
      tmp$_3 = roleList.iterator();
      while (tmp$_3.hasNext()) {
        var element_2 = tmp$_3.next();
        this$ConfigureAutoroleView.addRoleToAutoroleList_xat1sd$(element_2);
      }
      LoriDashboard_getInstance().applyBlur_iiwsaa$('#hiddenIfDisabled', '#cmn-toggle-1');
      if (!contains(this$ConfigureAutoroleView.serverConfig.permissions, 'ADMINISTRATOR') && !contains(this$ConfigureAutoroleView.serverConfig.permissions, 'MANAGE_ROLES')) {
        LoriDashboard_getInstance().enableBlur_61zpoe$('#autoroleConfigurationWrapper');
        jq('#requiresPermission').html(get_legacyLocale().get_25kzsl$('DASHBOARD_HeyINeedPermission', ['<b>' + get_legacyLocale().get_25kzsl$('PERMISSION_MANAGE_ROLES', []) + '<\/b>']));
      }
      return Unit;
    };
  }
  ConfigureAutoroleView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ConfigureAutoroleView$start$lambda(this));
  };
  function ConfigureAutoroleView$addRoleToAutoroleList$lambda(closure$tr) {
    return function (it) {
      closure$tr.remove();
      return Unit;
    };
  }
  ConfigureAutoroleView.prototype.addRoleToAutoroleList_xat1sd$ = function (role) {
    var td = jq('<td>').attr('role-id', role.id).addClass('role-entry');
    var roleSpan = jq('<span>').text('@' + role.name).addClass('discord-mention');
    if (role.color != null) {
      roleSpan.css('color', 'rgb(' + role.color.red + ', ' + role.color.green + ', ' + role.color.blue + ')');
      roleSpan.css('background-color', 'rgba(' + role.color.red + ', ' + role.color.green + ', ' + role.color.blue + ', 0.298039)');
    }
    td.append(roleSpan);
    var tr = jq('<tr>').append(td);
    tr.click(ConfigureAutoroleView$addRoleToAutoroleList$lambda(tr));
    jq('#roleTable').append(tr);
  };
  function ConfigureAutoroleView$addRoleFromSelection$lambda(closure$modal) {
    return function () {
      closure$modal.close();
      window.location.reload();
      return Unit;
    };
  }
  function ConfigureAutoroleView$addRoleFromSelection$lambda_0(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  ConfigureAutoroleView.prototype.addRoleFromSelection = function () {
    var tmp$;
    var roleId = typeof (tmp$ = jq('#chooseRole option:selected').val()) === 'string' ? tmp$ : throwCCE();
    println('Adding role ' + roleId + ' to the selection...');
    var $receiver = this.serverConfig.roles;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$_0;
      for (tmp$_0 = 0; tmp$_0 !== $receiver.length; ++tmp$_0) {
        var element = $receiver[tmp$_0];
        if (equals(element.id, roleId)) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    var role = firstOrNull$result;
    if (role != null) {
      if (role.isManaged || !role.canInteract) {
        var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
        if (role.isManaged) {
          modal.setContent(jq('<div>').append(jq('<div>').addClass('category-name').text(get_legacyLocale().get_25kzsl$('DASHBOARD_RoleByIntegration', []))).append(jq('<div>').css('text-align', 'center').append(jq('<p>').text('Cargos criados por integra\xE7\xF5es (por exemplo: ao adicionar um bot) n\xE3o podem ser utilizados para dar cargos para outros membros!'))).html());
        }
         else {
          modal.setContent(jq('<div>').append(jq('<div>').addClass('category-name').text(get_legacyLocale().get_25kzsl$('DASHBOARD_NoPermission', []))).append(jq('<div>').css('text-align', 'center').append(jq('<img>').attr('src', 'https://mrpowergamerbr.com/uploads/2018-06-16_19-37-17.gif'))).append(jq('<div>').css('text-align', 'center').append(jq('<p>').text('Atualmente eu n\xE3o consigo dar o cargo que voc\xEA deseja porque eu n\xE3o tenho permiss\xE3o para isto... \uD83D\uDE2D')).append(jq('<p>').text('Para eu conseguir dar este cargo, mova o meu cargo para acima do cargo que voc\xEA deseja dar na lista de cargos do seu Discord!'))).html());
          modal.addFooterBtn('<i class="far fa-thumbs-up"><\/i> J\xE1 arrumei!', 'button-discord button-discord-info pure-button button-discord-modal', ConfigureAutoroleView$addRoleFromSelection$lambda(modal));
        }
        modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', ConfigureAutoroleView$addRoleFromSelection$lambda_0(modal));
        modal.open();
        return;
      }
      this.addRoleToAutoroleList_xat1sd$(role);
    }
  };
  function ConfigureAutoroleView$prepareSave$lambda$lambda(closure$roles) {
    return function (index, elem) {
      var el = jQuery(elem);
      var entry = el.find('.role-entry');
      return closure$roles.add_11rb$(entry.attr('role-id'));
    };
  }
  function ConfigureAutoroleView$prepareSave$lambda(payload) {
    var tmp$;
    var roles = ArrayList_init();
    var rolesVoteRewards = ArrayList_init();
    jq('#roleTable').children().each(ConfigureAutoroleView$prepareSave$lambda$lambda(roles));
    payload['roles'] = roles;
    payload['giveRolesAfter'] = toIntOrNull((Kotlin.isType(tmp$ = page.getElementById_61zpoe$('give-roles-after'), HTMLInputElement) ? tmp$ : throwCCE()).value);
    payload['rolesVoteRewards'] = rolesVoteRewards;
    return Unit;
  }
  ConfigureAutoroleView.prototype.prepareSave = function () {
    SaveStuff_getInstance().prepareSave('autorole', ConfigureAutoroleView$prepareSave$lambda);
  };
  ConfigureAutoroleView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ConfigureAutoroleView',
    interfaces: []
  };
  var ConfigureAutoroleView_instance = null;
  function ConfigureAutoroleView_getInstance() {
    if (ConfigureAutoroleView_instance === null) {
      new ConfigureAutoroleView();
    }
    return ConfigureAutoroleView_instance;
  }
  function ConfigureEconomyView() {
    ConfigureEconomyView_instance = this;
  }
  function ConfigureEconomyView$start$lambda$lambda$lambda(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function ConfigureEconomyView$start$lambda$lambda$lambda_0(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function ConfigureEconomyView$start$lambda$lambda(it) {
    var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
    modal.addFooterBtn('<i class="fas fa-plus"><\/i> Adicionar', 'button-discord button-discord-info pure-button button-discord-modal', ConfigureEconomyView$start$lambda$lambda$lambda(modal));
    modal.addFooterBtn('<i class="fas fa-times"><\/i> Cancelar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', ConfigureEconomyView$start$lambda$lambda$lambda_0(modal));
    var template = jq('#new-item-modal-template').clone();
    template.find('.sectionHeader').text('Novo Item');
    modal.setContent(template.html());
    modal.open();
    return Unit;
  }
  function ConfigureEconomyView$start$lambda(it) {
    var serverConfig = LoriDashboard_getInstance().loadServerConfig();
    LoriDashboard_getInstance().applyBlur_iiwsaa$('#hiddenIfDisabled', '#cmn-toggle-1');
    LoriDashboard_getInstance().applyBlur_iiwsaa$('#hiddenIfDisabled2', '#cmn-toggle-2');
    var addShopItemObj = jq('#add-new-shop-item');
    var customCurrencyNameObj = jq('#customCurrencyName');
    var exchangeRateObj = jq('#exchangeRate');
    exchangeRateObj.change();
    addShopItemObj.click(ConfigureEconomyView$start$lambda$lambda);
    return Unit;
  }
  ConfigureEconomyView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ConfigureEconomyView$start$lambda);
  };
  function ConfigureEconomyView$prepareSave$lambda(it) {
    var tmp$;
    var enableDreamExchange = typeof (tmp$ = it['enableDreamExchange']) === 'boolean' ? tmp$ : throwCCE();
    delete(it['enableDreamExchange']);
    if (!enableDreamExchange)
      it['exchangeRate'] = null;
    return Unit;
  }
  ConfigureEconomyView.prototype.prepareSave = function () {
    SaveStuff_getInstance().prepareSave('economy', ConfigureEconomyView$prepareSave$lambda);
  };
  ConfigureEconomyView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ConfigureEconomyView',
    interfaces: []
  };
  var ConfigureEconomyView_instance = null;
  function ConfigureEconomyView_getInstance() {
    if (ConfigureEconomyView_instance === null) {
      new ConfigureEconomyView();
    }
    return ConfigureEconomyView_instance;
  }
  function ConfigureMemberCounterView() {
    ConfigureMemberCounterView_instance = this;
    this.MAX_DONATOR_TOGGLES = 3;
    this.MAX_USER_TOGGLES = 1;
    this.serverConfig_m42ga0$_0 = this.serverConfig_m42ga0$_0;
  }
  Object.defineProperty(ConfigureMemberCounterView.prototype, 'serverConfig', {
    get: function () {
      if (this.serverConfig_m42ga0$_0 == null)
        return throwUPAE('serverConfig');
      return this.serverConfig_m42ga0$_0;
    },
    set: function (serverConfig) {
      this.serverConfig_m42ga0$_0 = serverConfig;
    }
  });
  function ConfigureMemberCounterView$start$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Tema do contador de membros');
    return Unit;
  }
  function ConfigureMemberCounterView$start$lambda$lambda$lambda$lambda(closure$memberCounterConfig, closure$theme) {
    return function ($receiver) {
      if (closure$memberCounterConfig != null) {
        $receiver.selected = equals(closure$theme.name, closure$memberCounterConfig.theme);
      }
      $receiver.value = closure$theme.name;
      $receiver.unaryPlus_pdl1vz$(get_locale().get_25kzsl$(closure$theme.localizedName, []));
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda$lambda$lambda_0(closure$memberCounterConfig) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      tmp$ = CounterThemes$values();
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var theme = tmp$[tmp$_0];
        option($receiver, void 0, ConfigureMemberCounterView$start$lambda$lambda$lambda$lambda(closure$memberCounterConfig, theme));
      }
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Preenchimento com Zeros');
    return Unit;
  }
  function ConfigureMemberCounterView$start$lambda$lambda$lambda_2(closure$memberCounterConfig) {
    return function ($receiver) {
      var tmp$;
      $receiver.min = '1';
      $receiver.max = '10';
      $receiver.value = ((tmp$ = closure$memberCounterConfig != null ? closure$memberCounterConfig.padding : null) != null ? tmp$ : 5).toString();
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda$lambda$lambda_3($receiver) {
    $receiver.unaryPlus_pdl1vz$('Aqui ir\xE1 ficar a preview do contador, quando existir... algum dia');
    return Unit;
  }
  function ConfigureMemberCounterView$start$lambda$lambda(closure$memberCounterConfig) {
    return function ($receiver) {
      div($receiver, 'flavourText', ConfigureMemberCounterView$start$lambda$lambda$lambda);
      select($receiver, 'counter-theme', ConfigureMemberCounterView$start$lambda$lambda$lambda_0(closure$memberCounterConfig));
      div($receiver, 'flavourText', ConfigureMemberCounterView$start$lambda$lambda$lambda_1);
      input_0($receiver, InputType.number, void 0, void 0, void 0, 'counter-padding', ConfigureMemberCounterView$start$lambda$lambda$lambda_2(closure$memberCounterConfig));
      div($receiver, 'counter-preview', ConfigureMemberCounterView$start$lambda$lambda$lambda_3);
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda$lambda_0(closure$selectThemeElement, closure$counterPreviewElement, closure$counterPaddingElement) {
    return function () {
      var theme = CounterThemes$valueOf(closure$selectThemeElement.value);
      clear(closure$counterPreviewElement);
      var padding = toInt(closure$counterPaddingElement.value);
      var counterBuilder5 = CounterUtils_getInstance().generatePrettyCounterHtml_829qsp$(5, theme, padding);
      appendBuilder(closure$counterPreviewElement, counterBuilder5);
      var counterBuilder10 = CounterUtils_getInstance().generatePrettyCounterHtml_829qsp$(10, theme, padding);
      appendBuilder(closure$counterPreviewElement, counterBuilder10);
      var counterBuilder250 = CounterUtils_getInstance().generatePrettyCounterHtml_829qsp$(250, theme, padding);
      appendBuilder(closure$counterPreviewElement, counterBuilder250);
      var counterBuilderAllChars = CounterUtils_getInstance().generatePrettyCounterHtml_829qsp$(1234567890, theme, padding);
      appendBuilder(closure$counterPreviewElement, counterBuilderAllChars);
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda$lambda_1(closure$callback) {
    return function (it) {
      closure$callback();
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda$lambda_2(closure$callback) {
    return function (it) {
      closure$callback();
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda$lambda_3(closure$toggle, closure$howManyTogglesCanBeEnabled) {
    return function (it) {
      var theToggle = jq('#cmn-toggle-' + closure$toggle.first);
      println('Something was changed! ' + theToggle.is(':checked'));
      if (theToggle.is(':checked')) {
        var tmp$;
        var $receiver = Kotlin.isType(tmp$ = asList(document.querySelectorAll('.cmn-toggle')), List) ? tmp$ : throwCCE();
        var destination = ArrayList_init();
        var tmp$_0;
        tmp$_0 = $receiver.iterator();
        while (tmp$_0.hasNext()) {
          var element = tmp$_0.next();
          if (element.checked)
            destination.add_11rb$(element);
        }
        var enabledToggles = destination;
        var howManyTogglesAreEnabled = enabledToggles.size;
        println('There are ' + howManyTogglesAreEnabled + ' enabled toggles');
        if (howManyTogglesAreEnabled > closure$howManyTogglesCanBeEnabled) {
          println('too many toggles enabled! ' + howManyTogglesAreEnabled + ' > ' + closure$howManyTogglesCanBeEnabled + ', untoggling... max is ' + '1');
          it.preventDefault();
          it.stopPropagation();
          if (closure$howManyTogglesCanBeEnabled >= 1) {
            println('showing premium modal');
            Stuff_getInstance().showPremiumFeatureModal();
          }
        }
      }
      return Unit;
    };
  }
  function ConfigureMemberCounterView$start$lambda(this$ConfigureMemberCounterView) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12;
      this$ConfigureMemberCounterView.serverConfig = LoriDashboard_getInstance().loadServerConfig();
      println((tmp$ = this$ConfigureMemberCounterView.serverConfig.donationKey) != null ? tmp$.value : null);
      if (((tmp$_1 = (tmp$_0 = this$ConfigureMemberCounterView.serverConfig.donationKey) != null ? tmp$_0.value : null) != null ? tmp$_1 : 0.0) >= 19.99) {
        tmp$_2 = 3;
      }
       else {
        tmp$_2 = 1;
      }
      var howManyTogglesCanBeEnabled = tmp$_2;
      println('User can enable ' + howManyTogglesCanBeEnabled + ' toggles! ' + (((tmp$_4 = (tmp$_3 = this$ConfigureMemberCounterView.serverConfig.donationKey) != null ? tmp$_3.value : null) != null ? tmp$_4 : 0.0) >= 19.99));
      var textChannels = jq('#member-counter-list');
      tmp$_5 = this$ConfigureMemberCounterView.serverConfig.textChannels;
      for (tmp$_6 = 0; tmp$_6 !== tmp$_5.length; ++tmp$_6) {
        var textChannel = tmp$_5[tmp$_6];
        var memberCounterConfig = getTextChannelConfig(this$ConfigureMemberCounterView.serverConfig, textChannel).memberCounterConfig;
        var entry = jq('<div>').attr('data-text-channel-id', textChannel.id);
        entry.append(jq('<div>').attr('class', 'flavourText').text('#' + textChannel.name));
        var toggle = LoriDashboard_getInstance().createToggle_8jgccd$('enableCounter', 'Ativar contador de membros', 'Ap\xF3s ativar, utilize {counter} no texto do seu t\xF3pico para ativar o contador!', false, memberCounterConfig != null);
        var jToggle = toggle.second;
        entry.append(jToggle);
        var textAreaWrapper = jq('<div>').attr('id', 'text-area-wrapper-' + textChannel.id);
        entry.append(jq('<div>').attr('class', 'flavourText').text('T\xF3pico do Canal (Ser\xE1 utilizado ap\xF3s algu\xE9m entrar/sair)'));
        tmp$_9 = jq('<textarea>').attr('id', 'text-area-' + textChannel.id);
        if (memberCounterConfig == null) {
          println("Using text channel's topic!");
          tmp$_8 = (tmp$_7 = textChannel.topic) != null ? tmp$_7 : '';
        }
         else {
          println("Using member counter's topic!");
          tmp$_8 = memberCounterConfig.topic;
        }
        textAreaWrapper.append(tmp$_9.val(tmp$_8));
        appendBuilder(ensureNotNull(textAreaWrapper[0]), div_0(appendHTML(StringBuilder_init(), false), void 0, ConfigureMemberCounterView$start$lambda$lambda(memberCounterConfig)));
        entry.append(textAreaWrapper);
        var selectThemeElement = Kotlin.isType(tmp$_10 = ensureNotNull(ensureNotNull(entry[0]).querySelector('.counter-theme')), HTMLSelectElement) ? tmp$_10 : throwCCE();
        var counterPaddingElement = Kotlin.isType(tmp$_11 = ensureNotNull(ensureNotNull(entry[0]).querySelector('.counter-padding')), HTMLInputElement) ? tmp$_11 : throwCCE();
        var counterPreviewElement = Kotlin.isType(tmp$_12 = ensureNotNull(ensureNotNull(entry[0]).querySelector('.counter-preview')), HTMLDivElement) ? tmp$_12 : throwCCE();
        var callback = ConfigureMemberCounterView$start$lambda$lambda_0(selectThemeElement, counterPreviewElement, counterPaddingElement);
        selectThemeElement.onchange = ConfigureMemberCounterView$start$lambda$lambda_1(callback);
        counterPaddingElement.onchange = ConfigureMemberCounterView$start$lambda$lambda_2(callback);
        callback();
        entry.append('<hr>');
        textChannels.append(entry);
        LoriDashboard_getInstance().applyBlur_iiwsaa$('#text-area-wrapper-' + textChannel.id, '#cmn-toggle-' + toggle.first.toString());
        jq('#cmn-toggle-' + toggle.first).click(ConfigureMemberCounterView$start$lambda$lambda_3(toggle, howManyTogglesCanBeEnabled));
      }
      return Unit;
    };
  }
  ConfigureMemberCounterView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ConfigureMemberCounterView$start$lambda(this));
  };
  function ConfigureMemberCounterView$prepareSave$lambda$lambda$ObjectLiteral() {
  }
  ConfigureMemberCounterView$prepareSave$lambda$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function ConfigureMemberCounterView$prepareSave$lambda$lambda(closure$entries) {
    return function (index, _elem) {
      var tmp$, tmp$_0, tmp$_1;
      var elem = jQuery(_elem);
      var textChannelId = elem.attr('data-text-channel-id');
      var isEnabled = elem.find('.cmn-toggle').is(':checked');
      if (isEnabled) {
        var dyn = new ConfigureMemberCounterView$prepareSave$lambda$lambda$ObjectLiteral();
        dyn.id = textChannelId;
        dyn.memberCounterConfig = new MemberCounterConfig(typeof (tmp$ = elem.find('#text-area-' + textChannelId).val()) === 'string' ? tmp$ : throwCCE(), typeof (tmp$_0 = elem.find('.counter-theme').val()) === 'string' ? tmp$_0 : throwCCE(), toInt(typeof (tmp$_1 = elem.find('.counter-padding').val()) === 'string' ? tmp$_1 : throwCCE()));
        closure$entries.add_11rb$(dyn);
      }
      return Unit;
    };
  }
  function ConfigureMemberCounterView$prepareSave$lambda(it) {
    var entries = ArrayList_init();
    var divs = jq('[data-text-channel-id]');
    divs.each(ConfigureMemberCounterView$prepareSave$lambda$lambda(entries));
    it['entries'] = entries;
    return Unit;
  }
  ConfigureMemberCounterView.prototype.prepareSave = function () {
    SaveStuff_getInstance().prepareSave('text_channels', ConfigureMemberCounterView$prepareSave$lambda);
  };
  ConfigureMemberCounterView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ConfigureMemberCounterView',
    interfaces: []
  };
  var ConfigureMemberCounterView_instance = null;
  function ConfigureMemberCounterView_getInstance() {
    if (ConfigureMemberCounterView_instance === null) {
      new ConfigureMemberCounterView();
    }
    return ConfigureMemberCounterView_instance;
  }
  function ConfigureMiscellaneousConfig() {
    ConfigureMiscellaneousConfig_instance = this;
  }
  function ConfigureMiscellaneousConfig$start$lambda(it) {
    var serverConfig = LoriDashboard_getInstance().loadServerConfig();
    return Unit;
  }
  ConfigureMiscellaneousConfig.prototype.start = function () {
    LoriDashboard_getInstance().showLoadingBar_pdl1vj$(get_locale().get_25kzsl$('loritta.loading', []) + '...');
    document.addEventListener('DOMContentLoaded', ConfigureMiscellaneousConfig$start$lambda);
  };
  ConfigureMiscellaneousConfig.prototype.prepareSave = function () {
    SaveStuff_getInstance().prepareSave('miscellaneous');
  };
  ConfigureMiscellaneousConfig.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ConfigureMiscellaneousConfig',
    interfaces: []
  };
  var ConfigureMiscellaneousConfig_instance = null;
  function ConfigureMiscellaneousConfig_getInstance() {
    if (ConfigureMiscellaneousConfig_instance === null) {
      new ConfigureMiscellaneousConfig();
    }
    return ConfigureMiscellaneousConfig_instance;
  }
  function ConfigureModerationView() {
    ConfigureModerationView_instance = this;
  }
  function ConfigureModerationView$start$lambda$lambda(this$ConfigureModerationView) {
    return function (it) {
      this$ConfigureModerationView.addPunishment_a3smtl$(new ModerationConfig$WarnAction(1, ModerationConfig$PunishmentAction$BAN_getInstance(), null));
      return Unit;
    };
  }
  function ConfigureModerationView$start$lambda(this$ConfigureModerationView) {
    return function (it) {
      var tmp$, tmp$_0;
      var serverConfig = LoriDashboard_getInstance().loadServerConfig();
      tmp$ = serverConfig.moderationConfig.punishmentActions;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var punishment = tmp$[tmp$_0];
        this$ConfigureModerationView.addPunishment_a3smtl$(punishment);
      }
      LoriDashboard_getInstance().applyBlur_iiwsaa$('#hiddenIfDisabled', '#cmn-toggle-2');
      LoriDashboard_getInstance().configureTextChannelSelect_mtmww3$(jq('#punishmentLogChannelId'), serverConfig, serverConfig.moderationConfig.punishmentLogChannelId);
      jq('.add-new-action').click(ConfigureModerationView$start$lambda$lambda(this$ConfigureModerationView));
      var tmp$_1 = LoriDashboard_getInstance();
      var tmp$_2 = jq('#punishmentLogMessage');
      var tmp$_3 = jq('#punishmentLogChannelId');
      var $receiver = toMutableMap(Placeholders_getInstance().DEFAULT_PLACEHOLDERS);
      $receiver.put_xwzc9p$('reason', 'Motivo da puni\xE7\xE3o, caso nenhum motivo tenha sido especificado, isto estar\xE1 vazio');
      $receiver.put_xwzc9p$('punishment', 'Puni\xE7\xE3o aplicada (ban, mute, kick, etc)');
      $receiver.put_xwzc9p$('staff', 'Mostra o nome do usu\xE1rio que fez a puni\xE7\xE3o');
      $receiver.put_xwzc9p$('@staff', 'Menciona o usu\xE1rio que fez a puni\xE7\xE3o');
      $receiver.put_xwzc9p$('staff-discriminator', 'Mostra o discriminator do usu\xE1rio que fez a puni\xE7\xE3o');
      $receiver.put_xwzc9p$('staff-id', 'Mostra o ID do usu\xE1rio que fez a puni\xE7\xE3o');
      $receiver.put_xwzc9p$('staff-avatar-url', 'Mostra a URL do avatar do usu\xE1rio que fez a puni\xE7\xE3o');
      tmp$_1.configureTextArea_qx4uyf$(tmp$_2, true, serverConfig, true, tmp$_3, true, $receiver);
      return Unit;
    };
  }
  ConfigureModerationView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ConfigureModerationView$start$lambda(this));
  };
  function ConfigureModerationView$addPunishment$lambda(closure$action) {
    return function (it) {
      closure$action.remove();
      return Unit;
    };
  }
  function ConfigureModerationView$addPunishment$lambda_0(closure$action) {
    return function (it) {
      var punishmentAction = ModerationConfig$PunishmentAction$valueOf(closure$action.find('.apply-punishment').val());
      if (equals(punishmentAction.toString(), ModerationConfig$PunishmentAction$MUTE_getInstance().toString())) {
        closure$action.find('.customMetadata').css('height', '48px');
      }
       else {
        closure$action.find('.customMetadata').css('height', '0px');
      }
      return Unit;
    };
  }
  ConfigureModerationView.prototype.addPunishment_a3smtl$ = function (warnAction) {
    var tmp$, tmp$_0;
    var action = jq('<div>').append(jq('<button>').attr('class', 'button-discord button-discord-info pure-button remove-action').html('<i class="fas fa-trash"><\/i>')).append(' Ao chegar em ').append(jq('<input>').attr('type', 'number').attr('min', 1).val(warnAction.warnCount).attr('class', 'warnCount')).append(' avisos, ').append("<select class='apply-punishment'>").append(' o usu\xE1rio').append(jq('<div>').css('height', '0px').css('overflow', 'hidden').css('transition', '2s').addClass('customMetadata').append('O usu\xE1rio dever\xE1 ser silenciado por ').append(jq('<input>').attr('type', 'text').attr('placeholder', '30 minutos').val(warnAction.customMetadata0).attr('class', 'customMetadata0')));
    if (equals(warnAction.punishmentAction.toString(), ModerationConfig$PunishmentAction$MUTE_getInstance().toString())) {
      action.find('.customMetadata').css('height', '48px');
    }
    jq('#warnActions').append(action);
    action.find('.remove-action').click(ConfigureModerationView$addPunishment$lambda(action));
    var applyPunishment = action.find('.apply-punishment');
    tmp$ = ModerationConfig$PunishmentAction$values();
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var punishment = tmp$[tmp$_0];
      var option = jq('<option>').attr('name', get_legacyLocale().get_25kzsl$(replace(punishment.toString(), '_', '') + '_PunishName', [])).attr('value', punishment.toString()).text(get_legacyLocale().get_25kzsl$(replace(punishment.toString(), '_', '') + '_PunishName', []));
      if (equals(warnAction.punishmentAction.toString(), punishment.toString())) {
        option.attr('selected', 'selected');
      }
      applyPunishment.append(option);
    }
    jq('.apply-punishment').click(ConfigureModerationView$addPunishment$lambda_0(action));
  };
  function ConfigureModerationView$prepareSave$lambda$lambda(closure$actions) {
    return function (index, elem) {
      var el = jQuery(elem);
      var json_0 = json([]);
      var punishmentAction = ModerationConfig$PunishmentAction$valueOf(el.find('.apply-punishment').val());
      json_0['punishmentAction'] = punishmentAction.toString();
      json_0['warnCount'] = el.find('.warnCount').val();
      if (equals(punishmentAction.toString(), ModerationConfig$PunishmentAction$MUTE_getInstance().toString())) {
        json_0['customMetadata0'] = el.find('.customMetadata0').val();
      }
      return closure$actions.add_11rb$(json_0);
    };
  }
  function ConfigureModerationView$prepareSave$lambda(payload) {
    var actions = ArrayList_init();
    var warnActions = jq('#warnActions');
    var children = warnActions.children();
    children.each(ConfigureModerationView$prepareSave$lambda$lambda(actions));
    payload['punishmentActions'] = actions;
    return Unit;
  }
  ConfigureModerationView.prototype.prepareSave = function () {
    SaveStuff_getInstance().prepareSave('moderation', ConfigureModerationView$prepareSave$lambda);
  };
  ConfigureModerationView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ConfigureModerationView',
    interfaces: []
  };
  var ConfigureModerationView_instance = null;
  function ConfigureModerationView_getInstance() {
    if (ConfigureModerationView_instance === null) {
      new ConfigureModerationView();
    }
    return ConfigureModerationView_instance;
  }
  function ConfigureProfileView() {
    ConfigureProfileView_instance = this;
  }
  ConfigureProfileView.prototype.start = function () {
  };
  ConfigureProfileView.prototype.prepareSave = function () {
    println('Preparing save... wow!');
    SaveStuff_getInstance().prepareSave('profile', void 0, void 0, get_loriUrl() + 'api/v1/user/self-profile');
  };
  ConfigureProfileView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ConfigureProfileView',
    interfaces: []
  };
  var ConfigureProfileView_instance = null;
  function ConfigureProfileView_getInstance() {
    if (ConfigureProfileView_instance === null) {
      new ConfigureProfileView();
    }
    return ConfigureProfileView_instance;
  }
  function ConfigureWelcomerView() {
    ConfigureWelcomerView_instance = this;
  }
  function ConfigureWelcomerView$start$lambda(it) {
    var serverConfig = LoriDashboard_getInstance().loadServerConfig();
    if (serverConfig.joinLeaveConfig.deleteJoinMessagesAfter != null)
      jq('#deleteJoinMessagesAfter').val(ensureNotNull(serverConfig.joinLeaveConfig.deleteJoinMessagesAfter));
    if (serverConfig.joinLeaveConfig.deleteLeaveMessagesAfter != null)
      jq('#deleteLeaveMessagesAfter').val(ensureNotNull(serverConfig.joinLeaveConfig.deleteLeaveMessagesAfter));
    LoriDashboard_getInstance().applyBlur_iiwsaa$('#hiddenIfDisabled', '#cmn-toggle-1');
    LoriDashboard_getInstance().configureTextChannelSelect_mtmww3$(jq('#canalJoinId'), serverConfig, serverConfig.joinLeaveConfig.canalJoinId);
    LoriDashboard_getInstance().configureTextChannelSelect_mtmww3$(jq('#canalLeaveId'), serverConfig, serverConfig.joinLeaveConfig.canalLeaveId);
    LoriDashboard_getInstance().configureTextArea_qx4uyf$(jq('#joinMessage'), true, serverConfig, true, jq('#canalJoinId'), true, Placeholders_getInstance().DEFAULT_PLACEHOLDERS, true, mapOf([to('Padr\xE3o', '\uD83D\uDC49 {@user} entrou no servidor!'), to('Padr\xE3o, s\xF3 que melhor', '<a:lori_happy:521721811298156558> | {@user} acabou de entrar na {guild}! Agora temos {guild-size} membros!'), to('Lista de Informa\xE7\xF5es', '{@user}, bem-vindo(a) ao {guild}! <a:lori_happy:521721811298156558>\n\u2022 Leia as #regras *(psiu, troque o nome do canal aqui na mensagem!)* para voc\xEA poder conviver em harmonia! <:blobheart:467447056374693889>\n\u2022 Converse no canal de #bate-papo <:lori_pac:503600573741006863>\n\u2022 E \xE9 claro, divirta-se! <a:emojo_feriado:393751205308006421>\n\nAli\xE1s, continue sendo incr\xEDvel! (E eu sou muito fofa! :3)'), to('Embed Simples', '{\n   "content":"{@user}",\n   "embed":{\n      "color":-9270822,\n      "title":"\uD83D\uDC4BSeja bem-vindo(a)!",\n      "description":"Ol\xE1 {@user}! Seja bem-vindo(a) ao {guild}!"\n   }\n}'), to('Embed com Avatar', '{\n   "content":"{@user}",\n   "embed":{\n      "color":-9270822,\n      "title":"\uD83D\uDC4BBem-vindo(a)!",\n      "description":"Ol\xE1 {@user}, espero que voc\xEA se divirta no meu servidor! <:loritta:331179879582269451>",\n      "author":{\n         "name":"{user}#{user-discriminator}",\n         "icon_url":"{user-avatar-url}"\n      },\n      "thumbnail":{\n         "url":"{user-avatar-url}"\n      },\n    "footer": {\n      "text": "ID do usu\xE1rio: {user-id}"\n    }\n   }\n}'), to('Embed com Avatar e Imagem', '{\n   "content":"{@user}",\n   "embed":{\n      "color":-9270822,\n      "title":"\uD83D\uDC4BBem-vindo(a)!",\n      "description":"Ol\xE1 {@user}, espero que voc\xEA se divirta no meu servidor! <:loritta:331179879582269451>",\n      "author":{\n         "name":"{user}#{user-discriminator}",\n         "icon_url":"{user-avatar-url}"\n      },\n      "thumbnail":{\n         "url":"{user-avatar-url}"\n      },\n\t  "image": {\n\t     "url": "https://media.giphy.com/media/GPQBFuG4ABACA/source.gif"\n\t  },\n    "footer": {\n      "text": "ID do usu\xE1rio: {user-id}"\n    }\n   }\n}'), to('Embed com Informa\xE7\xF5es', '{\n   "content":"{@user}",\n   "embed":{\n      "color":-14689638 ,\n      "title":"{user}#{user-discriminator} | Bem-vindo(a)!",\n      "thumbnail": {\n         "url" : "{user-avatar-url}"\n      },\n      "description":"<:lori_hug:515328576611155968> Ol\xE1, seja bem-vindo(a) ao {guild}!",\n      "fields": [\n        {\n            "name": "\uD83D\uDC4B Sabia que...",\n            "value": "Voc\xEA \xE9 o {guild-size}\xBA membro aqui no servidor?",\n            "inline": true\n        },\n        {\n            "name": "\uD83D\uDEE1 Tag do Usu\xE1rio",\n            "value": "`{user}#{user-discriminator}` ({user-id})",\n            "inline": true\n        },\n        {\n            "name": "\uD83D\uDCDB Precisando de ajuda?",\n            "value": "Caso voc\xEA tenha alguma d\xFAvida ou problema, chame a nossa equipe!",\n            "inline": true\n        },\n        {\n            "name": "\uD83D\uDC6E Evite puni\xE7\xF5es!",\n            "value": "Leia as nossas #regras para evitar ser punido no servidor!",\n            "inline": true\n        }\n      ],\n    "footer": {\n      "text": "{guild} \u2022 \xA9 Todos os direitos reservados."\n    }\n   }\n}'), to('Kit Social Influencer\u2122', '{\n   "content":"{@user}",\n   "embed":{\n      "color":-2342853,\n      "title":"{user}#{user-discriminator} | Bem-vindo(a)!",\n      "thumbnail": {\n         "url" : "{user-avatar-url}"\n      },\n      "description":"Salve {@user}! Voc\xEA acabou de entrar no servidor do {guild}, aqui voc\xEA poder\xE1 se interagir com f\xE3s do {guild}, conversar sobre suas coisas favoritas e muito mais!",\n      "fields": [\n        {\n            "name": "\uD83D\uDCE2 Fique atento!",\n            "value": "Novos v\xEDdeos do {guild} ser\xE3o anunciados no #v\xEDdeos-novos!",\n            "inline": true\n        },\n        {\n            "name": "\uD83D\uDCFA Inscreva-se no canal se voc\xEA ainda n\xE3o \xE9 inscrito! ",\n            "value": "[Canal](https://www.youtube.com/channel/UC-eeXSRZ8cO-i2NZYrWGDnQ)",\n            "inline": true\n        },\n        {\n            "name": "\uD83D\uDC26 Siga no Twitter! ",\n            "value": "[@LorittaBot](https://twitter.com/LorittaBot)",\n            "inline": true\n        },\n        {\n            "name": "\uD83D\uDDBC Siga no Instagram! ",\n            "value": "[@lorittabot](https://instagram.com/lorittabot)",\n            "inline": true\n        }\n      ],\n    "footer": {\n      "text": "Eu sou muito fofa e o {guild} tamb\xE9m :3"\n    }\n   }\n}')]));
    LoriDashboard_getInstance().configureTextArea_qx4uyf$(jq('#leaveMessage'), true, serverConfig, true, jq('#canalLeaveId'), true, Placeholders_getInstance().DEFAULT_PLACEHOLDERS, true, mapOf([to('Padr\xE3o', '\uD83D\uDC48 {user} saiu do servidor...'), to('Padr\xE3o, s\xF3 que melhor', '<a:bongo_lori_triste:524894216510373888> | {user} saiu do {guild}... espero que algum dia ele volte...'), to('Embed Simples', '{\n   "content":"",\n   "embed":{\n      "color":-6250077,\n      "title":"Tchau...",\n      "description":"{user} saiu do {guild}... espero que algum dia ele volte..."\n   }\n}'), to('Embed com Avatar', '{\n   "content":"",\n   "embed":{\n      "color":-6250077,\n      "title":"\uD83D\uDE2D #chateada!",\n      "description":"\u26B0 **{user}** saiu do servidor... <:lori_triste:370344565967814659>",\n      "author":{\n         "name":"{user}#{user-discriminator}",\n         "icon_url":"{user-avatar-url}"\n      },\n      "thumbnail":{\n         "url":"{user-avatar-url}"\n      },\n      "footer": {\n         "text": "ID do usu\xE1rio: {user-id}"\n      }\n   }\n}\n'), to('Embed com Avatar e Imagem', '{\n   "content":"",\n   "embed":{\n      "color":-6250077,\n      "title":"\uD83D\uDE2D #chateada!",\n      "description":"\u26B0 **{user}** saiu do servidor... <:lori_triste:370344565967814659>",\n      "author":{\n         "name":"{user}#{user-discriminator}",\n         "icon_url":"{user-avatar-url}"\n      },\n      "thumbnail":{\n         "url":"{user-avatar-url}"\n      },\n\t  "image": {\n\t     "url": "https://i.imgur.com/RUIaWW3.png"\n\t  },\n      "footer": {\n         "text": "ID do usu\xE1rio: {user-id}"\n      }\n   }\n}')]));
    LoriDashboard_getInstance().configureTextArea_qx4uyf$(jq('#joinPrivateMessage'), true, serverConfig, true, null, true, Placeholders_getInstance().DEFAULT_PLACEHOLDERS);
    LoriDashboard_getInstance().configureTextArea_qx4uyf$(jq('#banMessage'), true, serverConfig, true, jq('#canalLeaveId'), true, Placeholders_getInstance().DEFAULT_PLACEHOLDERS);
    return Unit;
  }
  ConfigureWelcomerView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ConfigureWelcomerView$start$lambda);
  };
  function ConfigureWelcomerView$prepareSave$lambda(it) {
    var tmp$, tmp$_0;
    var deleteJoinMessagesAfter = toIntOrNull(typeof (tmp$ = jq('#deleteJoinMessagesAfter').val()) === 'string' ? tmp$ : throwCCE());
    if (deleteJoinMessagesAfter === 0) {
      it['deleteJoinMessagesAfter'] = null;
    }
    var deleteLeaveMessagesAfter = toIntOrNull(typeof (tmp$_0 = jq('#deleteLeaveMessagesAfter').val()) === 'string' ? tmp$_0 : throwCCE());
    if (deleteLeaveMessagesAfter === 0) {
      it['deleteLeaveMessagesAfter'] = null;
    }
    return Unit;
  }
  ConfigureWelcomerView.prototype.prepareSave = function () {
    SaveStuff_getInstance().prepareSave('welcomer', ConfigureWelcomerView$prepareSave$lambda);
  };
  ConfigureWelcomerView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ConfigureWelcomerView',
    interfaces: []
  };
  var ConfigureWelcomerView_instance = null;
  function ConfigureWelcomerView_getInstance() {
    if (ConfigureWelcomerView_instance === null) {
      new ConfigureWelcomerView();
    }
    return ConfigureWelcomerView_instance;
  }
  function LoriDashboard() {
    LoriDashboard_instance = this;
    this.toggleCounter = 1000;
    this.configSavedSfx_sq02yu$_0 = lazy(LoriDashboard$configSavedSfx$lambda);
    this.configErrorSfx_v2dzpj$_0 = lazy(LoriDashboard$configErrorSfx$lambda);
    this.wrapper_e2dk2j$_0 = lazy(LoriDashboard$wrapper$lambda);
    this.leftSidebar_bu0mf$_0 = lazy(LoriDashboard$leftSidebar$lambda);
    this.rightSidebar_6drdtm$_0 = lazy(LoriDashboard$rightSidebar$lambda);
    this.loadingScreen_dfu46y$_0 = lazy(LoriDashboard$loadingScreen$lambda);
  }
  Object.defineProperty(LoriDashboard.prototype, 'configSavedSfx', {
    get: function () {
      return this.configSavedSfx_sq02yu$_0.value;
    }
  });
  Object.defineProperty(LoriDashboard.prototype, 'configErrorSfx', {
    get: function () {
      return this.configErrorSfx_v2dzpj$_0.value;
    }
  });
  Object.defineProperty(LoriDashboard.prototype, 'wrapper', {
    get: function () {
      return this.wrapper_e2dk2j$_0.value;
    }
  });
  Object.defineProperty(LoriDashboard.prototype, 'leftSidebar', {
    get: function () {
      return this.leftSidebar_bu0mf$_0.value;
    }
  });
  Object.defineProperty(LoriDashboard.prototype, 'rightSidebar', {
    get: function () {
      return this.rightSidebar_6drdtm$_0.value;
    }
  });
  Object.defineProperty(LoriDashboard.prototype, 'loadingScreen', {
    get: function () {
      return this.loadingScreen_dfu46y$_0.value;
    }
  });
  LoriDashboard.prototype.loadServerConfig = function () {
    var tmp$;
    println('Loading config from embedded data... (if available)');
    var serverConfigJson = (tmp$ = document.getElementById('server-config-json')) != null ? tmp$.innerHTML : null;
    println('Config (as JSON): ' + toString(serverConfigJson));
    if (serverConfigJson != null) {
      println('Parsing the configuration...');
      var serverConfig = JSON.parse(serverConfigJson);
      println("Server's Command Prefix: " + serverConfig.commandPrefix);
      return serverConfig;
    }
     else {
      println("Couldn't find embedded config data in body!");
      throw RuntimeException_init("Couldn't find embedded config data in body!");
    }
  };
  LoriDashboard.prototype.showLoadingBar_pdl1vj$ = function (text) {
    if (text === void 0)
      text = 'Salvando...';
    var tmp$;
    var $receiver = (tmp$ = document.querySelector('#loading-screen')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var tmp$_0;
    ((tmp$_0 = $receiver.querySelector('.loading-text')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).textContent = text;
    $receiver.style.opacity = '1';
  };
  LoriDashboard.prototype.hideLoadingBar = function () {
    var tmp$;
    ((tmp$ = document.querySelector('#loading-screen')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).style.opacity = '0';
  };
  function LoriDashboard$applyBlur$lambda(closure$onToggle, closure$toBeHidden, closure$toggle, this$LoriDashboard) {
    return function (it) {
      var tmp$;
      var result = (tmp$ = closure$onToggle != null ? closure$onToggle() : null) != null ? tmp$ : true;
      if (!result) {
        it.preventDefault();
        return;
      }
      this$LoriDashboard.toggleBlur_puj7f4$(closure$toBeHidden, closure$toggle);
      return Unit;
    };
  }
  LoriDashboard.prototype.applyBlur_iiwsaa$ = function (toBeHidden, toggle, onToggle) {
    if (onToggle === void 0)
      onToggle = null;
    jq(toggle).click(LoriDashboard$applyBlur$lambda(onToggle, toBeHidden, toggle, this));
    this.toggleBlur_puj7f4$(toBeHidden, toggle);
  };
  LoriDashboard.prototype.toggleBlur_puj7f4$ = function (toBeHidden, toggle) {
    var hide = jq(toBeHidden);
    if (jq(toggle).is(':checked')) {
      hide.removeClass('blurSection');
      hide.addClass('noBlur');
    }
     else {
      hide.removeClass('noBlur');
      hide.addClass('blurSection');
    }
  };
  LoriDashboard.prototype.enableBlur_61zpoe$ = function (toBeHidden) {
    var hide = jq(toBeHidden);
    hide.removeClass('noBlur');
    hide.addClass('blurSection');
  };
  LoriDashboard.prototype.disableBlur_61zpoe$ = function (toBeUnhidden) {
    var hide = jq(toBeUnhidden);
    hide.removeClass('blurSection');
    hide.addClass('noBlur');
  };
  LoriDashboard.prototype.createToggle_8jgccd$ = function (internalName, toggleMainText, toggleSubText, needsToBeSaved, isEnabled) {
    var html = '<div class=' + '"' + 'toggleable-wrapper' + '"' + '>' + '\n' + '    <div class=' + '"' + 'information' + '"' + '>' + '\n' + '\t\t' + toggleMainText + '\n' + '\n' + '\t\t' + (toggleSubText != null ? '<div class=' + '"' + 'sub-text' + '"' + '>' + toString(toggleSubText) + '<\/div>' : '') + '\n' + '\t<\/div>' + '\n' + '\t<label class=' + '"' + 'switch' + '"' + ' for=' + '"' + 'cmn-toggle-' + this.toggleCounter + '"' + '>' + '\n' + '\t\t<input class=' + '"' + 'cmn-toggle' + '"' + ' type=' + '"' + 'checkbox' + '"' + ' data-internal-name=' + '"' + internalName + '"' + ' value=' + '"' + 'true' + '"' + ' ' + (needsToBeSaved ? 'data-send-on-save="true"' : '') + ' ' + (isEnabled ? 'checked' : '') + ' id=' + '"' + 'cmn-toggle-' + this.toggleCounter + '"' + ' type=' + '"' + 'checkbox' + '"' + ' />' + '\n' + '\t\t<div class=' + '"' + 'slider round' + '"' + '><\/div>' + '\n' + '\t<\/label>' + '\n' + '<\/div>' + '\n' + '<br style=' + '"' + 'clear: both' + '"' + ' />';
    var cnt = this.toggleCounter;
    this.toggleCounter = this.toggleCounter + 1 | 0;
    return new Pair(cnt, jq(html));
  };
  function LoriDashboard$configureTextChannelSelect$ObjectLiteral() {
  }
  LoriDashboard$configureTextChannelSelect$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LoriDashboard$configureTextChannelSelect$ObjectLiteral_0() {
  }
  LoriDashboard$configureTextChannelSelect$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LoriDashboard$configureTextChannelSelect$lambda(str) {
    return str;
  }
  function LoriDashboard$configureTextChannelSelect$lambda$lambda(closure$modal) {
    return function () {
      closure$modal.close();
      window.location.reload();
      return Unit;
    };
  }
  function LoriDashboard$configureTextChannelSelect$lambda$lambda_0(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function LoriDashboard$configureTextChannelSelect$lambda_0(closure$selectChannelDropdown, closure$serverConfig) {
    return function (event, a) {
      var tmp$;
      var channelId = typeof (tmp$ = closure$selectChannelDropdown.val()) === 'string' ? tmp$ : throwCCE();
      var $receiver = closure$serverConfig.textChannels;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_0;
        for (tmp$_0 = 0; tmp$_0 !== $receiver.length; ++tmp$_0) {
          var element = $receiver[tmp$_0];
          if (equals(element.id, channelId)) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      var channel = firstOrNull$result;
      if (channel != null && !channel.canTalk) {
        event.preventDefault();
        closure$selectChannelDropdown.select2('close');
        var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
        modal.setContent(jq('<div>').append(jq('<div>').addClass('category-name').text(get_legacyLocale().get_25kzsl$('DASHBOARD_NoPermission', []))).append(jq('<div>').css('text-align', 'center').append(jq('<img>').attr('src', 'https://mrpowergamerbr.com/uploads/2018-06-17_11-19-43.gif').css('width', '100%'))).append(jq('<div>').css('text-align', 'center').append(jq('<p>').text('Atualmente eu n\xE3o consigo falar no canal que voc\xEA deseja porque eu n\xE3o tenho permiss\xE3o para isto... \uD83D\uDE2D')).append(jq('<p>').text('Para eu conseguir falar neste canal, clique com bot\xE3o direito no canal que voc\xEA deseja que eu possa falar, v\xE1 nas permiss\xF5es, adicione um permission override para mim e d\xEA permiss\xE3o para que eu possa ler mensagens e enviar mensagens!'))).html());
        modal.addFooterBtn('<i class="far fa-thumbs-up"><\/i> J\xE1 arrumei!', 'button-discord button-discord-info pure-button button-discord-modal', LoriDashboard$configureTextChannelSelect$lambda$lambda(modal));
        modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', LoriDashboard$configureTextChannelSelect$lambda$lambda_0(modal));
        modal.open();
      }
      return Unit;
    };
  }
  LoriDashboard.prototype.configureTextChannelSelect_mtmww3$ = function (selectChannelDropdown, serverConfig, selectedChannelId) {
    var tmp$, tmp$_0;
    var optionData = ArrayList_init();
    tmp$ = serverConfig.textChannels;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var it = tmp$[tmp$_0];
      var option = new LoriDashboard$configureTextChannelSelect$ObjectLiteral();
      option.id = it.id;
      var text = '<span style=' + '"' + 'font-weight: 600;' + '"' + '>#' + it.name + '<\/span>';
      option.text = text;
      if (!it.canTalk) {
        option.text = text + ' <span class=' + '"' + 'keyword' + '"' + ' style=' + '"' + 'background-color: rgb(231, 76, 60);' + '"' + '>' + replace(get_legacyLocale().get_25kzsl$('DASHBOARD_NoPermission', []), '!', '') + '<\/span>';
      }
      if (equals(it.id, selectedChannelId))
        option.selected = true;
      optionData.add_11rb$(option);
    }
    var options = new LoriDashboard$configureTextChannelSelect$ObjectLiteral_0();
    options.data = copyToArray(optionData);
    options.escapeMarkup = LoriDashboard$configureTextChannelSelect$lambda;
    selectChannelDropdown.select2(options);
    selectChannelDropdown.on('select2:select', LoriDashboard$configureTextChannelSelect$lambda_0(selectChannelDropdown, serverConfig));
  };
  function LoriDashboard$SUMMARY(consumer) {
    HTMLTag.call(this, 'summary', consumer, emptyMap(), void 0, true, false);
  }
  LoriDashboard$SUMMARY.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SUMMARY',
    interfaces: [HtmlInlineTag, HTMLTag]
  };
  function LoriDashboard$summary$lambda($receiver) {
    return Unit;
  }
  LoriDashboard.prototype.summary_1sosug$ = function ($receiver, block) {
    if (block === void 0)
      block = LoriDashboard$summary$lambda;
    visit(new LoriDashboard$SUMMARY($receiver.consumer), block);
  };
  function LoriDashboard$configureTextArea$ObjectLiteral() {
  }
  LoriDashboard$configureTextArea$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LoriDashboard$configureTextArea$ObjectLiteral_0() {
  }
  LoriDashboard$configureTextArea$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LoriDashboard$configureTextArea$ObjectLiteral_1() {
  }
  LoriDashboard$configureTextArea$ObjectLiteral_1.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LoriDashboard$configureTextArea$lambda(str) {
    return str;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Voc\xEA realmente quer substituir pelo template?');
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Ao aplicar o template, a sua mensagem atual ser\xE1 perdida para sempre! (A n\xE3o ser se voc\xEA tenha copiado ela para outro lugar, a\xED vida que segue n\xE9)');
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda($receiver) {
    div($receiver, 'category-name', LoriDashboard$configureTextArea$lambda$lambda$lambda);
    p($receiver, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda_0);
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda_0(closure$modal, closure$jquery, closure$result) {
    return function () {
      closure$modal.close();
      closure$jquery.val(closure$result);
      closure$jquery.trigger('input', null);
      autosize.update(closure$jquery);
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda_1(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda_0(closure$select, closure$templates, closure$jquery) {
    return function (event, a) {
      var tmp$;
      var selected = typeof (tmp$ = closure$select.val()) === 'string' ? tmp$ : throwCCE();
      var result = closure$templates.get_11rb$(selected);
      closure$select.select2('close');
      var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
      modal.setContent(div_0(appendHTML(StringBuilder_init(), false), void 0, LoriDashboard$configureTextArea$lambda$lambda).toString());
      modal.addFooterBtn('<i class="far fa-thumbs-up"><\/i> Aplicar', 'button-discord button-discord-info pure-button button-discord-modal', LoriDashboard$configureTextArea$lambda$lambda_0(modal, closure$jquery, result));
      modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', LoriDashboard$configureTextArea$lambda$lambda_1(modal));
      modal.open();
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale().get_25kzsl$('loritta.modules.generic.showPlaceholders', []) + ' ');
    i($receiver, 'fas fa-chevron-down', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Placeholder');
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Significado');
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    th($receiver, void 0, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    th($receiver, void 0, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('{' + closure$it.key + '}');
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      set_style($receiver, 'white-space: nowrap;');
      code($receiver, 'inline', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$it));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it.value);
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$it) {
    return function ($receiver) {
      td($receiver, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$it));
      td($receiver, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$it));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda(closure$placeholders) {
    return function ($receiver) {
      tr($receiver, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda);
      var tmp$;
      tmp$ = closure$placeholders.entries.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        tr($receiver, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(element));
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda_0(closure$placeholders) {
    return function ($receiver) {
      thead($receiver, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda(closure$placeholders));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda_2(closure$placeholders) {
    return function ($receiver) {
      table($receiver, 'fancy-table', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda_0(closure$placeholders));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda_2(this$LoriDashboard, closure$placeholders) {
    return function ($receiver) {
      this$LoriDashboard.summary_1sosug$($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda_1);
      div($receiver, 'details-content', LoriDashboard$configureTextArea$lambda$lambda$lambda_2(closure$placeholders));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda_1(this$LoriDashboard, closure$placeholders) {
    return function ($receiver) {
      details($receiver, 'fancy-details', LoriDashboard$configureTextArea$lambda$lambda_2(this$LoriDashboard, closure$placeholders));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$ObjectLiteral() {
  }
  LoriDashboard$configureTextArea$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LoriDashboard$configureTextArea$lambda$lambda_3(data, textStatus, event) {
    println(data);
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda_4(event, textStatus, errorThrown) {
    println('Status: ' + toString(event.status));
    println(event.response);
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda_2(closure$textChannelSelect, closure$jquery) {
    return function (event, args) {
      var tmp$, tmp$_0;
      if (closure$textChannelSelect != null) {
        tmp$_0 = typeof (tmp$ = closure$textChannelSelect.val()) === 'string' ? tmp$ : throwCCE();
      }
       else {
        tmp$_0 = null;
      }
      var textChannelId = tmp$_0;
      var json_0 = json([to('channelId', textChannelId), to('message', closure$jquery.val()), to('sources', ['user', 'member'])]);
      var dynamic = new LoriDashboard$configureTextArea$lambda$ObjectLiteral();
      dynamic.url = get_loriUrl() + 'api/v1/guild/' + guildId + '/send-message';
      dynamic.type = 'POST';
      dynamic.dataType = 'json';
      dynamic.data = JSON.stringify(json_0);
      dynamic.success = LoriDashboard$configureTextArea$lambda$lambda_3;
      dynamic.error = LoriDashboard$configureTextArea$lambda$lambda_4;
      jQuery.ajax(dynamic);
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$replaceAndConvert(closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$converter) {
    return function (text) {
      var _text = this$LoriDashboard.replaceTokens_9iii47$(text, closure$serverConfig, closure$customTokens);
      _text = closure$converter.makeHtml(_text);
      return jq(_text).html();
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda_1(closure$color) {
    return function ($receiver) {
      if (closure$color != null) {
        var aux = '000000' + toString_1(closure$color >>> 0, 16);
        var hex = '#' + slice(aux, until(aux.length - 6 | 0, aux.length));
        println('Hex: ' + hex);
        set_style($receiver, 'background-color: ' + hex + ';');
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$name, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$name));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$name, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$name, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$name, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$name));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$name, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$name, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1;
      var iconUrl = (tmp$ = closure$author['icon_url']) == null || typeof tmp$ === 'string' ? tmp$ : throwCCE();
      if (iconUrl != null) {
        img($receiver, void 0, this$LoriDashboard.replaceTokens_9iii47$(iconUrl, closure$serverConfig, closure$customTokens), 'embed-author-icon');
      }
      var url = (tmp$_0 = closure$author['url']) == null || typeof tmp$_0 === 'string' ? tmp$_0 : throwCCE();
      var name = (tmp$_1 = closure$author['name']) == null || typeof tmp$_1 === 'string' ? tmp$_1 : throwCCE();
      if (name != null) {
        if (url != null) {
          a($receiver, url, void 0, 'embed-author-name', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(name, closure$replaceAndConvert));
        }
         else {
          span($receiver, 'embed-author-name', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(name, closure$replaceAndConvert));
        }
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$title, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$title));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$title, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$title, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$title, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$title));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$title, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$title, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$description, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$description));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$description, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$description, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$name, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$name));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$name, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$name, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$value, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$value));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$value, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$value, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6(closure$name, closure$replaceAndConvert, closure$value) {
    return function ($receiver) {
      div($receiver, 'embed-field-name', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$name, closure$replaceAndConvert));
      div($receiver, 'embed-field-value markup', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$value, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6(closure$fields, closure$replaceAndConvert) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4;
      tmp$ = closure$fields;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var field = tmp$[tmp$_0];
        var name = (tmp$_1 = field['name']) == null || typeof tmp$_1 === 'string' ? tmp$_1 : throwCCE();
        var value = (tmp$_2 = field['value']) == null || typeof tmp$_2 === 'string' ? tmp$_2 : throwCCE();
        var inline = (tmp$_4 = (tmp$_3 = field['inline']) == null || typeof tmp$_3 === 'boolean' ? tmp$_3 : throwCCE()) != null ? tmp$_4 : false;
        if (name != null && value != null) {
          div($receiver, 'embed-field' + (inline ? ' embed-field-inline' : ''), LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6(name, closure$replaceAndConvert, value));
        }
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields) {
    return function ($receiver) {
      if (closure$author != null) {
        div($receiver, 'embed-author', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert));
      }
      if (closure$title != null) {
        if (closure$url != null) {
          a($receiver, void 0, closure$url, 'embed-title', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$title, closure$replaceAndConvert));
        }
         else {
          span($receiver, 'embed-title', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$title, closure$replaceAndConvert));
        }
      }
      if (closure$description != null) {
        div($receiver, 'embed-description markup', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$description, closure$replaceAndConvert));
      }
      if (closure$fields != null) {
        div($receiver, 'embed-fields', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_6(closure$fields, closure$replaceAndConvert));
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    set_style($receiver, 'max-width: 80px; max-height: 80px;');
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda_0(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields, closure$thumbnailUrl) {
    return function ($receiver) {
      div($receiver, 'embed-content-inner', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields));
      if (closure$thumbnailUrl != null) {
        img($receiver, void 0, this$LoriDashboard.replaceTokens_9iii47$(closure$thumbnailUrl, closure$serverConfig, closure$customTokens), void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_1);
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda_1(closure$imageUrl, closure$serverConfig, closure$customTokens, this$LoriDashboard) {
    return function ($receiver) {
      img($receiver, void 0, this$LoriDashboard.replaceTokens_9iii47$(closure$imageUrl, closure$serverConfig, closure$customTokens), 'image');
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    $receiver.width = '20';
    $receiver.height = '20';
    return Unit;
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7(closure$text, closure$replaceAndConvert) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$replaceAndConvert(closure$text));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$text, closure$replaceAndConvert) {
    return function ($receiver) {
      unsafe($receiver, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda$lambda_7(closure$text, closure$replaceAndConvert));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda_2(closure$footer, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      var iconUrl = (tmp$ = closure$footer['icon_url']) == null || typeof tmp$ === 'string' ? tmp$ : throwCCE();
      var text = (tmp$_0 = closure$footer['text']) == null || typeof tmp$_0 === 'string' ? tmp$_0 : throwCCE();
      if (iconUrl != null) {
        img($receiver, void 0, this$LoriDashboard.replaceTokens_9iii47$(iconUrl, closure$serverConfig, closure$customTokens), 'embed-footer-icon', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_2);
      }
      if (text != null) {
        span($receiver, 'embed-footer', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda$lambda_3(text, closure$replaceAndConvert));
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda_2(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields, closure$thumbnailUrl, closure$imageUrl, closure$footer) {
    return function ($receiver) {
      div($receiver, 'embed-content', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda_0(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields, closure$thumbnailUrl));
      if (closure$imageUrl != null) {
        a($receiver, void 0, void 0, 'embed-thumbnail embed-thumbnail-rich', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda_1(closure$imageUrl, closure$serverConfig, closure$customTokens, this$LoriDashboard));
      }
      if (closure$footer != null) {
        div($receiver, void 0, LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda$lambda_2(closure$footer, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert));
      }
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda$lambda_3(closure$color, closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields, closure$thumbnailUrl, closure$imageUrl, closure$footer) {
    return function ($receiver) {
      div($receiver, 'embed-color-pill', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda_1(closure$color));
      div($receiver, 'embed embed-rich', LoriDashboard$configureTextArea$lambda$lambda$lambda$lambda_2(closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields, closure$thumbnailUrl, closure$imageUrl, closure$footer));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda$lambda_5(closure$color, closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields, closure$thumbnailUrl, closure$imageUrl, closure$footer) {
    return function ($receiver) {
      div($receiver, 'embed-wrapper', LoriDashboard$configureTextArea$lambda$lambda$lambda_3(closure$color, closure$author, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$replaceAndConvert, closure$title, closure$url, closure$description, closure$fields, closure$thumbnailUrl, closure$imageUrl, closure$footer));
      return Unit;
    };
  }
  function LoriDashboard$configureTextArea$lambda_3(closure$jquery, closure$extendedMode, closure$markdownPreview, closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$converter) {
    return function (event, args) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8;
      var description = typeof (tmp$ = closure$jquery.val()) === 'string' ? tmp$ : throwCCE();
      try {
        var json = JSON.parse(replace(description, '\r', ''));
        tmp$_0 = json['content'] != null || json['embed'] != null;
      }
       catch (e) {
        tmp$_0 = false;
      }
      var isUsingExtendedMode = tmp$_0;
      if (isUsingExtendedMode) {
        closure$extendedMode.css('display', '');
        var json_0 = JSON.parse(replace(description, '\r', ''));
        closure$markdownPreview.empty();
        var content = json_0['content'];
        var embed = json_0['embed'];
        if (content != null && typeof content === 'string') {
          description = this$LoriDashboard.replaceTokens_9iii47$(content, closure$serverConfig, closure$customTokens);
          description = closure$converter.makeHtml(description);
          closure$markdownPreview.append(description);
        }
        if (embed != null) {
          var markdownEmbedConverter = new ShowdownConverter();
          markdownEmbedConverter.setOption('simpleLineBreaks', true);
          var replaceAndConvert = LoriDashboard$configureTextArea$lambda$replaceAndConvert(closure$serverConfig, closure$customTokens, this$LoriDashboard, closure$converter);
          var embed_0 = Kotlin.isType(tmp$_1 = embed, Object) ? tmp$_1 : throwCCE();
          var color = (tmp$_2 = embed_0['color']) == null || typeof tmp$_2 === 'number' ? tmp$_2 : throwCCE();
          var author = embed_0['author'];
          var title = (tmp$_3 = embed_0['title']) == null || typeof tmp$_3 === 'string' ? tmp$_3 : throwCCE();
          var url = (tmp$_4 = embed_0['url']) == null || typeof tmp$_4 === 'string' ? tmp$_4 : throwCCE();
          var description_0 = (tmp$_5 = embed_0['description']) == null || typeof tmp$_5 === 'string' ? tmp$_5 : throwCCE();
          var fields = (tmp$_6 = embed_0['fields']) == null || Kotlin.isArray(tmp$_6) ? tmp$_6 : throwCCE();
          var thumbnailObj = embed_0['thumbnail'];
          var thumbnailUrl = (tmp$_7 = thumbnailObj != null ? thumbnailObj['url'] : null) == null || typeof tmp$_7 === 'string' ? tmp$_7 : throwCCE();
          var imageObj = embed_0['image'];
          var imageUrl = (tmp$_8 = imageObj != null ? imageObj['url'] : null) == null || typeof tmp$_8 === 'string' ? tmp$_8 : throwCCE();
          var footer = embed_0['footer'];
          var stringBuilder = StringBuilder_init();
          div_0(appendHTML(stringBuilder, false), 'accessory', LoriDashboard$configureTextArea$lambda$lambda_5(color, author, closure$serverConfig, closure$customTokens, this$LoriDashboard, replaceAndConvert, title, url, description_0, fields, thumbnailUrl, imageUrl, footer));
          closure$markdownPreview.append(stringBuilder.toString());
        }
      }
       else {
        closure$extendedMode.css('display', 'none');
        description = this$LoriDashboard.replaceTokens_9iii47$(description, closure$serverConfig, closure$customTokens);
        description = closure$converter.makeHtml(description);
        closure$markdownPreview.html(description);
      }
      return Unit;
    };
  }
  LoriDashboard.prototype.configureTextArea_qx4uyf$ = function (jquery, markdownPreview, serverConfig, sendTestMessages, textChannelSelect, showPlaceholders, placeholders, showTemplates, templates, customTokens) {
    if (markdownPreview === void 0)
      markdownPreview = false;
    if (sendTestMessages === void 0)
      sendTestMessages = false;
    if (textChannelSelect === void 0)
      textChannelSelect = null;
    if (showPlaceholders === void 0)
      showPlaceholders = false;
    if (placeholders === void 0) {
      placeholders = emptyMap();
    }
    if (showTemplates === void 0)
      showTemplates = false;
    if (templates === void 0) {
      templates = emptyMap();
    }
    if (customTokens === void 0) {
      customTokens = emptyMap();
    }
    var tmp$;
    var div = jq('<div>').css('position', 'relative');
    if (showTemplates) {
      println('Displaying templates');
      var select = jq('<select>');
      select.insertBefore(jquery);
      var optionData = ArrayList_init();
      var dummyPlaceholder = new LoriDashboard$configureTextArea$ObjectLiteral();
      dummyPlaceholder.id = '';
      dummyPlaceholder.text = '';
      optionData.add_11rb$(dummyPlaceholder);
      tmp$ = templates.entries.iterator();
      while (tmp$.hasNext()) {
        var it = tmp$.next();
        var option = new LoriDashboard$configureTextArea$ObjectLiteral_0();
        option.id = it.key;
        var text = it.key;
        option.text = text;
        optionData.add_11rb$(option);
      }
      var options = new LoriDashboard$configureTextArea$ObjectLiteral_1();
      options.placeholder = 'Sem ideias? Ent\xE3o veja nossos templates!';
      options.data = copyToArray(optionData);
      options.escapeMarkup = LoriDashboard$configureTextArea$lambda;
      options.dropdownAutoWidth = true;
      select.select2(options);
      select.on('select2:select', LoriDashboard$configureTextArea$lambda_0(select, templates, jquery));
    }
    div.insertBefore(jquery);
    jquery.appendTo(div);
    var extendedMode = jq('<div>').html('<i class="fas fa-code"><\/i> Extended Mode').css('background-color', 'green').css('top', '0px').css('right', '0px').css('position', 'absolute').css('color', 'white').css('opacity', '0.75').css('padding', '3px').css('border-radius', '0px 3px 0px 8px').css('display', 'none').css('margin-top', '8px');
    div.append(extendedMode);
    autosize(jquery);
    if (showPlaceholders) {
      println('Displaying placeholders...');
      var html = div_0(appendHTML(StringBuilder_init(), false), void 0, LoriDashboard$configureTextArea$lambda_1(this, placeholders)).toString();
      jq(html).insertAfter(jquery);
    }
    if (sendTestMessages) {
      var button = jq('<button>').addClass('button-discord button-discord-info pure-button').html('<i class=' + '"' + 'fas fa-paper-plane' + '"' + '><\/i> ' + get_legacyLocale().get_25kzsl$('DASHBOARD_TestMessage', []));
      button.on('click', LoriDashboard$configureTextArea$lambda_2(textChannelSelect, jquery));
      button.insertAfter(jquery);
    }
    if (markdownPreview) {
      var markdownPreview_0 = jq('<div>').attr('id', jquery.attr('id') + '-markdownpreview');
      var converter = new ShowdownConverter();
      converter.setOption('simpleLineBreaks', true);
      jquery.on('input', LoriDashboard$configureTextArea$lambda_3(jquery, extendedMode, markdownPreview_0, serverConfig, customTokens, this, converter));
      markdownPreview_0.insertAfter(jquery);
    }
    jquery.trigger('input', null);
  };
  LoriDashboard.prototype.replaceTokens_9iii47$ = function (text, serverConfig, customTokens) {
    if (customTokens === void 0) {
      customTokens = LinkedHashMap_init();
    }
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
    var selfUser = (tmp$ = serverConfig != null ? serverConfig.selfUser : null) != null ? tmp$ : new Member('123170274651668480', 'Loritta', '0219', get_loriUrl() + 'assets/img/unknown.png');
    var message = text;
    var mentionUser = '<span class=' + '"' + 'discord-mention' + '"' + '>@' + selfUser.name + '<\/span>';
    var user = selfUser.name;
    var userDiscriminator = selfUser.discriminator;
    var userId = selfUser.id;
    var nickname = selfUser.name;
    var avatarUrl = selfUser.avatar;
    var guildName = '';
    var guildSize = '';
    var mentionOwner = '';
    var owner = '';
    if (serverConfig != null) {
      guildName = serverConfig.guildName;
      guildSize = serverConfig.memberCount.toString();
    }
    tmp$_0 = customTokens.entries.iterator();
    while (tmp$_0.hasNext()) {
      var tmp$_8 = tmp$_0.next();
      var token = tmp$_8.key;
      var value = tmp$_8.value;
      message = replace(message, '{' + token + '}', value != null ? value : '\uD83E\uDD37');
    }
    message = replace(message, '{@user}', mentionUser);
    message = replace(message, '{user}', user);
    message = replace(message, '{user-id}', userId);
    message = replace(message, '{user-avatar-url}', avatarUrl);
    message = replace(message, '{user-discriminator}', userDiscriminator);
    message = replace(message, '{nickname}', nickname);
    message = replace(message, '{guild}', guildName);
    message = replace(message, '{guild-size}', guildSize);
    message = replace(message, '{@owner}', mentionOwner);
    message = replace(message, '{owner}', owner);
    var regex = Regex_init('<(a)?:([A-z0-9_-]+):([0-9]+)>', RegexOption.MULTILINE);
    var input = message;
    var replace_20wsma$result;
    replace_20wsma$break: do {
      var match = regex.find_905azu$(input);
      if (match == null) {
        replace_20wsma$result = input.toString();
        break replace_20wsma$break;
      }
      var lastStart = 0;
      var length = input.length;
      var sb = StringBuilder_init_0(length);
      do {
        var foundMatch = ensureNotNull(match);
        sb.append_ezbsdh$(input, lastStart, foundMatch.range.start);
        var tmp$_9 = sb.append_gw00v9$;
        var tmp$_10, tmp$_11;
        var tmp$_12, tmp$_0_0;
        var index = 0;
        tmp$_12 = foundMatch.groups.iterator();
        while (tmp$_12.hasNext()) {
          var item = tmp$_12.next();
          println(checkIndexOverflow((tmp$_0_0 = index, index = tmp$_0_0 + 1 | 0, tmp$_0_0)).toString() + ' group is ' + toString(item));
        }
        var extension = equals((tmp$_10 = foundMatch.groups.get_za3lpa$(1)) != null ? tmp$_10.value : null, 'a') ? 'gif' : 'png';
        tmp$_9.call(sb, '<img class=' + '"' + 'inline-emoji' + '"' + ' src=' + '"' + 'https://cdn.discordapp.com/emojis/' + toString((tmp$_11 = foundMatch.groups.get_za3lpa$(3)) != null ? tmp$_11.value : null) + '.' + extension + '?v=1' + '"' + '>');
        lastStart = foundMatch.range.endInclusive + 1 | 0;
        match = foundMatch.next();
      }
       while (lastStart < length && match != null);
      if (lastStart < length) {
        sb.append_ezbsdh$(input, lastStart, length);
      }
      replace_20wsma$result = sb.toString();
    }
     while (false);
    message = replace_20wsma$result;
    if (serverConfig != null) {
      tmp$_1 = serverConfig.textChannels;
      for (tmp$_2 = 0; tmp$_2 !== tmp$_1.length; ++tmp$_2) {
        var textChannel = tmp$_1[tmp$_2];
        message = replace(message, '#' + textChannel.name, '<#' + textChannel.id + '>');
        message = replace(message, '<#' + textChannel.id + '>', '<span class=' + '"' + 'discord-mention' + '"' + '>#' + textChannel.name + '<\/span>');
      }
      tmp$_3 = serverConfig.roles;
      for (tmp$_4 = 0; tmp$_4 !== tmp$_3.length; ++tmp$_4) {
        var role = tmp$_3[tmp$_4];
        message = replace(message, '@' + role.name, '<@&' + role.id + '>');
        var roleSpan = jq('<span>').text('@' + role.name).addClass('discord-mention');
        if (role.color != null) {
          roleSpan.css('color', 'rgb(' + role.color.red + ', ' + role.color.green + ', ' + role.color.blue + ')');
          roleSpan.css('background-color', 'rgba(' + role.color.red + ', ' + role.color.green + ', ' + role.color.blue + ', 0.298039)');
        }
        message = replace(message, '<@&' + role.id + '>', typeof (tmp$_5 = roleSpan.prop('outerHTML')) === 'string' ? tmp$_5 : throwCCE());
      }
      tmp$_6 = serverConfig.emotes;
      for (tmp$_7 = 0; tmp$_7 !== tmp$_6.length; ++tmp$_7) {
        var emote = tmp$_6[tmp$_7];
        message = replace(message, ':' + emote.name + ':', '<:' + emote.name + ':' + emote.id + '>');
      }
      var input_0 = message;
      var replace_20wsma$result_0;
      replace_20wsma$break: do {
        var match_0 = regex.find_905azu$(input_0);
        if (match_0 == null) {
          replace_20wsma$result_0 = input_0.toString();
          break replace_20wsma$break;
        }
        var lastStart_0 = 0;
        var length_0 = input_0.length;
        var sb_0 = StringBuilder_init_0(length_0);
        do {
          var foundMatch_0 = ensureNotNull(match_0);
          sb_0.append_ezbsdh$(input_0, lastStart_0, foundMatch_0.range.start);
          var tmp$_13 = sb_0.append_gw00v9$;
          var tmp$_14, tmp$_15;
          var extension_0 = equals((tmp$_14 = foundMatch_0.groups.get_za3lpa$(1)) != null ? tmp$_14.value : null, 'a') ? 'gif' : 'png';
          tmp$_13.call(sb_0, '<img class=' + '"' + 'inline-emoji' + '"' + ' src=' + '"' + 'https://cdn.discordapp.com/emojis/' + toString((tmp$_15 = foundMatch_0.groups.get_za3lpa$(3)) != null ? tmp$_15.value : null) + '.' + extension_0 + '?v=1' + '"' + '>');
          lastStart_0 = foundMatch_0.range.endInclusive + 1 | 0;
          match_0 = foundMatch_0.next();
        }
         while (lastStart_0 < length_0 && match_0 != null);
        if (lastStart_0 < length_0) {
          sb_0.append_ezbsdh$(input_0, lastStart_0, length_0);
        }
        replace_20wsma$result_0 = sb_0.toString();
      }
       while (false);
      message = replace_20wsma$result_0;
    }
    return message;
  };
  function LoriDashboard$configSavedSfx$lambda() {
    return new Audio(get_loriUrl() + 'assets/snd/config_saved.mp3');
  }
  function LoriDashboard$configErrorSfx$lambda() {
    return new Audio(get_loriUrl() + 'assets/snd/config_error.mp3');
  }
  function LoriDashboard$wrapper$lambda() {
    return jq('#server-configuration');
  }
  function LoriDashboard$leftSidebar$lambda() {
    return jq('#left-sidebar');
  }
  function LoriDashboard$rightSidebar$lambda() {
    return jq('#right-sidebar');
  }
  function LoriDashboard$loadingScreen$lambda() {
    return jq('#loading-screen');
  }
  LoriDashboard.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'LoriDashboard',
    interfaces: []
  };
  var LoriDashboard_instance = null;
  function LoriDashboard_getInstance() {
    if (LoriDashboard_instance === null) {
      new LoriDashboard();
    }
    return LoriDashboard_instance;
  }
  function toString_1($receiver, radix) {
    var value = $receiver;
    return value.toString(radix);
  }
  var legacyLocale;
  function get_legacyLocale() {
    if (legacyLocale == null)
      return throwUPAE('legacyLocale');
    return legacyLocale;
  }
  function set_legacyLocale(legacyLocale_0) {
    legacyLocale = legacyLocale_0;
  }
  var locale;
  function get_locale() {
    if (locale == null)
      return throwUPAE('locale');
    return locale;
  }
  function set_locale(locale_0) {
    locale = locale_0;
  }
  var selfProfile;
  function get_loriUrl() {
    return window.location.protocol + '//' + window.location.host + '/';
  }
  function jq(query) {
    var tmp$, tmp$_0;
    tmp$_0 = Kotlin.isType(tmp$ = query, Any) ? tmp$ : throwCCE();
    return jQuery(tmp$_0);
  }
  function toJson($receiver) {
    return JSON.parse(JSON.stringify($receiver));
  }
  function toJson_0($receiver) {
    return JSON.parse(JSON.stringify($receiver));
  }
  function stringify($receiver) {
    return JSON.stringify($receiver);
  }
  function loadEmbeddedLocale() {
    var tmp$, tmp$_0;
    println('Loading locale from embedded data... (if available)');
    var localeJson = (tmp$ = document.getElementById('base-locale-json')) != null ? tmp$.innerHTML : null;
    var legacyLocaleJson = (tmp$_0 = document.getElementById('locale-json')) != null ? tmp$_0.innerHTML : null;
    if (localeJson != null) {
      println('Embedded locale found!');
      println('base-locale-json: ' + toString(localeJson));
      var $receiver = JSON_0.Companion;
      var baseLocale = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(BaseLocale)), localeJson);
      println('Parsed BaseLocale from embedded locale within body!');
      println('There is ' + baseLocale.localeEntries.size + ' keys!');
      set_locale(baseLocale);
    }
    if (legacyLocaleJson != null) {
      println('Embedded *legacy* locale found!');
      println('locale-json: ' + toString(legacyLocaleJson));
      var asJson = JSON.parse(legacyLocaleJson);
      println('Converted it to JSON... ' + asJson);
      var alreadyInitalized = legacyLocale != null;
      if (alreadyInitalized) {
        println("Locale already initalized, we aren't going to replace it then...");
      }
       else {
        set_legacyLocale(LegacyBaseLocale$Companion_getInstance().create_qk3xy8$(asJson));
        println('Parsed LegacyBaseLocale from embedded locale within body!');
        println('Testing keys...');
        println(ensureNotNull(get_legacyLocale()).get_25kzsl$('KEYWORD_STREAMER', []));
        println(ensureNotNull(get_legacyLocale()).get_25kzsl$('RAFFLE_YouEarned', [250]));
        println(ensureNotNull(get_legacyLocale()).get_25kzsl$('LORITTA_ADDED_ON_SERVER', ['MrPowerGamerBR', 'PerfectDreams', 'Apartamento da Loritta', 125, get_loriUrl()]));
      }
    }
     else {
      println("Couldn't find embedded data in body!");
    }
  }
  function oldMain$lambda(it) {
    loadEmbeddedLocale();
    true;
    return Unit;
  }
  function oldMain$lambda$lambda(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function oldMain$lambda$lambda_0(closure$error) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Oopsie Woopsie! ' + toString(closure$error));
      return Unit;
    };
  }
  function oldMain$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 100%;');
    return Unit;
  }
  function oldMain$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'overflow: hidden;');
    img($receiver, 'Loritta Pobre', get_loriUrl() + 'assets/img/loritta_pobre.png', 'animated fadeInUp', oldMain$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function oldMain$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    var tmp$, tmp$_0;
    (tmp$_0 = ($receiver.unaryPlus_pdl1vz$((tmp$ = get_legacyLocale()) != null ? tmp$.get_25kzsl$('ERROR_SomethingWentWrong', []) : null), Unit)) != null ? tmp$_0 : 'Alguma coisa deu errada...';
    return Unit;
  }
  function oldMain$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    var tmp$, tmp$_0;
    $receiver.raw_61zpoe$((tmp$_0 = (tmp$ = get_legacyLocale()) != null ? tmp$.get_25kzsl$('ERROR_WhatShouldIDo', []) : null) != null ? tmp$_0 : "Infelizmente ningu\xE9m \xE9 perfeito... e pelo visto voc\xEA encontrou um problema no meu website... Tente recarregar a p\xE1gina e veja se o problema persiste, caso persista, entre no meu <a href='" + get_loriUrl() + "support'>servidor de suporte<\/a> e envie o c\xF3digo abaixo junto com uma pequena explica\xE7\xE3o sobre o que voc\xEA estava tentando fazer no momento que deu o erro!");
    return Unit;
  }
  function oldMain$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    unsafe($receiver, oldMain$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function oldMain$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    var tmp$, tmp$_0;
    (tmp$_0 = ($receiver.unaryPlus_pdl1vz$((tmp$ = get_legacyLocale()) != null ? tmp$.get_25kzsl$('ERROR_SorryForTheInconvenience', []) : null), Unit)) != null ? tmp$_0 : 'Desculpe pela inconveni\xEAncia...';
    return Unit;
  }
  function oldMain$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$content) {
    return function ($receiver) {
      set_style($receiver, 'word-wrap: break-word; white-space: pre-wrap;');
      $receiver.unaryPlus_pdl1vz$(window.btoa(closure$content));
      return Unit;
    };
  }
  function oldMain$lambda$lambda$lambda$lambda$lambda_0(closure$content) {
    return function ($receiver) {
      h3($receiver, 'sectionHeader', oldMain$lambda$lambda$lambda$lambda$lambda$lambda);
      p($receiver, void 0, oldMain$lambda$lambda$lambda$lambda$lambda$lambda_0);
      p($receiver, void 0, oldMain$lambda$lambda$lambda$lambda$lambda$lambda_1);
      pre($receiver, void 0, oldMain$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$content));
      return Unit;
    };
  }
  function oldMain$lambda$lambda$lambda$lambda_0(closure$content) {
    return function ($receiver) {
      div($receiver, 'sectionText', oldMain$lambda$lambda$lambda$lambda$lambda_0(closure$content));
      return Unit;
    };
  }
  function oldMain$lambda$lambda$lambda(closure$content) {
    return function ($receiver) {
      set_style($receiver, 'text-align: left;');
      div($receiver, 'pure-u-1 pure-u-md-1-4', oldMain$lambda$lambda$lambda$lambda);
      div($receiver, 'pure-u-1 pure-u-md-3-4', oldMain$lambda$lambda$lambda$lambda_0(closure$content));
      return Unit;
    };
  }
  function oldMain$lambda$lambda_1(closure$content) {
    return function ($receiver) {
      div($receiver, 'pure-g vertically-centered-content', oldMain$lambda$lambda$lambda(closure$content));
      return Unit;
    };
  }
  function oldMain$lambda_0(message, file, line, col, error) {
    var tmp$;
    if (!contains_0(message, 'adsbygoogle')) {
      println('Erro detectado! Abrindo modal...');
      if (error == null) {
        println('Error is null! Ignorning modal... (Mostly likely from AdSense!)');
      }
       else {
        println('Message: ' + toString(message));
        println('file: ' + file);
        println('line: ' + toString(line));
        println('col: ' + toString(col));
        println('error: ' + toString(error));
        println(error.stack);
        var content = trimMargin('Error: ' + message.toString() + '\n' + '\t\t\t|User Agent: ' + window.navigator.userAgent + '\n' + '\t\t\t|URL: ' + window.location.href + '\n' + '\t\t\t|User ID: ' + ((tmp$ = selfProfile != null ? selfProfile.userId : null) != null ? tmp$ : 'Unknown') + '\n' + '\t\t\t|Stack:' + '\n' + '\t\t\t|' + error.stack.toString() + '\n' + '\t\t');
        var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
        modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', oldMain$lambda$lambda(modal));
        var stringBuilder = StringBuilder_init();
        div_0(appendHTML(div_0(appendHTML(stringBuilder, false), 'category-name', oldMain$lambda$lambda_0(error))), void 0, oldMain$lambda$lambda_1(content));
        modal.setContent(stringBuilder.toString());
        modal.open();
      }
    }
    return false;
  }
  function oldMain(args) {
    println('LoriUtils! ^-^');
    document.addEventListener('DOMContentLoaded', oldMain$lambda);
    window.onerror = oldMain$lambda_0;
  }
  function testError() {
    var test = null;
    ensureNotNull(test);
  }
  function ApplicationCall(parameters, content) {
    this.parameters = parameters;
    this.content = content;
  }
  ApplicationCall.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ApplicationCall',
    interfaces: []
  };
  function CookiesUtils() {
    CookiesUtils_instance = this;
  }
  CookiesUtils.prototype.createCookie_puj7f4$ = function (name, value) {
    var expires = '';
    document.cookie = name + '=' + value + expires + '; Path=/';
  };
  CookiesUtils.prototype.readCookie_61zpoe$ = function (name) {
    var value = '; ' + document.cookie;
    var parts = split(value, ['; ' + name + '=']);
    if (parts.size === 2)
      return first(split(last(parts), [';']));
    return null;
  };
  CookiesUtils.prototype.eraseCookie_61zpoe$ = function (name) {
    document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
  };
  CookiesUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'CookiesUtils',
    interfaces: []
  };
  var CookiesUtils_instance = null;
  function CookiesUtils_getInstance() {
    if (CookiesUtils_instance === null) {
      new CookiesUtils();
    }
    return CookiesUtils_instance;
  }
  function DoNotRemoveDeadCodeWorkaround() {
    DoNotRemoveDeadCodeWorkaround_instance = this;
    this.methodRefs = mutableListOf([getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ConfigureAutoroleView_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.prepareSave(), Unit;
    }.bind(null, ConfigureAutoroleView_getInstance())), getCallableRef('addRoleFromSelection', function ($receiver) {
      return $receiver.addRoleFromSelection(), Unit;
    }.bind(null, ConfigureAutoroleView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ConfigureEconomyView_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.prepareSave(), Unit;
    }.bind(null, ConfigureEconomyView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ConfigureMemberCounterView_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.prepareSave(), Unit;
    }.bind(null, ConfigureMemberCounterView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ConfigureMiscellaneousConfig_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.prepareSave(), Unit;
    }.bind(null, ConfigureMiscellaneousConfig_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ConfigureModerationView_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.prepareSave(), Unit;
    }.bind(null, ConfigureModerationView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ConfigureProfileView_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.prepareSave(), Unit;
    }.bind(null, ConfigureProfileView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ConfigureWelcomerView_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.prepareSave(), Unit;
    }.bind(null, ConfigureWelcomerView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, DailyView_getInstance())), getCallableRef('recaptchaCallback', function ($receiver, response) {
      return $receiver.recaptchaCallback(response), Unit;
    }.bind(null, DailyView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, DonateView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ProfileListView_getInstance())), getCallableRef('recaptchaCallback', function ($receiver, userId, token) {
      return $receiver.recaptchaCallback(userId, token), Unit;
    }.bind(null, ReputationView_getInstance())), getCallableRef('start', function ($receiver) {
      return $receiver.start(), Unit;
    }.bind(null, ShipEffectsView_getInstance())), getCallableRef('prepareSave', function ($receiver) {
      return $receiver.buy(), Unit;
    }.bind(null, ShipEffectsView_getInstance()))]);
  }
  DoNotRemoveDeadCodeWorkaround.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DoNotRemoveDeadCodeWorkaround',
    interfaces: []
  };
  var DoNotRemoveDeadCodeWorkaround_instance = null;
  function DoNotRemoveDeadCodeWorkaround_getInstance() {
    if (DoNotRemoveDeadCodeWorkaround_instance === null) {
      new DoNotRemoveDeadCodeWorkaround();
    }
    return DoNotRemoveDeadCodeWorkaround_instance;
  }
  function GlobalCount() {
    this.serverCount = 0;
    this.userCount = 0;
    this.commandCount = 0;
  }
  GlobalCount.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GlobalCount',
    interfaces: []
  };
  function Comparator$ObjectLiteral(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareBy$lambda = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function AudioRecordingRoute(m) {
    AudioRecordingRoute$Companion_getInstance();
    BaseRoute.call(this, '/audio/{guildid}/{timestamp}');
    this.m = m;
    this.TEST_DATA_0 = '[{"id":123170274651668480,"state":"up","at":1974},{"id":422839753923362827,"state":"up","at":2494},{"id":422839753923362827,"state":"down","at":2555},{"id":422839753923362827,"state":"up","at":2595},{"id":422839753923362827,"state":"down","at":2994},{"id":422839753923362827,"state":"up","at":3014},{"id":422839753923362827,"state":"down","at":3154},{"id":422839753923362827,"state":"up","at":4354},{"id":422839753923362827,"state":"down","at":4875},{"id":422839753923362827,"state":"up","at":4895},{"id":422839753923362827,"state":"down","at":5114},{"id":123170274651668480,"state":"down","at":5814},{"id":123170274651668480,"state":"up","at":5836},{"id":123170274651668480,"state":"down","at":7594},{"id":123170274651668480,"state":"up","at":7634},{"id":123170274651668480,"state":"down","at":7714},{"id":123170274651668480,"state":"up","at":7734},{"id":422839753923362827,"state":"up","at":7874},{"id":422839753923362827,"state":"down","at":8614},{"id":422839753923362827,"state":"up","at":8654},{"id":422839753923362827,"state":"down","at":8674},{"id":422839753923362827,"state":"up","at":8694},{"id":422839753923362827,"state":"down","at":8794},{"id":123170274651668480,"state":"down","at":9434},{"id":123170274651668480,"state":"up","at":9554},{"id":123170274651668480,"state":"down","at":9854},{"id":123170274651668480,"state":"up","at":9874},{"id":123170274651668480,"state":"down","at":10234},{"id":123170274651668480,"state":"up","at":10254},{"id":123170274651668480,"state":"down","at":10654},{"id":422839753923362827,"state":"up","at":10774},{"id":422839753923362827,"state":"down","at":10834},{"id":422839753923362827,"state":"up","at":10934},{"id":422839753923362827,"state":"down","at":11074},{"id":422839753923362827,"state":"up","at":11094},{"id":422839753923362827,"state":"down","at":11454},{"id":422839753923362827,"state":"up","at":11494},{"id":422839753923362827,"state":"down","at":11874},{"id":422839753923362827,"state":"up","at":11914},{"id":422839753923362827,"state":"down","at":12014},{"id":422839753923362827,"state":"up","at":12074},{"id":422839753923362827,"state":"down","at":12174},{"id":422839753923362827,"state":"up","at":12194},{"id":123170274651668480,"state":"up","at":12234},{"id":422839753923362827,"state":"down","at":12314},{"id":422839753923362827,"state":"up","at":12354},{"id":123170274651668480,"state":"down","at":12474},{"id":123170274651668480,"state":"up","at":12494},{"id":422839753923362827,"state":"down","at":12514},{"id":123170274651668480,"state":"down","at":13694},{"id":123170274651668480,"state":"up","at":13714},{"id":123170274651668480,"state":"down","at":14154},{"id":422839753923362827,"state":"up","at":14834},{"id":422839753923362827,"state":"down","at":15054},{"id":422839753923362827,"state":"up","at":15074},{"id":422839753923362827,"state":"down","at":15795},{"id":123170274651668480,"state":"up","at":15894},{"id":123170274651668480,"state":"down","at":15954},{"id":123170274651668480,"state":"up","at":15994},{"id":123170274651668480,"state":"down","at":16434},{"id":123170274651668480,"state":"up","at":21197},{"id":123170274651668480,"state":"down","at":21214},{"id":123170274651668480,"state":"up","at":21237},{"id":123170274651668480,"state":"down","at":21577},{"id":123170274651668480,"state":"up","at":21597},{"id":123170274651668480,"state":"down","at":22817},{"id":123170274651668480,"state":"up","at":22834},{"id":123170274651668480,"state":"down","at":22974},{"id":123170274651668480,"state":"up","at":22996},{"id":123170274651668480,"state":"down","at":23594},{"id":123170274651668480,"state":"up","at":23614},{"id":123170274651668480,"state":"down","at":26994},{"id":422839753923362827,"state":"up","at":27574},{"id":123170274651668480,"state":"up","at":28194},{"id":422839753923362827,"state":"down","at":28217},{"id":123170274651668480,"state":"down","at":30914},{"id":123170274651668480,"state":"up","at":30934},{"id":422839753923362827,"state":"up","at":32196},{"id":123170274651668480,"state":"down","at":32634},{"id":422839753923362827,"state":"down","at":32974},{"id":422839753923362827,"state":"up","at":32994},{"id":123170274651668480,"state":"up","at":33861},{"id":123170274651668480,"state":"down","at":34014},{"id":123170274651668480,"state":"up","at":34034},{"id":422839753923362827,"state":"down","at":34354},{"id":123170274651668480,"state":"down","at":34794},{"id":123170274651668480,"state":"up","at":34814},{"id":347064573318135811,"state":"up","at":34914},{"id":347064573318135811,"state":"down","at":35697},{"id":347064573318135811,"state":"up","at":35754},{"id":347064573318135811,"state":"down","at":36194},{"id":422839753923362827,"state":"up","at":37037},{"id":422839753923362827,"state":"down","at":37174},{"id":422839753923362827,"state":"up","at":37194},{"id":422839753923362827,"state":"down","at":37356},{"id":422839753923362827,"state":"up","at":37374},{"id":123170274651668480,"state":"down","at":37674},{"id":123170274651668480,"state":"up","at":37697},{"id":422839753923362827,"state":"down","at":37856},{"id":123170274651668480,"state":"down","at":38594},{"id":123170274651668480,"state":"up","at":38614},{"id":422839753923362827,"state":"up","at":39014},{"id":422839753923362827,"state":"down","at":39118},{"id":422839753923362827,"state":"up","at":39259},{"id":422839753923362827,"state":"down","at":39454},{"id":422839753923362827,"state":"up","at":39517},{"id":123170274651668480,"state":"down","at":39534},{"id":422839753923362827,"state":"down","at":39694},{"id":422839753923362827,"state":"up","at":39794},{"id":422839753923362827,"state":"down","at":39977},{"id":422839753923362827,"state":"up","at":40054},{"id":422839753923362827,"state":"down","at":40216},{"id":422839753923362827,"state":"up","at":40314},{"id":422839753923362827,"state":"down","at":40496},{"id":422839753923362827,"state":"up","at":40636},{"id":422839753923362827,"state":"down","at":40775},{"id":422839753923362827,"state":"up","at":40846},{"id":123170274651668480,"state":"up","at":40975},{"id":422839753923362827,"state":"down","at":41034},{"id":123170274651668480,"state":"down","at":41074},{"id":123170274651668480,"state":"up","at":41094},{"id":422839753923362827,"state":"up","at":41094},{"id":422839753923362827,"state":"down","at":41154},{"id":422839753923362827,"state":"up","at":41454},{"id":422839753923362827,"state":"down","at":41474},{"id":422839753923362827,"state":"up","at":41614},{"id":123170274651668480,"state":"down","at":41654},{"id":123170274651668480,"state":"up","at":41694},{"id":123170274651668480,"state":"down","at":41754},{"id":123170274651668480,"state":"up","at":41774},{"id":422839753923362827,"state":"down","at":41814},{"id":422839753923362827,"state":"up","at":41874},{"id":422839753923362827,"state":"down","at":42054},{"id":422839753923362827,"state":"up","at":42134},{"id":123170274651668480,"state":"down","at":42214},{"id":422839753923362827,"state":"down","at":42315},{"id":422839753923362827,"state":"up","at":42398},{"id":422839753923362827,"state":"down","at":43014},{"id":422839753923362827,"state":"up","at":43077},{"id":422839753923362827,"state":"down","at":46234},{"id":422839753923362827,"state":"up","at":46254},{"id":422839753923362827,"state":"down","at":46314},{"id":422839753923362827,"state":"up","at":46334},{"id":347064573318135811,"state":"up","at":46555},{"id":347064573318135811,"state":"down","at":47134},{"id":347064573318135811,"state":"up","at":47154},{"id":347064573318135811,"state":"down","at":47194},{"id":422839753923362827,"state":"down","at":48034},{"id":123170274651668480,"state":"up","at":49574},{"id":123170274651668480,"state":"down","at":49594},{"id":123170274651668480,"state":"up","at":49614},{"id":123170274651668480,"state":"down","at":49774},{"id":123170274651668480,"state":"up","at":49794},{"id":123170274651668480,"state":"down","at":50274},{"id":123170274651668480,"state":"up","at":50294},{"id":123170274651668480,"state":"down","at":51334},{"id":123170274651668480,"state":"up","at":51374},{"id":123170274651668480,"state":"down","at":51934},{"id":123170274651668480,"state":"up","at":52155},{"id":310877707175198720,"state":"up","at":52176},{"id":310877707175198720,"state":"down","at":52316},{"id":310877707175198720,"state":"up","at":52336},{"id":310877707175198720,"state":"down","at":52555},{"id":310877707175198720,"state":"up","at":52575},{"id":123170274651668480,"state":"down","at":52975},{"id":310877707175198720,"state":"down","at":52975},{"id":123170274651668480,"state":"up","at":52995},{"id":310877707175198720,"state":"up","at":52995},{"id":310877707175198720,"state":"down","at":53256},{"id":310877707175198720,"state":"up","at":53274},{"id":310877707175198720,"state":"down","at":53334},{"id":310877707175198720,"state":"up","at":53354},{"id":310877707175198720,"state":"down","at":53515},{"id":310877707175198720,"state":"up","at":53534},{"id":310877707175198720,"state":"down","at":53854},{"id":123170274651668480,"state":"down","at":55334},{"id":310877707175198720,"state":"up","at":55494},{"id":310877707175198720,"state":"down","at":56294},{"id":310877707175198720,"state":"up","at":56314},{"id":310877707175198720,"state":"down","at":56494},{"id":310877707175198720,"state":"up","at":56534},{"id":310877707175198720,"state":"down","at":56934},{"id":123170274651668480,"state":"up","at":58574},{"id":123170274651668480,"state":"down","at":60754},{"id":422839753923362827,"state":"up","at":61194},{"id":123170274651668480,"state":"up","at":61574},{"id":310877707175198720,"state":"up","at":61594},{"id":123170274651668480,"state":"down","at":61614},{"id":123170274651668480,"state":"up","at":61634},{"id":310877707175198720,"state":"down","at":61694},{"id":310877707175198720,"state":"up","at":61714},{"id":422839753923362827,"state":"down","at":61794},{"id":422839753923362827,"state":"up","at":61974},{"id":123170274651668480,"state":"down","at":62054},{"id":123170274651668480,"state":"up","at":62114},{"id":123170274651668480,"state":"down","at":62394},{"id":310877707175198720,"state":"down","at":62474},{"id":422839753923362827,"state":"down","at":62474},{"id":310877707175198720,"state":"up","at":62494},{"id":422839753923362827,"state":"up","at":62494},{"id":123170274651668480,"state":"up","at":62534},{"id":123170274651668480,"state":"down","at":62694},{"id":422839753923362827,"state":"down","at":62754},{"id":123170274651668480,"state":"up","at":62854},{"id":310877707175198720,"state":"down","at":63055},{"id":123170274651668480,"state":"down","at":63074},{"id":123170274651668480,"state":"up","at":63574},{"id":347064573318135811,"state":"up","at":66735},{"id":347064573318135811,"state":"down","at":66842},{"id":123170274651668480,"state":"down","at":66842},{"id":347064573318135811,"state":"up","at":66854},{"id":123170274651668480,"state":"up","at":66854},{"id":347064573318135811,"state":"down","at":66916},{"id":347064573318135811,"state":"up","at":66954},{"id":347064573318135811,"state":"down","at":67577},{"id":310877707175198720,"state":"up","at":67674},{"id":310877707175198720,"state":"down","at":67914},{"id":310877707175198720,"state":"up","at":67937},{"id":310877707175198720,"state":"down","at":68094},{"id":310877707175198720,"state":"up","at":68114},{"id":310877707175198720,"state":"down","at":68494},{"id":310877707175198720,"state":"up","at":68534},{"id":310877707175198720,"state":"down","at":68614},{"id":310877707175198720,"state":"up","at":68774},{"id":347064573318135811,"state":"up","at":69274},{"id":347064573318135811,"state":"down","at":69494},{"id":347064573318135811,"state":"up","at":69534},{"id":310877707175198720,"state":"down","at":69937},{"id":347064573318135811,"state":"down","at":70094},{"id":123170274651668480,"state":"down","at":70276},{"id":123170274651668480,"state":"up","at":70417},{"id":123170274651668480,"state":"down","at":70475},{"id":123170274651668480,"state":"up","at":70494},{"id":123170274651668480,"state":"down","at":70620},{"id":123170274651668480,"state":"up","at":70655},{"id":310877707175198720,"state":"up","at":71074},{"id":310877707175198720,"state":"down","at":71114},{"id":310877707175198720,"state":"up","at":71134},{"id":310877707175198720,"state":"down","at":71534},{"id":310877707175198720,"state":"up","at":71554},{"id":310877707175198720,"state":"down","at":71634},{"id":310877707175198720,"state":"up","at":71694},{"id":310877707175198720,"state":"down","at":71934},{"id":310877707175198720,"state":"up","at":72274},{"id":310877707175198720,"state":"down","at":72354},{"id":310877707175198720,"state":"up","at":72374},{"id":347064573318135811,"state":"up","at":72474},{"id":347064573318135811,"state":"down","at":72554},{"id":347064573318135811,"state":"up","at":72574},{"id":347064573318135811,"state":"down","at":72754},{"id":347064573318135811,"state":"up","at":72814},{"id":347064573318135811,"state":"down","at":73314},{"id":310877707175198720,"state":"down","at":73354},{"id":310877707175198720,"state":"up","at":73374},{"id":310877707175198720,"state":"down","at":73814},{"id":123170274651668480,"state":"down","at":74954},{"id":123170274651668480,"state":"up","at":74974},{"id":123170274651668480,"state":"down","at":75334},{"id":422839753923362827,"state":"up","at":75777},{"id":422839753923362827,"state":"down","at":75874},{"id":422839753923362827,"state":"up","at":75914},{"id":123170274651668480,"state":"up","at":75934},{"id":123170274651668480,"state":"down","at":76097},{"id":123170274651668480,"state":"up","at":76116},{"id":422839753923362827,"state":"down","at":76395},{"id":310877707175198720,"state":"up","at":76854},{"id":310877707175198720,"state":"down","at":77054},{"id":310877707175198720,"state":"up","at":77075},{"id":123170274651668480,"state":"down","at":77095},{"id":422839753923362827,"state":"up","at":77282},{"id":422839753923362827,"state":"down","at":77294},{"id":422839753923362827,"state":"up","at":77314},{"id":310877707175198720,"state":"down","at":77634},{"id":422839753923362827,"state":"down","at":77654},{"id":310877707175198720,"state":"up","at":77674},{"id":422839753923362827,"state":"up","at":77674},{"id":422839753923362827,"state":"down","at":78894},{"id":422839753923362827,"state":"up","at":79034},{"id":422839753923362827,"state":"down","at":79074},{"id":422839753923362827,"state":"up","at":79094},{"id":347064573318135811,"state":"up","at":79774},{"id":310877707175198720,"state":"down","at":79794},{"id":310877707175198720,"state":"up","at":79814},{"id":310877707175198720,"state":"down","at":79954},{"id":310877707175198720,"state":"up","at":79974},{"id":347064573318135811,"state":"down","at":80074},{"id":347064573318135811,"state":"up","at":80094},{"id":422839753923362827,"state":"down","at":80394},{"id":347064573318135811,"state":"down","at":80534},{"id":347064573318135811,"state":"up","at":80614},{"id":310877707175198720,"state":"down","at":80654},{"id":347064573318135811,"state":"down","at":80874},{"id":123170274651668480,"state":"up","at":80974},{"id":123170274651668480,"state":"down","at":81014},{"id":123170274651668480,"state":"up","at":81034},{"id":123170274651668480,"state":"down","at":81114},{"id":123170274651668480,"state":"up","at":81138},{"id":422839753923362827,"state":"up","at":83774},{"id":123170274651668480,"state":"down","at":83774},{"id":422839753923362827,"state":"down","at":83895},{"id":422839753923362827,"state":"up","at":83914},{"id":123170274651668480,"state":"up","at":84094},{"id":347064573318135811,"state":"up","at":84634},{"id":347064573318135811,"state":"down","at":84834},{"id":347064573318135811,"state":"up","at":84854},{"id":123170274651668480,"state":"down","at":84994},{"id":347064573318135811,"state":"down","at":85434},{"id":123170274651668480,"state":"up","at":85474},{"id":123170274651668480,"state":"down","at":85494},{"id":123170274651668480,"state":"up","at":85514},{"id":347064573318135811,"state":"up","at":85574},{"id":422839753923362827,"state":"down","at":85675},{"id":347064573318135811,"state":"down","at":85714},{"id":347064573318135811,"state":"up","at":85735},{"id":422839753923362827,"state":"up","at":85834},{"id":123170274651668480,"state":"down","at":86134},{"id":123170274651668480,"state":"up","at":86154},{"id":347064573318135811,"state":"down","at":86394},{"id":347064573318135811,"state":"up","at":86434},{"id":422839753923362827,"state":"down","at":86454},{"id":347064573318135811,"state":"down","at":86914},{"id":422839753923362827,"state":"up","at":86994},{"id":422839753923362827,"state":"down","at":87594},{"id":123170274651668480,"state":"down","at":88114},{"id":347064573318135811,"state":"up","at":88414},{"id":347064573318135811,"state":"down","at":88994},{"id":123170274651668480,"state":"up","at":89774},{"id":123170274651668480,"state":"down","at":89914},{"id":123170274651668480,"state":"up","at":89935},{"id":422839753923362827,"state":"up","at":90114},{"id":347064573318135811,"state":"up","at":90354},{"id":123170274651668480,"state":"down","at":91274},{"id":422839753923362827,"state":"down","at":91274},{"id":123170274651668480,"state":"up","at":91714},{"id":123170274651668480,"state":"down","at":91734},{"id":123170274651668480,"state":"up","at":91754},{"id":347064573318135811,"state":"down","at":91774},{"id":123170274651668480,"state":"down","at":91814},{"id":123170274651668480,"state":"up","at":91834},{"id":123170274651668480,"state":"down","at":92974},{"id":123170274651668480,"state":"up","at":92994},{"id":422839753923362827,"state":"up","at":95494},{"id":422839753923362827,"state":"down","at":95574},{"id":422839753923362827,"state":"up","at":95614},{"id":422839753923362827,"state":"down","at":96134},{"id":422839753923362827,"state":"up","at":96274},{"id":422839753923362827,"state":"down","at":96694},{"id":123170274651668480,"state":"down","at":97214},{"id":422839753923362827,"state":"up","at":99134},{"id":422839753923362827,"state":"down","at":99734},{"id":422839753923362827,"state":"up","at":99754},{"id":422839753923362827,"state":"down","at":99794},{"id":347064573318135811,"state":"up","at":99954},{"id":347064573318135811,"state":"down","at":100034},{"id":347064573318135811,"state":"up","at":100114},{"id":347064573318135811,"state":"down","at":100634},{"id":123170274651668480,"state":"up","at":102254},{"id":123170274651668480,"state":"down","at":102294},{"id":123170274651668480,"state":"up","at":102314},{"id":422839753923362827,"state":"up","at":102514},{"id":422839753923362827,"state":"down","at":102534},{"id":422839753923362827,"state":"up","at":102554},{"id":422839753923362827,"state":"down","at":103154},{"id":422839753923362827,"state":"up","at":103834},{"id":422839753923362827,"state":"down","at":103914},{"id":422839753923362827,"state":"up","at":103934},{"id":422839753923362827,"state":"down","at":104554},{"id":123170274651668480,"state":"down","at":104714},{"id":123170274651668480,"state":"up","at":104734},{"id":422839753923362827,"state":"up","at":104934},{"id":422839753923362827,"state":"down","at":104974},{"id":422839753923362827,"state":"up","at":104994},{"id":123170274651668480,"state":"down","at":105035},{"id":123170274651668480,"state":"up","at":105054},{"id":422839753923362827,"state":"down","at":105814},{"id":123170274651668480,"state":"down","at":107274},{"id":310877707175198720,"state":"up","at":107314},{"id":310877707175198720,"state":"down","at":107334},{"id":310877707175198720,"state":"up","at":107354},{"id":310877707175198720,"state":"down","at":107374},{"id":310877707175198720,"state":"up","at":107414},{"id":422839753923362827,"state":"up","at":108014},{"id":422839753923362827,"state":"down","at":108034},{"id":422839753923362827,"state":"up","at":108054},{"id":123170274651668480,"state":"up","at":108094},{"id":123170274651668480,"state":"down","at":108134},{"id":123170274651668480,"state":"up","at":108154},{"id":310877707175198720,"state":"down","at":108514},{"id":310877707175198720,"state":"up","at":108574},{"id":422839753923362827,"state":"down","at":108654},{"id":310877707175198720,"state":"down","at":108914},{"id":123170274651668480,"state":"down","at":110134},{"id":123170274651668480,"state":"up","at":110194},{"id":123170274651668480,"state":"down","at":110214},{"id":123170274651668480,"state":"up","at":110234},{"id":123170274651668480,"state":"down","at":110554},{"id":123170274651668480,"state":"up","at":110574},{"id":422839753923362827,"state":"up","at":113374},{"id":422839753923362827,"state":"down","at":113414},{"id":422839753923362827,"state":"up","at":113434},{"id":422839753923362827,"state":"down","at":115037},{"id":422839753923362827,"state":"up","at":115194},{"id":422839753923362827,"state":"down","at":115214},{"id":422839753923362827,"state":"up","at":115235},{"id":123170274651668480,"state":"down","at":115378},{"id":422839753923362827,"state":"down","at":115382},{"id":123170274651668480,"state":"up","at":115387},{"id":422839753923362827,"state":"up","at":115387},{"id":422839753923362827,"state":"down","at":116474},{"id":422839753923362827,"state":"up","at":116514},{"id":422839753923362827,"state":"down","at":116554},{"id":422839753923362827,"state":"up","at":116574},{"id":422839753923362827,"state":"down","at":116674},{"id":123170274651668480,"state":"down","at":116736},{"id":422839753923362827,"state":"up","at":117155},{"id":422839753923362827,"state":"down","at":117415},{"id":422839753923362827,"state":"up","at":117434},{"id":422839753923362827,"state":"down","at":117834},{"id":310877707175198720,"state":"up","at":118994},{"id":310877707175198720,"state":"down","at":119094},{"id":310877707175198720,"state":"up","at":119114},{"id":310877707175198720,"state":"down","at":120234},{"id":123170274651668480,"state":"up","at":120514},{"id":123170274651668480,"state":"down","at":121274},{"id":123170274651668480,"state":"up","at":121294},{"id":123170274651668480,"state":"down","at":123915},{"id":422839753923362827,"state":"up","at":124274},{"id":422839753923362827,"state":"down","at":124454},{"id":422839753923362827,"state":"up","at":124474},{"id":123170274651668480,"state":"up","at":124654},{"id":123170274651668480,"state":"down","at":124694},{"id":123170274651668480,"state":"up","at":124714},{"id":123170274651668480,"state":"down","at":124814},{"id":123170274651668480,"state":"up","at":124837},{"id":422839753923362827,"state":"down","at":125194},{"id":123170274651668480,"state":"down","at":127314},{"id":123170274651668480,"state":"up","at":127334},{"id":123170274651668480,"state":"down","at":127434},{"id":123170274651668480,"state":"up","at":127454},{"id":123170274651668480,"state":"down","at":127816},{"id":123170274651668480,"state":"up","at":130834},{"id":123170274651668480,"state":"down","at":130854},{"id":123170274651668480,"state":"up","at":130874},{"id":123170274651668480,"state":"down","at":131314},{"id":123170274651668480,"state":"up","at":131334},{"id":123170274651668480,"state":"down","at":132834},{"id":123170274651668480,"state":"up","at":132854},{"id":123170274651668480,"state":"down","at":133014},{"id":123170274651668480,"state":"up","at":133034},{"id":123170274651668480,"state":"down","at":135214},{"id":123170274651668480,"state":"up","at":143874},{"id":123170274651668480,"state":"down","at":144494},{"id":123170274651668480,"state":"up","at":144934},{"id":123170274651668480,"state":"down","at":146374},{"id":123170274651668480,"state":"up","at":146397},{"id":123170274651668480,"state":"down","at":150094},{"id":123170274651668480,"state":"up","at":150278},{"id":123170274651668480,"state":"down","at":150417},{"id":123170274651668480,"state":"up","at":150434},{"id":123170274651668480,"state":"down","at":151357},{"id":123170274651668480,"state":"up","at":151374},{"id":123170274651668480,"state":"down","at":152614},{"id":123170274651668480,"state":"up","at":153374},{"id":123170274651668480,"state":"down","at":153434},{"id":123170274651668480,"state":"up","at":153454},{"id":123170274651668480,"state":"down","at":154074},{"id":123170274651668480,"state":"up","at":154094},{"id":123170274651668480,"state":"down","at":154514},{"id":123170274651668480,"state":"up","at":154534},{"id":123170274651668480,"state":"down","at":156794},{"id":123170274651668480,"state":"up","at":158074},{"id":123170274651668480,"state":"down","at":160314},{"id":123170274651668480,"state":"up","at":160334},{"id":168759625875718145,"state":"up","at":161054},{"id":168759625875718145,"state":"down","at":161454},{"id":168759625875718145,"state":"up","at":161534},{"id":168759625875718145,"state":"down","at":161899},{"id":168759625875718145,"state":"up","at":161914},{"id":168759625875718145,"state":"down","at":162054},{"id":123170274651668480,"state":"down","at":162194},{"id":123170274651668480,"state":"up","at":162234},{"id":123170274651668480,"state":"down","at":162294},{"id":123170274651668480,"state":"up","at":162334},{"id":123170274651668480,"state":"down","at":165814},{"id":123170274651668480,"state":"up","at":166114},{"id":123170274651668480,"state":"down","at":166154},{"id":123170274651668480,"state":"up","at":166174},{"id":123170274651668480,"state":"down","at":166454},{"id":123170274651668480,"state":"up","at":166474},{"id":168759625875718145,"state":"up","at":166574},{"id":168759625875718145,"state":"down","at":167034},{"id":168759625875718145,"state":"up","at":167754},{"id":168759625875718145,"state":"down","at":168194},{"id":168759625875718145,"state":"up","at":168794},{"id":123170274651668480,"state":"down","at":169054},{"id":168759625875718145,"state":"down","at":169374},{"id":168759625875718145,"state":"up","at":169614},{"id":168759625875718145,"state":"down","at":170114},{"id":168759625875718145,"state":"up","at":170194},{"id":168759625875718145,"state":"down","at":171654},{"id":168759625875718145,"state":"up","at":171914},{"id":168759625875718145,"state":"down","at":174874},{"id":123170274651668480,"state":"up","at":176454},{"id":123170274651668480,"state":"down","at":176494},{"id":123170274651668480,"state":"up","at":176514},{"id":123170274651668480,"state":"down","at":176734},{"id":123170274651668480,"state":"up","at":176754},{"id":123170274651668480,"state":"down","at":177674},{"id":123170274651668480,"state":"up","at":177694},{"id":123170274651668480,"state":"down","at":178374},{"id":168759625875718145,"state":"up","at":178854},{"id":168759625875718145,"state":"down","at":179494},{"id":168759625875718145,"state":"up","at":179514},{"id":168759625875718145,"state":"down","at":180674},{"id":123170274651668480,"state":"up","at":181714},{"id":123170274651668480,"state":"down","at":181754},{"id":123170274651668480,"state":"up","at":181774},{"id":123170274651668480,"state":"down","at":181794},{"id":123170274651668480,"state":"up","at":181834},{"id":123170274651668480,"state":"down","at":181914},{"id":123170274651668480,"state":"up","at":181974},{"id":123170274651668480,"state":"down","at":182074},{"id":123170274651668480,"state":"up","at":182094},{"id":123170274651668480,"state":"down","at":183254},{"id":123170274651668480,"state":"up","at":183274},{"id":168759625875718145,"state":"up","at":183654},{"id":123170274651668480,"state":"down","at":183794},{"id":123170274651668480,"state":"up","at":183874},{"id":168759625875718145,"state":"down","at":184254},{"id":168759625875718145,"state":"up","at":184274},{"id":168759625875718145,"state":"down","at":184514},{"id":168759625875718145,"state":"up","at":184534},{"id":123170274651668480,"state":"down","at":184534},{"id":123170274651668480,"state":"up","at":184554},{"id":168759625875718145,"state":"down","at":184834},{"id":123170274651668480,"state":"down","at":184954},{"id":168759625875718145,"state":"up","at":186554},{"id":168759625875718145,"state":"down","at":188274},{"id":123170274651668480,"state":"up","at":190334},{"id":123170274651668480,"state":"down","at":190954},{"id":123170274651668480,"state":"up","at":191334},{"id":123170274651668480,"state":"down","at":191354},{"id":123170274651668480,"state":"up","at":191374},{"id":168759625875718145,"state":"up","at":191574},{"id":123170274651668480,"state":"down","at":191674},{"id":123170274651668480,"state":"up","at":191694},{"id":168759625875718145,"state":"down","at":192254},{"id":123170274651668480,"state":"down","at":193234},{"id":123170274651668480,"state":"up","at":193294},{"id":123170274651668480,"state":"down","at":193734},{"id":123170274651668480,"state":"up","at":193814},{"id":123170274651668480,"state":"down","at":193914},{"id":123170274651668480,"state":"up","at":194074},{"id":123170274651668480,"state":"down","at":194254},{"id":123170274651668480,"state":"up","at":194316},{"id":123170274651668480,"state":"down","at":194416},{"id":123170274651668480,"state":"up","at":194434},{"id":123170274651668480,"state":"down","at":194534},{"id":123170274651668480,"state":"up","at":194555},{"id":123170274651668480,"state":"down","at":194717},{"id":123170274651668480,"state":"up","at":194737},{"id":123170274651668480,"state":"down","at":194894},{"id":123170274651668480,"state":"up","at":194917},{"id":123170274651668480,"state":"down","at":195094},{"id":123170274651668480,"state":"up","at":195794},{"id":123170274651668480,"state":"down","at":195834},{"id":123170274651668480,"state":"up","at":195854},{"id":123170274651668480,"state":"down","at":195894},{"id":123170274651668480,"state":"up","at":195914},{"id":123170274651668480,"state":"down","at":197854},{"id":123170274651668480,"state":"up","at":197894},{"id":123170274651668480,"state":"down","at":198594},{"id":123170274651668480,"state":"up","at":198614},{"id":123170274651668480,"state":"down","at":198696},{"id":123170274651668480,"state":"up","at":198856},{"id":123170274651668480,"state":"down","at":199974},{"id":123170274651668480,"state":"up","at":199994},{"id":123170274651668480,"state":"down","at":200354},{"id":123170274651668480,"state":"up","at":200394},{"id":123170274651668480,"state":"down","at":201234},{"id":123170274651668480,"state":"up","at":201294},{"id":123170274651668480,"state":"down","at":202934},{"id":168759625875718145,"state":"up","at":203474},{"id":168759625875718145,"state":"down","at":203494},{"id":168759625875718145,"state":"up","at":203514},{"id":168759625875718145,"state":"down","at":203634},{"id":168759625875718145,"state":"up","at":203654},{"id":168759625875718145,"state":"down","at":203954},{"id":168759625875718145,"state":"up","at":204434},{"id":168759625875718145,"state":"down","at":204594},{"id":168759625875718145,"state":"up","at":204614},{"id":168759625875718145,"state":"down","at":204914},{"id":168759625875718145,"state":"up","at":206814},{"id":168759625875718145,"state":"down","at":206834},{"id":168759625875718145,"state":"up","at":206854},{"id":123170274651668480,"state":"up","at":211214},{"id":123170274651668480,"state":"down","at":211234},{"id":123170274651668480,"state":"up","at":211254},{"id":168759625875718145,"state":"down","at":211394},{"id":123170274651668480,"state":"down","at":211634},{"id":123170274651668480,"state":"up","at":211655},{"id":422839753923362827,"state":"up","at":213534},{"id":422839753923362827,"state":"down","at":213574},{"id":422839753923362827,"state":"up","at":213594},{"id":123170274651668480,"state":"down","at":213654},{"id":168759625875718145,"state":"up","at":213782},{"id":168759625875718145,"state":"down","at":213782},{"id":168759625875718145,"state":"up","at":213794},{"id":422839753923362827,"state":"down","at":214174},{"id":168759625875718145,"state":"down","at":214234},{"id":422839753923362827,"state":"up","at":214334},{"id":422839753923362827,"state":"down","at":214374},{"id":422839753923362827,"state":"up","at":214394},{"id":422839753923362827,"state":"down","at":214434},{"id":422839753923362827,"state":"up","at":214474},{"id":422839753923362827,"state":"down","at":214875},{"id":422839753923362827,"state":"up","at":214934},{"id":422839753923362827,"state":"down","at":216680},{"id":422839753923362827,"state":"up","at":217454},{"id":422839753923362827,"state":"down","at":217474},{"id":422839753923362827,"state":"up","at":217494},{"id":422839753923362827,"state":"down","at":217754},{"id":422839753923362827,"state":"up","at":217794},{"id":422839753923362827,"state":"down","at":217854},{"id":422839753923362827,"state":"up","at":217874},{"id":168759625875718145,"state":"up","at":218114},{"id":422839753923362827,"state":"down","at":218154},{"id":168759625875718145,"state":"down","at":218154},{"id":168759625875718145,"state":"up","at":218174},{"id":123170274651668480,"state":"up","at":218194},{"id":123170274651668480,"state":"down","at":218254},{"id":123170274651668480,"state":"up","at":218274},{"id":422839753923362827,"state":"up","at":218474},{"id":422839753923362827,"state":"down","at":218574},{"id":422839753923362827,"state":"up","at":218614},{"id":123170274651668480,"state":"down","at":218634},{"id":123170274651668480,"state":"up","at":218654},{"id":422839753923362827,"state":"down","at":218734},{"id":422839753923362827,"state":"up","at":218774},{"id":123170274651668480,"state":"down","at":218854},{"id":422839753923362827,"state":"down","at":219454},{"id":422839753923362827,"state":"up","at":219475},{"id":168759625875718145,"state":"down","at":220674},{"id":422839753923362827,"state":"down","at":225914},{"id":168759625875718145,"state":"up","at":225994},{"id":168759625875718145,"state":"down","at":227014},{"id":168759625875718145,"state":"up","at":227034},{"id":422839753923362827,"state":"up","at":227074},{"id":422839753923362827,"state":"down","at":227814},{"id":422839753923362827,"state":"up","at":228214},{"id":422839753923362827,"state":"down","at":228234},{"id":422839753923362827,"state":"up","at":228254},{"id":123170274651668480,"state":"up","at":228354},{"id":168759625875718145,"state":"down","at":228394},{"id":123170274651668480,"state":"down","at":228754},{"id":123170274651668480,"state":"up","at":228774},{"id":422839753923362827,"state":"down","at":228974},{"id":422839753923362827,"state":"up","at":228994},{"id":422839753923362827,"state":"down","at":229034},{"id":123170274651668480,"state":"down","at":229134},{"id":422839753923362827,"state":"up","at":229174},{"id":422839753923362827,"state":"down","at":229194},{"id":422839753923362827,"state":"up","at":229214},{"id":310877707175198720,"state":"up","at":229234},{"id":123170274651668480,"state":"up","at":229254},{"id":422839753923362827,"state":"down","at":229594},{"id":422839753923362827,"state":"up","at":229614},{"id":422839753923362827,"state":"down","at":229714},{"id":422839753923362827,"state":"up","at":229854},{"id":123170274651668480,"state":"down","at":229874},{"id":422839753923362827,"state":"down","at":229874},{"id":422839753923362827,"state":"up","at":229894},{"id":310877707175198720,"state":"down","at":231174},{"id":422839753923362827,"state":"down","at":231854},{"id":422839753923362827,"state":"up","at":232014},{"id":422839753923362827,"state":"down","at":232054},{"id":422839753923362827,"state":"up","at":232074},{"id":123170274651668480,"state":"up","at":232094},{"id":422839753923362827,"state":"down","at":232134},{"id":422839753923362827,"state":"up","at":232154},{"id":422839753923362827,"state":"down","at":232574},{"id":123170274651668480,"state":"down","at":233014},{"id":123170274651668480,"state":"up","at":233034},{"id":422839753923362827,"state":"up","at":233174},{"id":123170274651668480,"state":"down","at":233334},{"id":422839753923362827,"state":"down","at":233354},{"id":422839753923362827,"state":"up","at":233374},{"id":422839753923362827,"state":"down","at":234174},{"id":422839753923362827,"state":"up","at":234194},{"id":422839753923362827,"state":"down","at":234214},{"id":422839753923362827,"state":"up","at":234234},{"id":422839753923362827,"state":"down","at":234674},{"id":422839753923362827,"state":"up","at":234694},{"id":422839753923362827,"state":"down","at":234774},{"id":168759625875718145,"state":"up","at":236374},{"id":422839753923362827,"state":"up","at":236774},{"id":422839753923362827,"state":"down","at":236794},{"id":422839753923362827,"state":"up","at":236814},{"id":168759625875718145,"state":"down","at":237354},{"id":168759625875718145,"state":"up","at":237374},{"id":168759625875718145,"state":"down","at":237914},{"id":168759625875718145,"state":"up","at":237974},{"id":422839753923362827,"state":"down","at":238094},{"id":422839753923362827,"state":"up","at":238114},{"id":422839753923362827,"state":"down","at":238374},{"id":422839753923362827,"state":"up","at":238534},{"id":422839753923362827,"state":"down","at":238574},{"id":422839753923362827,"state":"up","at":238594},{"id":422839753923362827,"state":"down","at":238974},{"id":422839753923362827,"state":"up","at":239174},{"id":422839753923362827,"state":"down","at":239214},{"id":422839753923362827,"state":"up","at":239234},{"id":422839753923362827,"state":"down","at":239554},{"id":422839753923362827,"state":"up","at":239614},{"id":168759625875718145,"state":"down","at":239735},{"id":123170274651668480,"state":"up","at":239834},{"id":123170274651668480,"state":"down","at":240114},{"id":123170274651668480,"state":"up","at":240134},{"id":123170274651668480,"state":"down","at":240174},{"id":123170274651668480,"state":"up","at":240196},{"id":123170274651668480,"state":"down","at":240914},{"id":422839753923362827,"state":"down","at":241214},{"id":310877707175198720,"state":"up","at":241714},{"id":310877707175198720,"state":"down","at":241734},{"id":310877707175198720,"state":"up","at":241754},{"id":310877707175198720,"state":"down","at":241775},{"id":310877707175198720,"state":"up","at":241794},{"id":310877707175198720,"state":"down","at":241914},{"id":310877707175198720,"state":"up","at":241937},{"id":123170274651668480,"state":"up","at":242174},{"id":123170274651668480,"state":"down","at":242194},{"id":123170274651668480,"state":"up","at":242254},{"id":123170274651668480,"state":"down","at":242757},{"id":123170274651668480,"state":"up","at":243594},{"id":123170274651668480,"state":"down","at":243694},{"id":123170274651668480,"state":"up","at":243714},{"id":123170274651668480,"state":"down","at":243934},{"id":123170274651668480,"state":"up","at":243954},{"id":310877707175198720,"state":"down","at":244174},{"id":422839753923362827,"state":"up","at":244235},{"id":123170274651668480,"state":"down","at":244314},{"id":422839753923362827,"state":"down","at":244334},{"id":422839753923362827,"state":"up","at":244374},{"id":123170274651668480,"state":"up","at":244494},{"id":422839753923362827,"state":"down","at":244794},{"id":422839753923362827,"state":"up","at":244814},{"id":422839753923362827,"state":"down","at":244854},{"id":422839753923362827,"state":"up","at":244874},{"id":123170274651668480,"state":"down","at":244974},{"id":422839753923362827,"state":"down","at":244974},{"id":123170274651668480,"state":"up","at":244996},{"id":422839753923362827,"state":"up","at":244996},{"id":422839753923362827,"state":"down","at":245494},{"id":422839753923362827,"state":"up","at":245774},{"id":422839753923362827,"state":"down","at":245874},{"id":422839753923362827,"state":"up","at":245894},{"id":123170274651668480,"state":"down","at":246674},{"id":123170274651668480,"state":"up","at":246714},{"id":123170274651668480,"state":"down","at":246874},{"id":123170274651668480,"state":"up","at":246914},{"id":123170274651668480,"state":"down","at":247094},{"id":422839753923362827,"state":"down","at":247094},{"id":123170274651668480,"state":"up","at":247114},{"id":422839753923362827,"state":"up","at":247114},{"id":123170274651668480,"state":"down","at":247634},{"id":123170274651668480,"state":"up","at":247654},{"id":123170274651668480,"state":"down","at":247794},{"id":422839753923362827,"state":"down","at":249034},{"id":422839753923362827,"state":"up","at":249174},{"id":422839753923362827,"state":"down","at":249494},{"id":422839753923362827,"state":"up","at":249514},{"id":422839753923362827,"state":"down","at":250014},{"id":422839753923362827,"state":"up","at":250034},{"id":422839753923362827,"state":"down","at":250554},{"id":422839753923362827,"state":"up","at":250714},{"id":422839753923362827,"state":"down","at":250774},{"id":422839753923362827,"state":"up","at":250794},{"id":123170274651668480,"state":"up","at":250814},{"id":422839753923362827,"state":"down","at":251414},{"id":123170274651668480,"state":"down","at":251794},{"id":123170274651668480,"state":"up","at":251814},{"id":123170274651668480,"state":"down","at":252034},{"id":123170274651668480,"state":"up","at":252054},{"id":123170274651668480,"state":"down","at":252914},{"id":422839753923362827,"state":"up","at":253234},{"id":422839753923362827,"state":"down","at":253474},{"id":422839753923362827,"state":"up","at":253494},{"id":422839753923362827,"state":"down","at":254694},{"id":416056545051279370,"state":"up","at":254754},{"id":123170274651668480,"state":"up","at":254774},{"id":123170274651668480,"state":"down","at":255076},{"id":416056545051279370,"state":"down","at":255076},{"id":123170274651668480,"state":"up","at":255094},{"id":416056545051279370,"state":"up","at":255094},{"id":123170274651668480,"state":"down","at":255274},{"id":123170274651668480,"state":"up","at":255294},{"id":123170274651668480,"state":"down","at":255614},{"id":123170274651668480,"state":"up","at":255634},{"id":416056545051279370,"state":"down","at":256814},{"id":123170274651668480,"state":"down","at":258234},{"id":123170274651668480,"state":"up","at":258254},{"id":416056545051279370,"state":"up","at":259994},{"id":123170274651668480,"state":"down","at":260014},{"id":416056545051279370,"state":"down","at":260034},{"id":416056545051279370,"state":"up","at":260054},{"id":422839753923362827,"state":"up","at":262074},{"id":422839753923362827,"state":"down","at":262194},{"id":422839753923362827,"state":"up","at":262214},{"id":416056545051279370,"state":"down","at":262574},{"id":416056545051279370,"state":"up","at":262594},{"id":416056545051279370,"state":"down","at":262794},{"id":422839753923362827,"state":"down","at":262834},{"id":422839753923362827,"state":"up","at":262894},{"id":422839753923362827,"state":"down","at":264714},{"id":422839753923362827,"state":"up","at":264934},{"id":416056545051279370,"state":"up","at":265214},{"id":422839753923362827,"state":"down","at":265214},{"id":422839753923362827,"state":"up","at":265234},{"id":416056545051279370,"state":"down","at":265254},{"id":416056545051279370,"state":"up","at":265274},{"id":422839753923362827,"state":"down","at":265614},{"id":422839753923362827,"state":"up","at":265634},{"id":416056545051279370,"state":"down","at":265754},{"id":422839753923362827,"state":"down","at":265974},{"id":422839753923362827,"state":"up","at":266014},{"id":123170274651668480,"state":"up","at":266194},{"id":123170274651668480,"state":"down","at":266214},{"id":123170274651668480,"state":"up","at":266234},{"id":123170274651668480,"state":"down","at":266394},{"id":123170274651668480,"state":"up","at":266514},{"id":123170274651668480,"state":"down","at":266614},{"id":123170274651668480,"state":"up","at":266634},{"id":123170274651668480,"state":"down","at":267334},{"id":123170274651668480,"state":"up","at":267614},{"id":416056545051279370,"state":"up","at":267674},{"id":416056545051279370,"state":"down","at":267714},{"id":416056545051279370,"state":"up","at":267734},{"id":123170274651668480,"state":"down","at":267994},{"id":123170274651668480,"state":"up","at":268014},{"id":123170274651668480,"state":"down","at":268194},{"id":123170274651668480,"state":"up","at":268234},{"id":416056545051279370,"state":"down","at":268274},{"id":123170274651668480,"state":"down","at":268874},{"id":422839753923362827,"state":"down","at":269054},{"id":416056545051279370,"state":"up","at":269574},{"id":422839753923362827,"state":"up","at":269814},{"id":422839753923362827,"state":"down","at":269854},{"id":422839753923362827,"state":"up","at":269874},{"id":422839753923362827,"state":"down","at":270134},{"id":422839753923362827,"state":"up","at":270154},{"id":416056545051279370,"state":"down","at":271174},{"id":422839753923362827,"state":"down","at":271234},{"id":422839753923362827,"state":"up","at":271254},{"id":422839753923362827,"state":"down","at":271274},{"id":422839753923362827,"state":"up","at":271374},{"id":416056545051279370,"state":"up","at":271414},{"id":422839753923362827,"state":"down","at":271554},{"id":416056545051279370,"state":"down","at":271994},{"id":123170274651668480,"state":"up","at":277314},{"id":123170274651668480,"state":"down","at":278136},{"id":123170274651668480,"state":"up","at":278154},{"id":123170274651668480,"state":"down","at":278314},{"id":123170274651668480,"state":"up","at":278416},{"id":123170274651668480,"state":"down","at":278654},{"id":123170274651668480,"state":"up","at":278674},{"id":123170274651668480,"state":"down","at":278994},{"id":123170274651668480,"state":"up","at":279014},{"id":123170274651668480,"state":"down","at":279074},{"id":123170274651668480,"state":"up","at":279154},{"id":123170274651668480,"state":"down","at":279256},{"id":123170274651668480,"state":"up","at":279655},{"id":123170274651668480,"state":"down","at":279694},{"id":123170274651668480,"state":"up","at":279734},{"id":123170274651668480,"state":"down","at":280474},{"id":123170274651668480,"state":"up","at":280494},{"id":123170274651668480,"state":"down","at":281594},{"id":123170274651668480,"state":"up","at":281695},{"id":123170274651668480,"state":"down","at":281794},{"id":123170274651668480,"state":"up","at":282054},{"id":123170274651668480,"state":"down","at":282074},{"id":123170274651668480,"state":"up","at":282094},{"id":123170274651668480,"state":"down","at":282155},{"id":123170274651668480,"state":"up","at":282178},{"id":123170274651668480,"state":"down","at":283178},{"id":123170274651668480,"state":"up","at":283201},{"id":123170274651668480,"state":"down","at":284574},{"id":123170274651668480,"state":"up","at":285614},{"id":123170274651668480,"state":"down","at":285937},{"id":123170274651668480,"state":"up","at":285957},{"id":123170274651668480,"state":"down","at":286494},{"id":123170274651668480,"state":"up","at":286514},{"id":422839753923362827,"state":"up","at":287934},{"id":422839753923362827,"state":"down","at":288134},{"id":422839753923362827,"state":"up","at":288154},{"id":422839753923362827,"state":"down","at":288574},{"id":422839753923362827,"state":"up","at":289474},{"id":422839753923362827,"state":"down","at":289654},{"id":422839753923362827,"state":"up","at":289674},{"id":422839753923362827,"state":"down","at":290196},{"id":123170274651668480,"state":"down","at":291094},{"id":123170274651668480,"state":"up","at":291254},{"id":123170274651668480,"state":"down","at":292254},{"id":123170274651668480,"state":"up","at":292334},{"id":123170274651668480,"state":"down","at":292534},{"id":123170274651668480,"state":"up","at":292554},{"id":123170274651668480,"state":"down","at":292734},{"id":123170274651668480,"state":"up","at":292754},{"id":123170274651668480,"state":"down","at":293174},{"id":123170274651668480,"state":"up","at":293214},{"id":123170274651668480,"state":"down","at":293934},{"id":422839753923362827,"state":"up","at":294894},{"id":422839753923362827,"state":"down","at":295034},{"id":422839753923362827,"state":"up","at":295054},{"id":422839753923362827,"state":"down","at":296394},{"id":422839753923362827,"state":"up","at":297494},{"id":422839753923362827,"state":"down","at":299094},{"id":422839753923362827,"state":"up","at":299254},{"id":422839753923362827,"state":"down","at":300014},{"id":422839753923362827,"state":"up","at":300034},{"id":422839753923362827,"state":"down","at":301494},{"id":422839753923362827,"state":"up","at":301654},{"id":422839753923362827,"state":"down","at":302014},{"id":422839753923362827,"state":"up","at":302034},{"id":422839753923362827,"state":"down","at":302294},{"id":422839753923362827,"state":"up","at":302574},{"id":422839753923362827,"state":"down","at":302714},{"id":422839753923362827,"state":"up","at":302734},{"id":422839753923362827,"state":"down","at":303574},{"id":422839753923362827,"state":"up","at":303614},{"id":422839753923362827,"state":"down","at":303774},{"id":422839753923362827,"state":"up","at":304414},{"id":422839753923362827,"state":"down","at":305094},{"id":123170274651668480,"state":"up","at":305654},{"id":123170274651668480,"state":"down","at":305694},{"id":123170274651668480,"state":"up","at":305734},{"id":123170274651668480,"state":"down","at":306394},{"id":123170274651668480,"state":"up","at":306414},{"id":123170274651668480,"state":"down","at":306774},{"id":123170274651668480,"state":"up","at":308374},{"id":123170274651668480,"state":"down","at":310174},{"id":123170274651668480,"state":"up","at":310214},{"id":123170274651668480,"state":"down","at":310294},{"id":123170274651668480,"state":"up","at":310694},{"id":123170274651668480,"state":"down","at":310794},{"id":123170274651668480,"state":"up","at":310854},{"id":123170274651668480,"state":"down","at":310955},{"id":123170274651668480,"state":"up","at":310994},{"id":123170274651668480,"state":"down","at":312914},{"id":123170274651668480,"state":"up","at":312934},{"id":123170274651668480,"state":"down","at":313454},{"id":123170274651668480,"state":"up","at":313474},{"id":123170274651668480,"state":"down","at":313914},{"id":123170274651668480,"state":"up","at":315194},{"id":123170274651668480,"state":"down","at":315214},{"id":123170274651668480,"state":"up","at":315234},{"id":123170274651668480,"state":"down","at":315274},{"id":123170274651668480,"state":"up","at":315294},{"id":123170274651668480,"state":"down","at":315814},{"id":123170274651668480,"state":"up","at":315834},{"id":123170274651668480,"state":"down","at":316954},{"id":123170274651668480,"state":"up","at":317374},{"id":123170274651668480,"state":"down","at":317414},{"id":123170274651668480,"state":"up","at":317454},{"id":310877707175198720,"state":"up","at":318034},{"id":310877707175198720,"state":"down","at":318914},{"id":310877707175198720,"state":"up","at":319274},{"id":310877707175198720,"state":"down","at":319734},{"id":310877707175198720,"state":"up","at":319754},{"id":310877707175198720,"state":"down","at":320234},{"id":123170274651668480,"state":"down","at":320874},{"id":123170274651668480,"state":"up","at":320894},{"id":123170274651668480,"state":"down","at":320974},{"id":123170274651668480,"state":"up","at":321234},{"id":123170274651668480,"state":"down","at":321735},{"id":123170274651668480,"state":"up","at":321774},{"id":123170274651668480,"state":"down","at":321954},{"id":123170274651668480,"state":"up","at":321994},{"id":123170274651668480,"state":"down","at":322474},{"id":123170274651668480,"state":"up","at":322495},{"id":123170274651668480,"state":"down","at":326034},{"id":123170274651668480,"state":"up","at":326074},{"id":123170274651668480,"state":"down","at":326454},{"id":123170274651668480,"state":"up","at":326554},{"id":123170274651668480,"state":"down","at":329754},{"id":123170274651668480,"state":"up","at":330074},{"id":123170274651668480,"state":"down","at":330094},{"id":123170274651668480,"state":"up","at":330114},{"id":123170274651668480,"state":"down","at":332114},{"id":123170274651668480,"state":"up","at":332134},{"id":123170274651668480,"state":"down","at":335194},{"id":123170274651668480,"state":"up","at":335374},{"id":123170274651668480,"state":"down","at":336314},{"id":123170274651668480,"state":"up","at":336474},{"id":123170274651668480,"state":"down","at":337134},{"id":123170274651668480,"state":"up","at":337154},{"id":123170274651668480,"state":"down","at":337694},{"id":123170274651668480,"state":"up","at":337774},{"id":123170274651668480,"state":"down","at":337794},{"id":123170274651668480,"state":"up","at":337814},{"id":123170274651668480,"state":"down","at":338694},{"id":123170274651668480,"state":"up","at":338874},{"id":123170274651668480,"state":"down","at":338914},{"id":123170274651668480,"state":"up","at":338934},{"id":123170274651668480,"state":"down","at":339614},{"id":123170274651668480,"state":"up","at":340234},{"id":123170274651668480,"state":"down","at":340254},{"id":123170274651668480,"state":"up","at":340274},{"id":123170274651668480,"state":"down","at":341334},{"id":123170274651668480,"state":"up","at":341774},{"id":123170274651668480,"state":"down","at":342154},{"id":123170274651668480,"state":"up","at":342174},{"id":123170274651668480,"state":"down","at":343314},{"id":123170274651668480,"state":"up","at":343374},{"id":123170274651668480,"state":"down","at":343834},{"id":123170274651668480,"state":"up","at":344254},{"id":123170274651668480,"state":"down","at":344994},{"id":123170274651668480,"state":"up","at":346194},{"id":123170274651668480,"state":"down","at":346214},{"id":123170274651668480,"state":"up","at":346234},{"id":123170274651668480,"state":"down","at":346714},{"id":123170274651668480,"state":"up","at":347354},{"id":123170274651668480,"state":"down","at":347414},{"id":123170274651668480,"state":"up","at":347434},{"id":123170274651668480,"state":"down","at":347894},{"id":123170274651668480,"state":"up","at":347994},{"id":123170274651668480,"state":"down","at":348274},{"id":123170274651668480,"state":"up","at":348294},{"id":123170274651668480,"state":"down","at":350014},{"id":123170274651668480,"state":"up","at":350034},{"id":123170274651668480,"state":"down","at":351514},{"id":123170274651668480,"state":"up","at":352074},{"id":123170274651668480,"state":"down","at":352114},{"id":123170274651668480,"state":"up","at":352134},{"id":123170274651668480,"state":"down","at":352194},{"id":123170274651668480,"state":"up","at":352214},{"id":123170274651668480,"state":"down","at":356436},{"id":123170274651668480,"state":"up","at":356514},{"id":123170274651668480,"state":"down","at":356774},{"id":123170274651668480,"state":"up","at":356799},{"id":123170274651668480,"state":"down","at":358534},{"id":123170274651668480,"state":"up","at":358554},{"id":123170274651668480,"state":"down","at":359874},{"id":123170274651668480,"state":"up","at":359894},{"id":123170274651668480,"state":"down","at":359934},{"id":123170274651668480,"state":"up","at":359954},{"id":123170274651668480,"state":"down","at":360777},{"id":123170274651668480,"state":"up","at":363254},{"id":123170274651668480,"state":"down","at":363314},{"id":123170274651668480,"state":"up","at":363334},{"id":123170274651668480,"state":"down","at":364014},{"id":123170274651668480,"state":"up","at":364034},{"id":123170274651668480,"state":"down","at":364174},{"id":123170274651668480,"state":"up","at":364214},{"id":123170274651668480,"state":"down","at":364254},{"id":123170274651668480,"state":"up","at":364434},{"id":123170274651668480,"state":"down","at":364534},{"id":123170274651668480,"state":"up","at":364554},{"id":123170274651668480,"state":"down","at":364714},{"id":123170274651668480,"state":"up","at":364754},{"id":123170274651668480,"state":"down","at":364934},{"id":123170274651668480,"state":"up","at":365214},{"id":123170274651668480,"state":"down","at":365314},{"id":123170274651668480,"state":"up","at":366834},{"id":123170274651668480,"state":"down","at":366934},{"id":123170274651668480,"state":"up","at":367334},{"id":123170274651668480,"state":"down","at":367434},{"id":123170274651668480,"state":"up","at":367514},{"id":123170274651668480,"state":"down","at":367614},{"id":123170274651668480,"state":"up","at":367935},{"id":123170274651668480,"state":"down","at":368054},{"id":123170274651668480,"state":"up","at":368534},{"id":123170274651668480,"state":"down","at":368634},{"id":123170274651668480,"state":"up","at":368654},{"id":123170274651668480,"state":"down","at":369055},{"id":123170274651668480,"state":"up","at":369155},{"id":123170274651668480,"state":"down","at":369414},{"id":123170274651668480,"state":"up","at":369434},{"id":123170274651668480,"state":"down","at":369535},{"id":123170274651668480,"state":"up","at":369554},{"id":123170274651668480,"state":"down","at":370014},{"id":123170274651668480,"state":"up","at":370034},{"id":123170274651668480,"state":"down","at":370234},{"id":123170274651668480,"state":"up","at":370274},{"id":123170274651668480,"state":"down","at":370595},{"id":123170274651668480,"state":"up","at":370615},{"id":123170274651668480,"state":"down","at":370874},{"id":123170274651668480,"state":"up","at":370975},{"id":123170274651668480,"state":"down","at":371274},{"id":123170274651668480,"state":"up","at":372794},{"id":123170274651668480,"state":"down","at":372814},{"id":123170274651668480,"state":"up","at":372834},{"id":123170274651668480,"state":"down","at":372874},{"id":123170274651668480,"state":"up","at":372894},{"id":422839753923362827,"state":"up","at":372994},{"id":422839753923362827,"state":"down","at":373034},{"id":422839753923362827,"state":"up","at":373054},{"id":422839753923362827,"state":"down","at":373374},{"id":422839753923362827,"state":"up","at":373394},{"id":123170274651668480,"state":"down","at":373675},{"id":123170274651668480,"state":"up","at":373734},{"id":123170274651668480,"state":"down","at":373774},{"id":123170274651668480,"state":"up","at":373794},{"id":123170274651668480,"state":"down","at":374274},{"id":422839753923362827,"state":"down","at":374774},{"id":422839753923362827,"state":"up","at":374794},{"id":123170274651668480,"state":"up","at":375934},{"id":123170274651668480,"state":"down","at":375974},{"id":123170274651668480,"state":"up","at":375996},{"id":123170274651668480,"state":"down","at":376074},{"id":123170274651668480,"state":"up","at":376094},{"id":123170274651668480,"state":"down","at":376594},{"id":123170274651668480,"state":"up","at":376614},{"id":422839753923362827,"state":"down","at":376754},{"id":123170274651668480,"state":"down","at":377714},{"id":123170274651668480,"state":"up","at":378134},{"id":123170274651668480,"state":"down","at":378214},{"id":123170274651668480,"state":"up","at":378234},{"id":422839753923362827,"state":"up","at":379314},{"id":422839753923362827,"state":"down","at":379374},{"id":422839753923362827,"state":"up","at":379394},{"id":123170274651668480,"state":"down","at":379514},{"id":422839753923362827,"state":"down","at":380094},{"id":123170274651668480,"state":"up","at":380354},{"id":123170274651668480,"state":"down","at":380414},{"id":123170274651668480,"state":"up","at":380434},{"id":123170274651668480,"state":"down","at":382334},{"id":123170274651668480,"state":"up","at":382359},{"id":123170274651668480,"state":"down","at":382775},{"id":123170274651668480,"state":"up","at":382834},{"id":123170274651668480,"state":"down","at":383714},{"id":123170274651668480,"state":"up","at":383734},{"id":123170274651668480,"state":"down","at":384090},{"id":123170274651668480,"state":"up","at":384117},{"id":123170274651668480,"state":"down","at":386714},{"id":123170274651668480,"state":"up","at":386754},{"id":123170274651668480,"state":"down","at":387334},{"id":123170274651668480,"state":"up","at":387354},{"id":123170274651668480,"state":"down","at":387414},{"id":123170274651668480,"state":"up","at":387434},{"id":123170274651668480,"state":"down","at":387934},{"id":123170274651668480,"state":"up","at":387954},{"id":123170274651668480,"state":"down","at":388314},{"id":123170274651668480,"state":"up","at":389574},{"id":123170274651668480,"state":"down","at":389594},{"id":123170274651668480,"state":"up","at":389614},{"id":123170274651668480,"state":"down","at":390394},{"id":422839753923362827,"state":"up","at":390894},{"id":422839753923362827,"state":"down","at":391074},{"id":422839753923362827,"state":"up","at":391094},{"id":422839753923362827,"state":"down","at":391594},{"id":123170274651668480,"state":"up","at":391734},{"id":123170274651668480,"state":"down","at":392354},{"id":123170274651668480,"state":"up","at":392375},{"id":123170274651668480,"state":"down","at":392574},{"id":123170274651668480,"state":"up","at":392614},{"id":123170274651668480,"state":"down","at":392634},{"id":123170274651668480,"state":"up","at":392654},{"id":123170274651668480,"state":"down","at":392714},{"id":123170274651668480,"state":"up","at":392734},{"id":123170274651668480,"state":"down","at":393154},{"id":123170274651668480,"state":"up","at":393214},{"id":123170274651668480,"state":"down","at":393574},{"id":123170274651668480,"state":"up","at":393594},{"id":123170274651668480,"state":"down","at":393774},{"id":123170274651668480,"state":"up","at":394254},{"id":123170274651668480,"state":"down","at":396614},{"id":123170274651668480,"state":"up","at":396674},{"id":123170274651668480,"state":"down","at":396694},{"id":123170274651668480,"state":"up","at":396714},{"id":123170274651668480,"state":"down","at":397014},{"id":123170274651668480,"state":"up","at":397034},{"id":123170274651668480,"state":"down","at":397114},{"id":123170274651668480,"state":"up","at":397154},{"id":123170274651668480,"state":"down","at":397274},{"id":123170274651668480,"state":"up","at":397295},{"id":123170274651668480,"state":"down","at":399354},{"id":123170274651668480,"state":"up","at":400114},{"id":123170274651668480,"state":"down","at":400134},{"id":123170274651668480,"state":"up","at":400214},{"id":123170274651668480,"state":"down","at":401354},{"id":123170274651668480,"state":"up","at":401534},{"id":123170274651668480,"state":"down","at":401574},{"id":123170274651668480,"state":"up","at":401594},{"id":123170274651668480,"state":"down","at":402114},{"id":123170274651668480,"state":"up","at":403134},{"id":123170274651668480,"state":"down","at":403674},{"id":123170274651668480,"state":"up","at":403794},{"id":123170274651668480,"state":"down","at":404314},{"id":123170274651668480,"state":"up","at":405334},{"id":123170274651668480,"state":"down","at":406154},{"id":123170274651668480,"state":"up","at":406434},{"id":123170274651668480,"state":"down","at":407254},{"id":123170274651668480,"state":"up","at":407314},{"id":123170274651668480,"state":"down","at":407334},{"id":123170274651668480,"state":"up","at":407354},{"id":123170274651668480,"state":"down","at":407414},{"id":123170274651668480,"state":"up","at":407434},{"id":123170274651668480,"state":"down","at":408994},{"id":123170274651668480,"state":"up","at":409014},{"id":123170274651668480,"state":"down","at":409214},{"id":123170274651668480,"state":"up","at":409274},{"id":123170274651668480,"state":"down","at":410915},{"id":123170274651668480,"state":"up","at":410935},{"id":123170274651668480,"state":"down","at":411354},{"id":123170274651668480,"state":"up","at":412814},{"id":123170274651668480,"state":"down","at":412914},{"id":123170274651668480,"state":"up","at":412934},{"id":123170274651668480,"state":"down","at":415534},{"id":123170274651668480,"state":"up","at":415555},{"id":347064573318135811,"state":"up","at":416985},{"id":347064573318135811,"state":"down","at":417116},{"id":347064573318135811,"state":"up","at":417137},{"id":347064573318135811,"state":"down","at":417374},{"id":347064573318135811,"state":"up","at":417394},{"id":347064573318135811,"state":"down","at":417557},{"id":347064573318135811,"state":"up","at":417614},{"id":347064573318135811,"state":"down","at":417694},{"id":123170274651668480,"state":"down","at":422295},{"id":123170274651668480,"state":"up","at":422314},{"id":123170274651668480,"state":"down","at":424094},{"id":123170274651668480,"state":"up","at":424314},{"id":123170274651668480,"state":"down","at":424334},{"id":123170274651668480,"state":"up","at":424354},{"id":123170274651668480,"state":"down","at":424574},{"id":123170274651668480,"state":"up","at":424594},{"id":123170274651668480,"state":"down","at":425157},{"id":123170274651668480,"state":"up","at":426054},{"id":123170274651668480,"state":"down","at":427414},{"id":123170274651668480,"state":"up","at":427754},{"id":123170274651668480,"state":"down","at":429214},{"id":123170274651668480,"state":"up","at":429814},{"id":123170274651668480,"state":"down","at":429834},{"id":123170274651668480,"state":"up","at":429854},{"id":123170274651668480,"state":"down","at":429994},{"id":123170274651668480,"state":"up","at":430014},{"id":123170274651668480,"state":"down","at":430154},{"id":123170274651668480,"state":"up","at":430174},{"id":347064573318135811,"state":"up","at":430854},{"id":347064573318135811,"state":"down","at":430894},{"id":347064573318135811,"state":"up","at":430914},{"id":347064573318135811,"state":"down","at":431194},{"id":347064573318135811,"state":"up","at":431254},{"id":347064573318135811,"state":"down","at":431514},{"id":123170274651668480,"state":"down","at":432314},{"id":123170274651668480,"state":"up","at":432334},{"id":123170274651668480,"state":"down","at":432434},{"id":123170274651668480,"state":"up","at":432854},{"id":123170274651668480,"state":"down","at":432874},{"id":123170274651668480,"state":"up","at":432894},{"id":123170274651668480,"state":"down","at":433754},{"id":123170274651668480,"state":"up","at":434494},{"id":123170274651668480,"state":"down","at":435874},{"id":123170274651668480,"state":"up","at":436514},{"id":123170274651668480,"state":"down","at":436994},{"id":123170274651668480,"state":"up","at":437014},{"id":123170274651668480,"state":"down","at":437194},{"id":123170274651668480,"state":"up","at":437214},{"id":123170274651668480,"state":"down","at":437434},{"id":123170274651668480,"state":"up","at":438954},{"id":347064573318135811,"state":"up","at":439174},{"id":347064573318135811,"state":"down","at":439254},{"id":347064573318135811,"state":"up","at":439274},{"id":347064573318135811,"state":"down","at":439334},{"id":347064573318135811,"state":"up","at":439374},{"id":347064573318135811,"state":"down","at":439494},{"id":347064573318135811,"state":"up","at":439514},{"id":347064573318135811,"state":"down","at":439874},{"id":123170274651668480,"state":"down","at":440814},{"id":123170274651668480,"state":"up","at":441634},{"id":123170274651668480,"state":"down","at":442554},{"id":123170274651668480,"state":"up","at":442574},{"id":123170274651668480,"state":"down","at":444234},{"id":123170274651668480,"state":"up","at":444414},{"id":422839753923362827,"state":"up","at":445234},{"id":489572594555813888,"state":"up","at":445394},{"id":489572594555813888,"state":"down","at":445414},{"id":489572594555813888,"state":"up","at":445434},{"id":422839753923362827,"state":"down","at":445854},{"id":489572594555813888,"state":"down","at":445934},{"id":489572594555813888,"state":"up","at":445954},{"id":489572594555813888,"state":"down","at":446354},{"id":123170274651668480,"state":"down","at":446494},{"id":489572594555813888,"state":"up","at":446694},{"id":123170274651668480,"state":"up","at":447634},{"id":123170274651668480,"state":"down","at":447654},{"id":123170274651668480,"state":"up","at":447674},{"id":123170274651668480,"state":"down","at":447694},{"id":123170274651668480,"state":"up","at":447714},{"id":489572594555813888,"state":"down","at":447754},{"id":422839753923362827,"state":"up","at":447934},{"id":422839753923362827,"state":"down","at":448074},{"id":422839753923362827,"state":"up","at":448094},{"id":123170274651668480,"state":"down","at":448194},{"id":123170274651668480,"state":"up","at":448514},{"id":123170274651668480,"state":"down","at":448534},{"id":123170274651668480,"state":"up","at":448554},{"id":422839753923362827,"state":"down","at":448654},{"id":422839753923362827,"state":"up","at":448754},{"id":422839753923362827,"state":"down","at":448814},{"id":123170274651668480,"state":"down","at":450814},{"id":123170274651668480,"state":"up","at":450834},{"id":123170274651668480,"state":"down","at":451154},{"id":123170274651668480,"state":"up","at":451434},{"id":123170274651668480,"state":"down","at":451554},{"id":123170274651668480,"state":"up","at":451574},{"id":489572594555813888,"state":"up","at":452054},{"id":489572594555813888,"state":"down","at":452094},{"id":489572594555813888,"state":"up","at":452114},{"id":422839753923362827,"state":"up","at":452194},{"id":422839753923362827,"state":"down","at":452274},{"id":422839753923362827,"state":"up","at":452294},{"id":123170274651668480,"state":"down","at":452534},{"id":489572594555813888,"state":"down","at":452594},{"id":422839753923362827,"state":"down","at":452814},{"id":123170274651668480,"state":"up","at":452874},{"id":489572594555813888,"state":"up","at":452914},{"id":123170274651668480,"state":"down","at":452954},{"id":123170274651668480,"state":"up","at":452974},{"id":489572594555813888,"state":"down","at":453414},{"id":123170274651668480,"state":"down","at":453674},{"id":123170274651668480,"state":"up","at":453934},{"id":123170274651668480,"state":"down","at":454474},{"id":123170274651668480,"state":"up","at":455134},{"id":489572594555813888,"state":"up","at":455334},{"id":489572594555813888,"state":"down","at":455394},{"id":489572594555813888,"state":"up","at":455414},{"id":489572594555813888,"state":"down","at":455714},{"id":489572594555813888,"state":"up","at":456054},{"id":123170274651668480,"state":"down","at":456054},{"id":123170274651668480,"state":"up","at":456134},{"id":489572594555813888,"state":"down","at":456174},{"id":123170274651668480,"state":"down","at":457294},{"id":123170274651668480,"state":"up","at":457374},{"id":123170274651668480,"state":"down","at":457614},{"id":123170274651668480,"state":"up","at":457634},{"id":123170274651668480,"state":"down","at":459594},{"id":123170274651668480,"state":"up","at":459614},{"id":123170274651668480,"state":"down","at":459634},{"id":123170274651668480,"state":"up","at":459654},{"id":123170274651668480,"state":"down","at":459894},{"id":123170274651668480,"state":"up","at":459914},{"id":123170274651668480,"state":"down","at":460014},{"id":123170274651668480,"state":"up","at":460095},{"id":123170274651668480,"state":"down","at":461814},{"id":123170274651668480,"state":"up","at":462695},{"id":123170274651668480,"state":"down","at":462754},{"id":123170274651668480,"state":"up","at":462774},{"id":123170274651668480,"state":"down","at":464234},{"id":123170274651668480,"state":"up","at":464254},{"id":123170274651668480,"state":"down","at":471554},{"id":123170274651668480,"state":"up","at":472234},{"id":123170274651668480,"state":"down","at":472674},{"id":123170274651668480,"state":"up","at":472694},{"id":123170274651668480,"state":"down","at":472774},{"id":123170274651668480,"state":"up","at":472834},{"id":123170274651668480,"state":"down","at":472916},{"id":123170274651668480,"state":"up","at":472934},{"id":123170274651668480,"state":"down","at":473034},{"id":123170274651668480,"state":"up","at":473054},{"id":123170274651668480,"state":"down","at":473294},{"id":123170274651668480,"state":"up","at":473394},{"id":123170274651668480,"state":"down","at":473794},{"id":123170274651668480,"state":"up","at":473814},{"id":123170274651668480,"state":"down","at":474574},{"id":123170274651668480,"state":"up","at":474694},{"id":123170274651668480,"state":"down","at":475994},{"id":123170274651668480,"state":"up","at":476014},{"id":123170274651668480,"state":"down","at":476194},{"id":123170274651668480,"state":"up","at":476594},{"id":123170274651668480,"state":"down","at":476614},{"id":123170274651668480,"state":"up","at":476634},{"id":123170274651668480,"state":"down","at":477454},{"id":123170274651668480,"state":"up","at":477774},{"id":123170274651668480,"state":"down","at":477814},{"id":123170274651668480,"state":"up","at":477834},{"id":123170274651668480,"state":"down","at":479614},{"id":123170274651668480,"state":"up","at":480834},{"id":123170274651668480,"state":"down","at":482514},{"id":123170274651668480,"state":"up","at":482974},{"id":123170274651668480,"state":"down","at":483074},{"id":123170274651668480,"state":"up","at":483094},{"id":489572594555813888,"state":"up","at":483434},{"id":489572594555813888,"state":"down","at":483454},{"id":489572594555813888,"state":"up","at":483474},{"id":123170274651668480,"state":"down","at":483534},{"id":489572594555813888,"state":"down","at":483794},{"id":489572594555813888,"state":"up","at":484114},{"id":489572594555813888,"state":"down","at":484995},{"id":489572594555813888,"state":"up","at":485014},{"id":123170274651668480,"state":"up","at":485034},{"id":489572594555813888,"state":"down","at":485054},{"id":123170274651668480,"state":"down","at":485537},{"id":123170274651668480,"state":"up","at":485554},{"id":123170274651668480,"state":"down","at":487055},{"id":489572594555813888,"state":"up","at":487254},{"id":123170274651668480,"state":"up","at":487254},{"id":123170274651668480,"state":"down","at":487734},{"id":123170274651668480,"state":"up","at":487755},{"id":123170274651668480,"state":"down","at":487994},{"id":489572594555813888,"state":"down","at":488697},{"id":123170274651668480,"state":"up","at":488814},{"id":123170274651668480,"state":"down","at":488934},{"id":123170274651668480,"state":"up","at":488954},{"id":123170274651668480,"state":"down","at":490254},{"id":123170274651668480,"state":"up","at":490274},{"id":123170274651668480,"state":"down","at":491777},{"id":489572594555813888,"state":"up","at":491874},{"id":489572594555813888,"state":"down","at":491974},{"id":489572594555813888,"state":"up","at":491994},{"id":489572594555813888,"state":"down","at":492274},{"id":489572594555813888,"state":"up","at":492294},{"id":123170274651668480,"state":"up","at":492694},{"id":489572594555813888,"state":"down","at":492734},{"id":123170274651668480,"state":"down","at":492734},{"id":489572594555813888,"state":"up","at":492774},{"id":123170274651668480,"state":"up","at":492774},{"id":489572594555813888,"state":"down","at":492794},{"id":123170274651668480,"state":"down","at":494764},{"id":123170274651668480,"state":"up","at":494790},{"id":123170274651668480,"state":"down","at":496334},{"id":123170274651668480,"state":"up","at":496494},{"id":489572594555813888,"state":"up","at":496774},{"id":489572594555813888,"state":"down","at":497534},{"id":123170274651668480,"state":"down","at":497714},{"id":123170274651668480,"state":"up","at":497734},{"id":123170274651668480,"state":"down","at":498814},{"id":123170274651668480,"state":"up","at":499194},{"id":123170274651668480,"state":"down","at":499754},{"id":123170274651668480,"state":"up","at":500514},{"id":123170274651668480,"state":"down","at":501356},{"id":123170274651668480,"state":"up","at":501417},{"id":123170274651668480,"state":"down","at":501434},{"id":123170274651668480,"state":"up","at":501457},{"id":489572594555813888,"state":"up","at":502094},{"id":489572594555813888,"state":"down","at":502514},{"id":123170274651668480,"state":"down","at":502694},{"id":489572594555813888,"state":"up","at":502834},{"id":123170274651668480,"state":"up","at":502854},{"id":123170274651668480,"state":"down","at":502914},{"id":123170274651668480,"state":"up","at":502934},{"id":123170274651668480,"state":"down","at":503414},{"id":123170274651668480,"state":"up","at":503494},{"id":123170274651668480,"state":"down","at":503514},{"id":123170274651668480,"state":"up","at":503534},{"id":489572594555813888,"state":"down","at":503734},{"id":123170274651668480,"state":"down","at":504114},{"id":123170274651668480,"state":"up","at":504194},{"id":123170274651668480,"state":"down","at":504794},{"id":123170274651668480,"state":"up","at":504814},{"id":489572594555813888,"state":"up","at":504994},{"id":489572594555813888,"state":"down","at":505054},{"id":489572594555813888,"state":"up","at":505074},{"id":489572594555813888,"state":"down","at":505274},{"id":489572594555813888,"state":"up","at":505294},{"id":489572594555813888,"state":"down","at":505634},{"id":489572594555813888,"state":"up","at":505954},{"id":489572594555813888,"state":"down","at":506634},{"id":123170274651668480,"state":"down","at":506834},{"id":123170274651668480,"state":"up","at":507314},{"id":332918506930831362,"state":"up","at":507394},{"id":332918506930831362,"state":"down","at":507414},{"id":332918506930831362,"state":"up","at":507454},{"id":123170274651668480,"state":"down","at":507814},{"id":123170274651668480,"state":"up","at":507834},{"id":332918506930831362,"state":"down","at":507854},{"id":332918506930831362,"state":"up","at":507874},{"id":332918506930831362,"state":"down","at":508134},{"id":332918506930831362,"state":"up","at":508174},{"id":332918506930831362,"state":"down","at":508274},{"id":332918506930831362,"state":"up","at":508294},{"id":332918506930831362,"state":"down","at":509314},{"id":123170274651668480,"state":"down","at":510017},{"id":123170274651668480,"state":"up","at":510094},{"id":123170274651668480,"state":"down","at":510514},{"id":123170274651668480,"state":"up","at":511074},{"id":123170274651668480,"state":"down","at":512334},{"id":123170274651668480,"state":"up","at":512454},{"id":123170274651668480,"state":"down","at":512774},{"id":123170274651668480,"state":"up","at":512794},{"id":123170274651668480,"state":"down","at":514634},{"id":123170274651668480,"state":"up","at":514855},{"id":489572594555813888,"state":"up","at":515339},{"id":123170274651668480,"state":"down","at":516014},{"id":123170274651668480,"state":"up","at":516034},{"id":489572594555813888,"state":"down","at":516454},{"id":123170274651668480,"state":"down","at":517154},{"id":123170274651668480,"state":"up","at":517394},{"id":123170274651668480,"state":"down","at":517854},{"id":123170274651668480,"state":"up","at":517874},{"id":123170274651668480,"state":"down","at":518115},{"id":489572594555813888,"state":"up","at":518794},{"id":489572594555813888,"state":"down","at":518814},{"id":489572594555813888,"state":"up","at":518834},{"id":123170274651668480,"state":"up","at":518834},{"id":489572594555813888,"state":"down","at":519434},{"id":489572594555813888,"state":"up","at":519454},{"id":123170274651668480,"state":"down","at":519594},{"id":123170274651668480,"state":"up","at":519614},{"id":489572594555813888,"state":"down","at":519614},{"id":489572594555813888,"state":"up","at":519634},{"id":489572594555813888,"state":"down","at":520314},{"id":489572594555813888,"state":"up","at":520334},{"id":489572594555813888,"state":"down","at":520394},{"id":489572594555813888,"state":"up","at":520414},{"id":123170274651668480,"state":"down","at":520714},{"id":489572594555813888,"state":"down","at":520734},{"id":489572594555813888,"state":"up","at":520754},{"id":123170274651668480,"state":"up","at":520774},{"id":489572594555813888,"state":"down","at":521074},{"id":489572594555813888,"state":"up","at":521094},{"id":489572594555813888,"state":"down","at":521234},{"id":489572594555813888,"state":"up","at":521574},{"id":489572594555813888,"state":"down","at":521594},{"id":123170274651668480,"state":"down","at":522861},{"id":123170274651668480,"state":"up","at":522899},{"id":123170274651668480,"state":"down","at":528914},{"id":123170274651668480,"state":"up","at":529474},{"id":123170274651668480,"state":"down","at":529694},{"id":123170274651668480,"state":"up","at":529774},{"id":123170274651668480,"state":"down","at":529934},{"id":123170274651668480,"state":"up","at":529974},{"id":123170274651668480,"state":"down","at":530034},{"id":123170274651668480,"state":"up","at":530054},{"id":123170274651668480,"state":"down","at":530754},{"id":123170274651668480,"state":"up","at":533454},{"id":123170274651668480,"state":"down","at":533514},{"id":123170274651668480,"state":"up","at":533534},{"id":123170274651668480,"state":"down","at":533554},{"id":123170274651668480,"state":"up","at":533574},{"id":422839753923362827,"state":"up","at":533814},{"id":422839753923362827,"state":"down","at":533974},{"id":422839753923362827,"state":"up","at":533994},{"id":123170274651668480,"state":"down","at":534274},{"id":123170274651668480,"state":"up","at":534314},{"id":422839753923362827,"state":"down","at":534414},{"id":123170274651668480,"state":"down","at":535234},{"id":123170274651668480,"state":"up","at":535254},{"id":123170274651668480,"state":"down","at":535494},{"id":123170274651668480,"state":"up","at":535554},{"id":123170274651668480,"state":"down","at":537794},{"id":123170274651668480,"state":"up","at":537814},{"id":123170274651668480,"state":"down","at":540337},{"id":123170274651668480,"state":"up","at":540477},{"id":123170274651668480,"state":"down","at":540514},{"id":123170274651668480,"state":"up","at":540534},{"id":123170274651668480,"state":"down","at":543436},{"id":123170274651668480,"state":"up","at":543457},{"id":422839753923362827,"state":"up","at":548874},{"id":422839753923362827,"state":"down","at":548914},{"id":422839753923362827,"state":"up","at":548934},{"id":123170274651668480,"state":"down","at":548954},{"id":123170274651668480,"state":"up","at":548974},{"id":123170274651668480,"state":"down","at":549034},{"id":123170274651668480,"state":"up","at":549054},{"id":123170274651668480,"state":"down","at":550634},{"id":489572594555813888,"state":"up","at":551474},{"id":422839753923362827,"state":"down","at":551594},{"id":489572594555813888,"state":"down","at":551854},{"id":489572594555813888,"state":"up","at":551874},{"id":489572594555813888,"state":"down","at":552094},{"id":489572594555813888,"state":"up","at":552114},{"id":489572594555813888,"state":"down","at":552414},{"id":489572594555813888,"state":"up","at":552754},{"id":489572594555813888,"state":"down","at":553717},{"id":422839753923362827,"state":"up","at":554454},{"id":123170274651668480,"state":"up","at":554494},{"id":422839753923362827,"state":"down","at":554594},{"id":422839753923362827,"state":"up","at":554620},{"id":489572594555813888,"state":"up","at":554654},{"id":123170274651668480,"state":"down","at":554714},{"id":123170274651668480,"state":"up","at":554734},{"id":422839753923362827,"state":"down","at":554734},{"id":422839753923362827,"state":"up","at":554781},{"id":123170274651668480,"state":"down","at":554862},{"id":422839753923362827,"state":"down","at":554862},{"id":489572594555813888,"state":"down","at":554862},{"id":489572594555813888,"state":"up","at":554894},{"id":123170274651668480,"state":"up","at":554894},{"id":422839753923362827,"state":"up","at":554894},{"id":489572594555813888,"state":"down","at":555074},{"id":123170274651668480,"state":"down","at":556154},{"id":123170274651668480,"state":"up","at":556394},{"id":123170274651668480,"state":"down","at":556414},{"id":123170274651668480,"state":"up","at":556434},{"id":123170274651668480,"state":"down","at":556955},{"id":422839753923362827,"state":"down","at":557414},{"id":422839753923362827,"state":"up","at":557534},{"id":123170274651668480,"state":"up","at":557614},{"id":422839753923362827,"state":"down","at":557614},{"id":422839753923362827,"state":"up","at":557634},{"id":123170274651668480,"state":"down","at":558014},{"id":422839753923362827,"state":"down","at":558014},{"id":123170274651668480,"state":"up","at":558034},{"id":422839753923362827,"state":"up","at":558034},{"id":422839753923362827,"state":"down","at":558096},{"id":123170274651668480,"state":"down","at":558494},{"id":123170274651668480,"state":"up","at":558514},{"id":489572594555813888,"state":"up","at":558554},{"id":489572594555813888,"state":"down","at":558674},{"id":489572594555813888,"state":"up","at":559014},{"id":489572594555813888,"state":"down","at":559554},{"id":123170274651668480,"state":"down","at":561416},{"id":422839753923362827,"state":"up","at":561507},{"id":123170274651668480,"state":"up","at":561714},{"id":123170274651668480,"state":"down","at":561774},{"id":123170274651668480,"state":"up","at":561834},{"id":123170274651668480,"state":"down","at":561994},{"id":123170274651668480,"state":"up","at":562174},{"id":422839753923362827,"state":"down","at":562774},{"id":422839753923362827,"state":"up","at":562794},{"id":422839753923362827,"state":"down","at":563214},{"id":335193454034419715,"state":"up","at":563434},{"id":335193454034419715,"state":"down","at":563494},{"id":335193454034419715,"state":"up","at":563514},{"id":335193454034419715,"state":"down","at":563954},{"id":123170274651668480,"state":"down","at":565014},{"id":123170274651668480,"state":"up","at":565314}]';
  }
  function AudioRecordingRoute$onRender$lambda(it) {
    return it.at;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda(closure$uniqueId) {
    return function ($receiver) {
      $receiver.width = '128';
      var $receiver_0 = $receiver.attributes;
      var key = 'data-talking-id';
      var value = closure$uniqueId.toString();
      $receiver_0.put_xwzc9p$(key, value);
      set_style($receiver, 'border: 4px solid transparent; margin: 8px; border-radius: 100%;');
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda(closure$correctData, closure$cachedUserData, this$) {
    return function ($receiver) {
      var tmp$;
      set_id($receiver, 'audio-preview');
      set_style($receiver, 'text-align: center;');
      var $receiver_0 = closure$correctData;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_0;
      tmp$_0 = $receiver_0.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination.add_11rb$(item.id);
      }
      tmp$ = distinct(destination).iterator();
      loop_label: while (tmp$.hasNext()) {
        var uniqueId = tmp$.next();
        var $receiver_1 = closure$cachedUserData;
        var first$result;
        first$break: do {
          var tmp$_1;
          tmp$_1 = $receiver_1.iterator();
          while (tmp$_1.hasNext()) {
            var element = tmp$_1.next();
            if (equals(element.id, uniqueId)) {
              first$result = element;
              break first$break;
            }
          }
          throw new NoSuchElementException_init('Collection contains no element matching the predicate.');
        }
         while (false);
        var userData = first$result;
        img_0(this$, void 0, userData.avatarUrl, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda(uniqueId));
      }
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda_0($receiver) {
    $receiver.src = 'https://cdn.discordapp.com/attachments/393332226881880074/674257470839062550/297732013006389252-1580777446579.ogg';
    return Unit;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda_1(closure$correctData) {
    return function (it) {
      var tmp$;
      var tmp$_0;
      var currentTime = ((tmp$_0 = document.querySelector('#audio')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).currentTime;
      var tmp$_1;
      ((tmp$_1 = document.querySelector('#point')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()).style.left = (currentTime * 10).toString() + 'px';
      var $receiver = closure$correctData;
      var destination = ArrayList_init();
      var tmp$_2;
      tmp$_2 = $receiver.iterator();
      while (tmp$_2.hasNext()) {
        var element = tmp$_2.next();
        if (contains_1(element.at.rangeTo(element.at.add(element.length)), numberToInt(currentTime * 1000)))
          destination.add_11rb$(element);
      }
      var usersTalkingAtTheMoment = destination;
      var tmp$_3;
      tmp$_3 = asList(document.querySelectorAll('[data-talking-id]')).iterator();
      while (tmp$_3.hasNext()) {
        var element_0 = tmp$_3.next();
        var tmp$_4;
        Kotlin.isType(tmp$_4 = element_0, HTMLImageElement) ? tmp$_4 : throwCCE();
        element_0.style.borderColor = 'transparent';
      }
      tmp$ = usersTalkingAtTheMoment.iterator();
      while (tmp$.hasNext()) {
        var user = tmp$.next();
        var tmp$_5;
        ((tmp$_5 = document.querySelector("[data-talking-id='" + user.id.toString() + "']")) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE()).style.borderColor = '#41aa7b';
      }
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda_0(this$, closure$correctData) {
    return function ($receiver) {
      set_id($receiver, 'audio');
      $receiver.controls = true;
      var $receiver_0 = $receiver.attributes;
      var value = 'metadata';
      $receiver_0.put_xwzc9p$('preload', value);
      source(this$, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda_0);
      set_onTimeUpdateFunction($receiver, AudioRecordingRoute$onRender$lambda$lambda$lambda_1(closure$correctData));
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_id($receiver, 'point');
    set_style($receiver, 'width: 1px; background-color: #f10202; height: 200px; top: 0px; position: absolute;     z-index: 999;');
    return Unit;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    set_id($receiver, 'scrobbler-area');
    return Unit;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'position: relative;');
    div($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    div($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda_0(this$) {
    return function ($receiver) {
      div(this$, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda(this$, this$_0) {
    return function ($receiver) {
      th_0(this$, void 0, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda);
      th_0(this$, void 0, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda_0(this$_0));
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    set_style($receiver, 'height: 24px; border-radius: 100%;');
    return Unit;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$cachedUserData, closure$uniqueId, this$) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; color: white; align-items: center;');
      var $receiver_0 = closure$cachedUserData;
      var first$result;
      first$break: do {
        var tmp$;
        tmp$ = $receiver_0.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          if (equals(element.id, closure$uniqueId)) {
            first$result = element;
            break first$break;
          }
        }
        throw new NoSuchElementException_init('Collection contains no element matching the predicate.');
      }
       while (false);
      var userData = first$result;
      img_0(this$, void 0, userData.avatarUrl, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
      $receiver.unaryPlus_pdl1vz$(userData.name);
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda_1(closure$cachedUserData, closure$uniqueId, this$) {
    return function ($receiver) {
      div($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$cachedUserData, closure$uniqueId, this$));
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1(it) {
    var tmp$;
    var target = Kotlin.isType(tmp$ = it.target, HTMLElement) ? tmp$ : throwCCE();
    var clientX = it.clientX;
    var clientY = it.clientY;
    var rect = target.getBoundingClientRect();
    var x = clientX - rect.left;
    var y = clientY - rect.top;
    println('x: ' + x.toString() + '; y: ' + y.toString());
    return Unit;
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$silentAudioDataLength) {
    return function ($receiver) {
      set_style($receiver, 'background-color: transparent; height: 100%; display: inline-block; width: ' + closure$silentAudioDataLength.toNumber() / 100 + 'px;');
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      set_style($receiver, 'background-color: #' + AudioRecordingRoute$Companion_getInstance().intToRGB_s8cxhz$(closure$it.id) + '; height: 100%; display: inline-block; width: ' + closure$it.length.toNumber() / 100 + 'px;');
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$userData, closure$previousData) {
    return function ($receiver) {
      set_style($receiver, 'height: 100%;');
      var $receiver_0 = closure$userData;
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var closure$previousData_0 = closure$previousData;
        var tmp$_0;
        var currentPreviousData = closure$previousData_0.v;
        if (currentPreviousData == null)
          tmp$_0 = element.at;
        else {
          tmp$_0 = element.at.subtract(currentPreviousData.at.add(currentPreviousData.length));
        }
        var silentAudioDataLength = tmp$_0;
        div($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(silentAudioDataLength));
        closure$previousData_0.v = element;
        div($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(element));
      }
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda_2(closure$correctData, closure$uniqueId) {
    return function ($receiver) {
      set_onDragFunction($receiver, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1);
      set_style($receiver, 'position: relative; border-bottom: 1px solid #00000024;');
      var $receiver_0 = closure$correctData;
      var destination = ArrayList_init();
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        if (equals(element.id, closure$uniqueId))
          destination.add_11rb$(element);
      }
      var userData = sortedWith(destination, new Comparator$ObjectLiteral(compareBy$lambda(getPropertyCallableRef('at', 1, function ($receiver) {
        return $receiver.at;
      }))));
      var previousData = {v: null};
      div($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2(userData, previousData));
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda_0(closure$cachedUserData, closure$uniqueId, this$, closure$correctData) {
    return function ($receiver) {
      td_0(this$, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda_1(closure$cachedUserData, closure$uniqueId, this$));
      td_0(this$, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda$lambda_2(closure$correctData, closure$uniqueId));
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda$lambda_2(this$, closure$correctData, closure$cachedUserData) {
    return function ($receiver) {
      var tmp$;
      set_style($receiver, 'height: 1px; width: 100%; white-space: nowrap;');
      tr_0(this$, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda(this$, $receiver));
      var $receiver_0 = closure$correctData;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_0;
      tmp$_0 = $receiver_0.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination.add_11rb$(item.id);
      }
      tmp$ = distinct(destination).iterator();
      while (tmp$.hasNext()) {
        var uniqueId = tmp$.next();
        tr_0(this$, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda$lambda_0(closure$cachedUserData, uniqueId, this$, closure$correctData));
      }
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda$lambda_1(this$, closure$correctData, closure$cachedUserData) {
    return function ($receiver) {
      set_id($receiver, 'scrobbler-wrapper');
      set_style($receiver, 'overflow: auto;\n' + '    background-color: #2f3136;\n' + '    border-radius: 16px;\n' + '    width: 95vw;\n' + '    margin: auto;\n' + '    padding: 8px;');
      table_0(this$, void 0, AudioRecordingRoute$onRender$lambda$lambda$lambda_2(this$, closure$correctData, closure$cachedUserData));
      return Unit;
    };
  }
  function AudioRecordingRoute$onRender$lambda_0(closure$correctData, closure$cachedUserData) {
    return function ($receiver) {
      div_0($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda(closure$correctData, closure$cachedUserData, $receiver));
      audio($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda_0($receiver, closure$correctData));
      div_0($receiver, void 0, AudioRecordingRoute$onRender$lambda$lambda_1($receiver, closure$correctData, closure$cachedUserData));
      return Unit;
    };
  }
  AudioRecordingRoute.prototype.onRender_hjvrm5$ = function (call) {
    var tmp$;
    BaseRoute.prototype.onRender_hjvrm5$.call(this, call);
    println('f1');
    var $receiver = JSON_0.Companion.nonstrict;
    var objects = this.TEST_DATA_0;
    var trackedData = sortedWith($receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(AudioRecordingRoute$Companion$TrackedAudioData))), objects), new Comparator$ObjectLiteral(compareBy$lambda(AudioRecordingRoute$onRender$lambda)));
    println('f2');
    var startOffset = first(trackedData).at;
    var cachedUserData = mutableListOf([new AudioRecordingRoute$Companion$TestUserData(L123170274651668480, 'MrPowerGamerBR', 'https://cdn.discordapp.com/avatars/123170274651668480/a_f5edb8f69836651dddefd0a722816f08.gif?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L422839753923362827, 'Coffee', 'https://cdn.discordapp.com/avatars/422839753923362827/54ef08b1a4155e18b069d70154c768d0.png?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L347064573318135811, '!!\u0E56\u06E3\u06DCF\xFCF\u016B Fuuf \u30C3', 'https://cdn.discordapp.com/avatars/347064573318135811/280aa125f9be40a41ffed62d0ae93340.png?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L310877707175198720, 'JGS', 'https://cdn.discordapp.com/avatars/310877707175198720/e07401b216a846bbac933f4b2e6db2a5.png?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L168759625875718145, 'nitro.', 'https://cdn.discordapp.com/avatars/168759625875718145/2af145d8e49fde48bb27ebe1d051ebd7.png?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L416056545051279370, 'Robodoki', 'https://cdn.discordapp.com/avatars/416056545051279370/3c5714decd88b4f11bd3f801cc41495e.png?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L489572594555813888, 'Red Br', 'https://cdn.discordapp.com/avatars/489572594555813888/a_07949f6034085b4d19da47ec96b91582.gif?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L332918506930831362, 'Rannii', 'https://cdn.discordapp.com/avatars/332918506930831362/a_9c1d5acece8e6b87c69717c71d3cfa83.gif?size=2048'), new AudioRecordingRoute$Companion$TestUserData(L335193454034419715, '! N1  \u1D43\u1D4F\u1D57', 'https://cdn.discordapp.com/avatars/335193454034419715/c0026cc6b2b2fc5e4d6908239da530b6.png?size=2048')]);
    var correctData = ArrayList_init();
    var up = ArrayList_init();
    tmp$ = trackedData.iterator();
    loop_label: while (tmp$.hasNext()) {
      var data = tmp$.next();
      if (equals(data.state, 'up')) {
        up.add_11rb$(data);
      }
       else {
        var firstOrNull$result;
        firstOrNull$break: do {
          var tmp$_0;
          tmp$_0 = up.iterator();
          while (tmp$_0.hasNext()) {
            var element = tmp$_0.next();
            if (equals(data.id, element.id)) {
              firstOrNull$result = element;
              break firstOrNull$break;
            }
          }
          firstOrNull$result = null;
        }
         while (false);
        var storedData = firstOrNull$result;
        if (storedData != null) {
          up.remove_11rb$(storedData);
          correctData.add_11rb$(new AudioRecordingRoute$Companion$TrackedAudioDataWithLengths(storedData.id, storedData.at.subtract(startOffset), data.at.subtract(storedData.at)));
        }
      }
    }
    this.debug_yhszz7$(['Generated ' + correctData.size + ' audio tracks']);
    var tmp$_1;
    var audioRecorderWrapper = (tmp$_1 = document.querySelector('#audio-recorder-wrapper')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    append(audioRecorderWrapper, AudioRecordingRoute$onRender$lambda_0(correctData, cachedUserData));
  };
  function AudioRecordingRoute$Companion() {
    AudioRecordingRoute$Companion_instance = this;
  }
  function AudioRecordingRoute$Companion$TrackedAudioData(id, state, at) {
    AudioRecordingRoute$Companion$TrackedAudioData$Companion_getInstance();
    this.id = id;
    this.state = state;
    this.at = at;
  }
  function AudioRecordingRoute$Companion$TrackedAudioData$Companion() {
    AudioRecordingRoute$Companion$TrackedAudioData$Companion_instance = this;
  }
  AudioRecordingRoute$Companion$TrackedAudioData$Companion.prototype.serializer = function () {
    return AudioRecordingRoute$Companion$TrackedAudioData$$serializer_getInstance();
  };
  AudioRecordingRoute$Companion$TrackedAudioData$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AudioRecordingRoute$Companion$TrackedAudioData$Companion_instance = null;
  function AudioRecordingRoute$Companion$TrackedAudioData$Companion_getInstance() {
    if (AudioRecordingRoute$Companion$TrackedAudioData$Companion_instance === null) {
      new AudioRecordingRoute$Companion$TrackedAudioData$Companion();
    }
    return AudioRecordingRoute$Companion$TrackedAudioData$Companion_instance;
  }
  function AudioRecordingRoute$Companion$TrackedAudioData$$serializer() {
    this.descriptor_p61y0s$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.routes.AudioRecordingRoute.Companion.TrackedAudioData', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('state', false);
    this.descriptor.addElement_ivxn3r$('at', false);
    AudioRecordingRoute$Companion$TrackedAudioData$$serializer_instance = this;
  }
  Object.defineProperty(AudioRecordingRoute$Companion$TrackedAudioData$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_p61y0s$_0;
    }
  });
  AudioRecordingRoute$Companion$TrackedAudioData$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeLongElement_a3zgoj$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.state);
    output.encodeLongElement_a3zgoj$(this.descriptor, 2, obj.at);
    output.endStructure_qatsm0$(this.descriptor);
  };
  AudioRecordingRoute$Companion$TrackedAudioData$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeLongElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeLongElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return AudioRecordingRoute$Companion$AudioRecordingRoute$Companion$TrackedAudioData_init(bitMask0, local0, local1, local2, null);
  };
  AudioRecordingRoute$Companion$TrackedAudioData$$serializer.prototype.childSerializers = function () {
    return [internal.LongSerializer, internal.StringSerializer, internal.LongSerializer];
  };
  AudioRecordingRoute$Companion$TrackedAudioData$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var AudioRecordingRoute$Companion$TrackedAudioData$$serializer_instance = null;
  function AudioRecordingRoute$Companion$TrackedAudioData$$serializer_getInstance() {
    if (AudioRecordingRoute$Companion$TrackedAudioData$$serializer_instance === null) {
      new AudioRecordingRoute$Companion$TrackedAudioData$$serializer();
    }
    return AudioRecordingRoute$Companion$TrackedAudioData$$serializer_instance;
  }
  function AudioRecordingRoute$Companion$AudioRecordingRoute$Companion$TrackedAudioData_init(seen1, id, state, at, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(AudioRecordingRoute$Companion$TrackedAudioData.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('state');
    else
      $this.state = state;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('at');
    else
      $this.at = at;
    return $this;
  }
  AudioRecordingRoute$Companion$TrackedAudioData.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TrackedAudioData',
    interfaces: []
  };
  function AudioRecordingRoute$Companion$TrackedAudioDataWithLengths(id, at, length) {
    this.id = id;
    this.at = at;
    this.length = length;
  }
  AudioRecordingRoute$Companion$TrackedAudioDataWithLengths.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TrackedAudioDataWithLengths',
    interfaces: []
  };
  function AudioRecordingRoute$Companion$TestUserData(id, name, avatarUrl) {
    this.id = id;
    this.name = name;
    this.avatarUrl = avatarUrl;
  }
  AudioRecordingRoute$Companion$TestUserData.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TestUserData',
    interfaces: []
  };
  AudioRecordingRoute$Companion.prototype.intToRGB_s8cxhz$ = function (id) {
    var c = toString_0(id.and(L16777215), 16).toUpperCase();
    var endIndex = 6 - c.length | 0;
    return '00000'.substring(0, endIndex) + c;
  };
  AudioRecordingRoute$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var AudioRecordingRoute$Companion_instance = null;
  function AudioRecordingRoute$Companion_getInstance() {
    if (AudioRecordingRoute$Companion_instance === null) {
      new AudioRecordingRoute$Companion();
    }
    return AudioRecordingRoute$Companion_instance;
  }
  AudioRecordingRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AudioRecordingRoute',
    interfaces: [BaseRoute]
  };
  function BaseRoute(path) {
    this.path = path;
    this.keepLoadingScreen_4bjxho$_0 = false;
  }
  Object.defineProperty(BaseRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return this.keepLoadingScreen_4bjxho$_0;
    }
  });
  BaseRoute.prototype.matches_61zpoe$ = function (input) {
    var tmp$;
    var sourceSplit = split(removeSuffix(this.path, '/'), ['/']);
    var inputSplit = split(removeSuffix(input, '/'), ['/']);
    var inputSplitLength = 0;
    var a = sourceSplit.size;
    var b = inputSplit.size;
    tmp$ = Math_0.max(a, b);
    for (var index = 0; index < tmp$; index++) {
      var sInput = getOrNull(sourceSplit, index);
      var iInput = getOrNull(inputSplit, index);
      if (sInput != null && startsWith(sInput, '{') && endsWith(sInput, '}')) {
        if (iInput == null && endsWith(sInput, '?}')) {
          inputSplitLength = inputSplitLength + 1 | 0;
          continue;
        }
        inputSplitLength = inputSplitLength + 1 | 0;
        continue;
      }
      if (iInput == null)
        return false;
      if (!equals(iInput, sInput))
        return false;
      inputSplitLength = inputSplitLength + 1 | 0;
    }
    return true;
  };
  BaseRoute.prototype.getPathParameters_61zpoe$ = function (input) {
    var tmp$;
    var parameters = LinkedHashMap_init();
    var sourceSplit = split(removeSuffix(this.path, '/'), ['/']);
    var inputSplit = split(removeSuffix(input, '/'), ['/']);
    var inputSplitLength = 0;
    var a = sourceSplit.size;
    var b = inputSplit.size;
    tmp$ = Math_0.max(a, b);
    for (var index = 0; index < tmp$; index++) {
      var sInput = getOrNull(sourceSplit, index);
      var iInput = getOrNull(inputSplit, index);
      if (sInput != null && startsWith(sInput, '{') && endsWith(sInput, '}')) {
        if (iInput == null && endsWith(sInput, '?}')) {
          inputSplitLength = inputSplitLength + 1 | 0;
          continue;
        }
        var key = removeSuffix(removeSuffix(removePrefix(sInput, '{'), '?}'), '}');
        var value = iInput != null ? iInput : '?';
        parameters.put_xwzc9p$(key, value);
        inputSplitLength = inputSplitLength + 1 | 0;
        continue;
      }
      if (iInput == null)
        return parameters;
      if (!equals(iInput, sInput))
        return parameters;
      inputSplitLength = inputSplitLength + 1 | 0;
    }
    return parameters;
  };
  BaseRoute.prototype.onRender_hjvrm5$ = function (call) {
    this.hideDummyNavbarHeight_hjvrm5$(call);
    this.switchContent_hjvrm5$(call);
  };
  BaseRoute.prototype.onUnload = function () {
  };
  BaseRoute.prototype.hideDummyNavbarHeight_hjvrm5$ = function (call) {
    var tmp$;
    var tmp$_0;
    var dummyNavigationBar = (tmp$_0 = document.querySelector('#dummy-navbar')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    (tmp$ = dummyNavigationBar != null ? dummyNavigationBar.style : null) != null ? (tmp$.height = '0px') : null;
  };
  BaseRoute.prototype.switchContent_hjvrm5$ = function (call) {
    var tmp$;
    if (call.content != null) {
      tmp$ = document.body;
      if (tmp$ == null) {
        return;
      }
      var body = tmp$;
      var tmp$_0;
      ((tmp$_0 = document.querySelector('#content')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).remove();
      var scriptList = call.content.querySelectorAll('script');
      var toBeReinserted = ArrayList_init();
      var times = scriptList.length;
      for (var index = 0; index < times; index++) {
        var tmp$_1;
        var scriptTag = Kotlin.isType(tmp$_1 = ensureNotNull(scriptList[index]), HTMLScriptElement) ? tmp$_1 : throwCCE();
        if (scriptTag.getAttribute('src') == null) {
          toBeReinserted.add_11rb$(scriptTag.cloneNode(true));
          clear(scriptTag);
        }
      }
      var tmp$_2;
      tmp$_2 = SpicyMorenitta$Companion_getInstance().INSTANCE.pageSpecificTasks.iterator();
      while (tmp$_2.hasNext()) {
        var element = tmp$_2.next();
        element.cancel_m4sck1$();
      }
      SpicyMorenitta$Companion_getInstance().INSTANCE.pageSpecificTasks.clear();
      var tmp$_3;
      var pageFooter = (tmp$_3 = body.querySelector('footer')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE();
      if (pageFooter != null) {
        body.insertBefore(call.content, pageFooter);
      }
       else {
        body.appendChild(call.content);
      }
      var childNode = body.childNodes[0];
      if (childNode != null) {
        var tmp$_4;
        tmp$_4 = toBeReinserted.iterator();
        while (tmp$_4.hasNext()) {
          var element_0 = tmp$_4.next();
          var tmp$_5;
          var inline = (Kotlin.isType(tmp$_5 = element_0, HTMLScriptElement) ? tmp$_5 : throwCCE()).innerHTML;
          this.debug_yhszz7$(['(Re-)Inlining script ' + inline]);
          var newScript = document.createElement('script');
          var inlineScript = document.createTextNode(inline);
          newScript.appendChild(inlineScript);
          body.appendChild(newScript);
        }
      }
      GoogleAdSense_getInstance().renderAds();
      SpicyMorenitta$Companion_getInstance().INSTANCE.setUpLinkPreloader();
      SpicyMorenitta$Companion_getInstance().INSTANCE.setUpLazyLoad();
      window.scrollTo(0.0, 0.0);
    }
  };
  function BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda$lambda$lambda(it) {
    var tmp$;
    var leftSidebar = (tmp$ = document.querySelector('#left-sidebar')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    if (hasClass(leftSidebar, 'expanded')) {
      removeClass(leftSidebar, ['expanded']);
    }
     else {
      addClass(leftSidebar, ['expanded']);
    }
    return Unit;
  }
  function BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_onClickFunction($receiver, BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda(this$) {
    return function ($receiver) {
      i_0(this$, 'subnavbar-hamburger-button fas fa-bars', BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda_0(closure$leftSidebar) {
    return function ($receiver) {
      closure$leftSidebar($receiver);
      return Unit;
    };
  }
  function BaseRoute$twoColumnLayout$lambda$lambda$lambda(this$, closure$leftSidebar) {
    return function ($receiver) {
      set_id($receiver, 'left-sidebar');
      div($receiver, 'subnavbar-hamburger', BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda(this$));
      div($receiver, 'contents', BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda_0(closure$leftSidebar));
      return Unit;
    };
  }
  function BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda_1(closure$rightSidebar) {
    return function ($receiver) {
      closure$rightSidebar($receiver);
      return Unit;
    };
  }
  function BaseRoute$twoColumnLayout$lambda$lambda$lambda_0(closure$rightSidebar) {
    return function ($receiver) {
      set_id($receiver, 'right-sidebar');
      var $receiver_0 = $receiver.attributes;
      var key = 'create-scroll-lazy-load-here';
      $receiver_0.put_xwzc9p$(key, 'true');
      div($receiver, 'contents', BaseRoute$twoColumnLayout$lambda$lambda$lambda$lambda_1(closure$rightSidebar));
      return Unit;
    };
  }
  function BaseRoute$twoColumnLayout$lambda$lambda(this$, closure$leftSidebar, closure$rightSidebar) {
    return function ($receiver) {
      set_id($receiver, 'sidebar-wrapper');
      div($receiver, void 0, BaseRoute$twoColumnLayout$lambda$lambda$lambda(this$, closure$leftSidebar));
      div($receiver, void 0, BaseRoute$twoColumnLayout$lambda$lambda$lambda_0(closure$rightSidebar));
      return Unit;
    };
  }
  function BaseRoute$twoColumnLayout$lambda(closure$leftSidebar, closure$rightSidebar) {
    return function ($receiver) {
      div_0($receiver, void 0, BaseRoute$twoColumnLayout$lambda$lambda($receiver, closure$leftSidebar, closure$rightSidebar));
      return Unit;
    };
  }
  BaseRoute.prototype.twoColumnLayout_cbu7sc$ = function (leftSidebar, rightSidebar) {
    var tmp$;
    var content = (tmp$ = document.querySelector('#content')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    append(content, BaseRoute$twoColumnLayout$lambda(leftSidebar, rightSidebar));
  };
  BaseRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BaseRoute',
    interfaces: [Logging]
  };
  function get$lambda($receiver) {
    return Unit;
  }
  function CommandsRoute(m) {
    CommandsRoute$Companion_getInstance();
    UpdateNavbarSizePostRender.call(this, '/commands');
    this.m = m;
  }
  Object.defineProperty(CommandsRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function CommandsRoute$LorittaJS() {
    LorittaBot.call(this);
  }
  Object.defineProperty(CommandsRoute$LorittaJS.prototype, 'supportedFeatures', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(CommandsRoute$LorittaJS.prototype, 'commandMap', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  CommandsRoute$LorittaJS.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LorittaJS',
    interfaces: [LorittaBot]
  };
  function CommandsRoute$UserImpl() {
  }
  Object.defineProperty(CommandsRoute$UserImpl.prototype, 'name', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(CommandsRoute$UserImpl.prototype, 'avatar', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(CommandsRoute$UserImpl.prototype, 'avatarUrl', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(CommandsRoute$UserImpl.prototype, 'isBot', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(CommandsRoute$UserImpl.prototype, 'asMention', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  Object.defineProperty(CommandsRoute$UserImpl.prototype, 'id', {
    get: function () {
      throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
    }
  });
  CommandsRoute$UserImpl.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UserImpl',
    interfaces: [User]
  };
  function Coroutine$CommandsRoute$onRender$lambda$lambda($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$CommandsRoute$onRender$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$CommandsRoute$onRender$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$CommandsRoute$onRender$lambda$lambda.prototype.constructor = Coroutine$CommandsRoute$onRender$lambda$lambda;
  Coroutine$CommandsRoute$onRender$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function CommandsRoute$onRender$lambda$lambda($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$CommandsRoute$onRender$lambda$lambda($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function CommandsRoute$onRender$lambda($receiver) {
    $receiver.executes_jsokuk$(CommandsRoute$onRender$lambda$lambda);
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda_0($receiver) {
    url($receiver, window.location.origin + '/api/v1/loritta/commands/' + get_locale_0().id);
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda_1($receiver) {
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'display:block');
    var $receiver_0 = $receiver.attributes;
    var key = 'data-ad-client';
    var value = 'ca-pub-9989170954243288';
    $receiver_0.put_xwzc9p$(key, value);
    var $receiver_1 = $receiver.attributes;
    var key_0 = 'data-ad-slot';
    var value_0 = '4611100335';
    $receiver_1.put_xwzc9p$(key_0, value_0);
    var $receiver_2 = $receiver.attributes;
    var key_1 = 'data-ad-format';
    $receiver_2.put_xwzc9p$(key_1, 'auto');
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('(adsbygoogle = window.adsbygoogle || []).push({});');
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'text-align: center;');
    ins($receiver, 'adsbygoogle', CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda);
    script($receiver, void 0, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 100%; border-radius: 8px;');
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_1(closure$category) {
    return function ($receiver) {
      var tmp$;
      switch (closure$category.name) {
        case 'SOCIAL':
          tmp$ = 'https://loritta.website/assets/img/social.png';
          break;
        case 'POKEMON':
          tmp$ = 'https://loritta.website/assets/img/pokemon.png';
          break;
        case 'MINECRAFT':
          tmp$ = 'https://loritta.website/assets/img/loritta_pudim.png';
          break;
        case 'FUN':
          tmp$ = 'https://loritta.website/assets/img/vieirinha.png';
          break;
        case 'UTILS':
          tmp$ = 'https://loritta.website/assets/img/utils.png';
          break;
        case 'MUSIC':
          tmp$ = 'https://loritta.website/assets/img/loritta_headset.png';
          break;
        case 'ANIME':
          tmp$ = 'https://loritta.website/assets/img/loritta_anime.png';
          break;
        case 'ECONOMY':
          tmp$ = 'https://loritta.website/assets/img/loritta_money_discord.png';
          break;
        case 'FORTNITE':
          tmp$ = 'https://loritta.website/assets/img/loritta_fortnite_icon.png';
          break;
        default:tmp$ = 'https://loritta.website/assets/img/loritta_gabizinha_v1.png';
          break;
      }
      var imageSource = tmp$;
      img($receiver, void 0, imageSource, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    set_style($receiver, 'text-align: center;');
    h1($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    div($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0);
    p($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1);
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda_0(closure$category) {
    return function ($receiver) {
      div($receiver, 'media-figure', CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_1(closure$category));
      div($receiver, 'media-body', CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_2);
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Comando');
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Descri\xE7\xE3o');
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Aliases');
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    th($receiver, void 0, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    th($receiver, void 0, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
    th($receiver, void 0, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    tr($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$command) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$command.usage);
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$command) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$command.label);
      if (closure$command.usage != null) {
        $receiver.unaryPlus_pdl1vz$(' ');
        code($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$command));
      }
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$command) {
    return function ($receiver) {
      var tmp$;
      $receiver.unaryPlus_pdl1vz$((tmp$ = closure$command.description) != null ? tmp$ : '-');
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$command) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(joinToString(closure$command.aliases, ', '));
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$command) {
    return function ($receiver) {
      td($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$command));
      td($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$command));
      td($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$command));
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$commands) {
    return function ($receiver) {
      var tmp$;
      set_style($receiver, 'width: 100%;');
      thead($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
      tmp$ = closure$commands.iterator();
      while (tmp$.hasNext()) {
        var command = tmp$.next();
        tr_1($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(command));
      }
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_3(closure$commands) {
    return function ($receiver) {
      hr($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2);
      table($receiver, 'fancy-table', CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$commands));
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda$lambda_1(closure$commands) {
    return function ($receiver) {
      div($receiver, 'media-body', CommandsRoute$onRender$lambda$lambda$lambda$lambda$lambda_3(closure$commands));
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda$lambda(closure$category, closure$index, closure$commands) {
    return function ($receiver) {
      set_id($receiver, 'category-' + replace(closure$category.name.toLowerCase(), '_', '-'));
      if (closure$index.v % 2 === 0) {
        div($receiver, void 0, CommandsRoute$onRender$lambda$lambda$lambda$lambda);
      }
      div($receiver, 'media', CommandsRoute$onRender$lambda$lambda$lambda$lambda_0(closure$category));
      div($receiver, 'media', CommandsRoute$onRender$lambda$lambda$lambda$lambda_1(closure$commands));
      return Unit;
    };
  }
  function CommandsRoute$onRender$lambda$lambda_2(closure$index, closure$category, closure$commands) {
    return function ($receiver) {
      var classes = closure$index.v % 2 === 0 ? 'even-wrapper' : 'odd-wrapper';
      if (closure$index.v !== 0)
        classes += ' wobbly-bg';
      div_0($receiver, classes, CommandsRoute$onRender$lambda$lambda$lambda(closure$category, closure$index, closure$commands));
      return Unit;
    };
  }
  function Coroutine$CommandsRoute$onRender$lambda(closure$call_0, this$CommandsRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$closure$call = closure$call_0;
    this.local$this$CommandsRoute = this$CommandsRoute_0;
    this.local$response = void 0;
  }
  Coroutine$CommandsRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$CommandsRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$CommandsRoute$onRender$lambda.prototype.constructor = Coroutine$CommandsRoute$onRender$lambda;
  Coroutine$CommandsRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var $receiver_0 = http;
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            CommandsRoute$onRender$lambda$lambda_0($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            var list = $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(CommandsRoute$Companion$Command))), result);
            this.local$this$CommandsRoute.fixDummyNavbarHeight_hjvrm5$(this.local$closure$call);
            var tmp$_0;
            var entriesDiv = (tmp$_0 = document.querySelector('#commands')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            var index = {v: 0};
            append(entriesDiv, CommandsRoute$onRender$lambda$lambda_1);
            var $receiver_2 = CommandCategory$values();
            var destination = ArrayList_init();
            var tmp$_1;
            for (tmp$_1 = 0; tmp$_1 !== $receiver_2.length; ++tmp$_1) {
              var element = $receiver_2[tmp$_1];
              if (element !== CommandCategory.MAGIC)
                destination.add_11rb$(element);
            }

            tmp$ = destination.iterator();
            while (tmp$.hasNext()) {
              var category = tmp$.next();
              var destination_0 = ArrayList_init();
              var tmp$_2;
              tmp$_2 = list.iterator();
              while (tmp$_2.hasNext()) {
                var element_0 = tmp$_2.next();
                if (element_0.category === category)
                  destination_0.add_11rb$(element_0);
              }
              var commands = destination_0;
              if (!commands.isEmpty()) {
                append(entriesDiv, CommandsRoute$onRender$lambda$lambda_2(index, category, commands));
                index.v = index.v + 1 | 0;
              }
            }

            return this.local$this$CommandsRoute.m.hideLoadingScreen(), Unit;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function CommandsRoute$onRender$lambda_0(closure$call_0, this$CommandsRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$CommandsRoute$onRender$lambda(closure$call_0, this$CommandsRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  CommandsRoute.prototype.onRender_hjvrm5$ = function (call) {
    UpdateNavbarSizePostRender.prototype.onRender_hjvrm5$.call(this, call);
    var queryStrings = ensureNotNull(document.location).search;
    var searchParams = new URLSearchParams(queryStrings);
    var command_0 = command(new CommandsRoute$LorittaJS(), 'TestCommand', listOf('test'), CommandsRoute$onRender$lambda);
    console.log(command_0);
    this.m.launch_3q5nlj$(CommandsRoute$onRender$lambda_0(call, this));
  };
  CommandsRoute.prototype.createCommandEntry_zfbynf$ = function ($receiver, entry) {
  };
  function CommandsRoute$Companion() {
    CommandsRoute$Companion_instance = this;
  }
  function CommandsRoute$Companion$Command(name, label, aliases, category, description, usage) {
    CommandsRoute$Companion$Command$Companion_getInstance();
    if (description === void 0)
      description = null;
    if (usage === void 0)
      usage = null;
    this.name = name;
    this.label = label;
    this.aliases = aliases;
    this.category = category;
    this.description = description;
    this.usage = usage;
  }
  function CommandsRoute$Companion$Command$Companion() {
    CommandsRoute$Companion$Command$Companion_instance = this;
  }
  CommandsRoute$Companion$Command$Companion.prototype.serializer = function () {
    return CommandsRoute$Companion$Command$$serializer_getInstance();
  };
  CommandsRoute$Companion$Command$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var CommandsRoute$Companion$Command$Companion_instance = null;
  function CommandsRoute$Companion$Command$Companion_getInstance() {
    if (CommandsRoute$Companion$Command$Companion_instance === null) {
      new CommandsRoute$Companion$Command$Companion();
    }
    return CommandsRoute$Companion$Command$Companion_instance;
  }
  function CommandsRoute$Companion$Command$$serializer() {
    this.descriptor_kwbv52$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.routes.CommandsRoute.Companion.Command', this);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('label', false);
    this.descriptor.addElement_ivxn3r$('aliases', false);
    this.descriptor.addElement_ivxn3r$('category', false);
    this.descriptor.addElement_ivxn3r$('description', true);
    this.descriptor.addElement_ivxn3r$('usage', true);
    CommandsRoute$Companion$Command$$serializer_instance = this;
  }
  Object.defineProperty(CommandsRoute$Companion$Command$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_kwbv52$_0;
    }
  });
  CommandsRoute$Companion$Command$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.name);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.label);
    output.encodeSerializableElement_blecud$(this.descriptor, 2, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), obj.aliases);
    output.encodeSerializableElement_blecud$(this.descriptor, 3, new EnumSerializer(getKClass(CommandCategory), 'net.perfectdreams.loritta.api.commands.CommandCategory'), obj.category);
    if (!equals(obj.description, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 4))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 4, internal.StringSerializer, obj.description);
    if (!equals(obj.usage, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 5))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 5, internal.StringSerializer, obj.usage);
    output.endStructure_qatsm0$(this.descriptor);
  };
  CommandsRoute$Companion$Command$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4
    , local5;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 2, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 2, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = (bitMask0 & 8) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 3, new EnumSerializer(getKClass(CommandCategory), 'net.perfectdreams.loritta.api.commands.CommandCategory')) : input.updateSerializableElement_ehubvl$(this.descriptor, 3, new EnumSerializer(getKClass(CommandCategory), 'net.perfectdreams.loritta.api.commands.CommandCategory'), local3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = (bitMask0 & 16) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 4, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 4, internal.StringSerializer, local4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case 5:
          local5 = (bitMask0 & 32) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 5, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 5, internal.StringSerializer, local5);
          bitMask0 |= 32;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return CommandsRoute$Companion$CommandsRoute$Companion$Command_init(bitMask0, local0, local1, local2, local3, local4, local5, null);
  };
  CommandsRoute$Companion$Command$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), new EnumSerializer(getKClass(CommandCategory), 'net.perfectdreams.loritta.api.commands.CommandCategory'), new NullableSerializer(internal.StringSerializer), new NullableSerializer(internal.StringSerializer)];
  };
  CommandsRoute$Companion$Command$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var CommandsRoute$Companion$Command$$serializer_instance = null;
  function CommandsRoute$Companion$Command$$serializer_getInstance() {
    if (CommandsRoute$Companion$Command$$serializer_instance === null) {
      new CommandsRoute$Companion$Command$$serializer();
    }
    return CommandsRoute$Companion$Command$$serializer_instance;
  }
  function CommandsRoute$Companion$CommandsRoute$Companion$Command_init(seen1, name, label, aliases, category, description, usage, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(CommandsRoute$Companion$Command.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('label');
    else
      $this.label = label;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('aliases');
    else
      $this.aliases = aliases;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('category');
    else
      $this.category = category;
    if ((seen1 & 16) === 0)
      $this.description = null;
    else
      $this.description = description;
    if ((seen1 & 32) === 0)
      $this.usage = null;
    else
      $this.usage = usage;
    return $this;
  }
  CommandsRoute$Companion$Command.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Command',
    interfaces: []
  };
  CommandsRoute$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var CommandsRoute$Companion_instance = null;
  function CommandsRoute$Companion_getInstance() {
    if (CommandsRoute$Companion_instance === null) {
      new CommandsRoute$Companion();
    }
    return CommandsRoute$Companion_instance;
  }
  CommandsRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CommandsRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function get$lambda_0($receiver) {
    return Unit;
  }
  function Comparator$ObjectLiteral_0(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_0.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_0.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareBy$lambda_0 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function DashboardRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/dashboard');
    this.m = m;
  }
  Object.defineProperty(DashboardRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function DashboardRoute$onRender$lambda$lambda($receiver) {
    url($receiver, window.location.origin + '/api/v1/users/@me/guilds?check-join=true');
    return Unit;
  }
  function DashboardRoute$onRender$lambda$lambda_0($receiver) {
    leftSidebarForProfileDashboard($receiver);
    return Unit;
  }
  function DashboardRoute$onRender$lambda$lambda_1(closure$userIdentification, closure$list, this$DashboardRoute) {
    return function ($receiver) {
      this$DashboardRoute.rightSidebar_hugvpc$($receiver, closure$userIdentification, closure$list);
      return Unit;
    };
  }
  function Coroutine$DashboardRoute$onRender$lambda(closure$call_0, this$DashboardRoute_0, closure$userIdentification_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$closure$call = closure$call_0;
    this.local$this$DashboardRoute = this$DashboardRoute_0;
    this.local$closure$userIdentification = closure$userIdentification_0;
    this.local$response = void 0;
  }
  Coroutine$DashboardRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DashboardRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DashboardRoute$onRender$lambda.prototype.constructor = Coroutine$DashboardRoute$onRender$lambda;
  Coroutine$DashboardRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            DashboardRoute$onRender$lambda$lambda($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            var list = $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(TemmieDiscordGuild))), result);
            this.local$this$DashboardRoute.fixDummyNavbarHeight_hjvrm5$(this.local$closure$call);
            this.local$this$DashboardRoute.switchContent_hjvrm5$(this.local$closure$call);
            this.local$this$DashboardRoute.twoColumnLayout_cbu7sc$(DashboardRoute$onRender$lambda$lambda_0, DashboardRoute$onRender$lambda$lambda_1(this.local$closure$userIdentification, list, this.local$this$DashboardRoute));
            SpicyMorenitta$Companion_getInstance().INSTANCE.setUpLinkPreloader();
            return this.local$this$DashboardRoute.m.hideLoadingScreen(), Unit;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DashboardRoute$onRender$lambda(closure$call_0, this$DashboardRoute_0, closure$userIdentification_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$DashboardRoute$onRender$lambda(closure$call_0, this$DashboardRoute_0, closure$userIdentification_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  DashboardRoute.prototype.onRender_hjvrm5$ = function (call) {
    var tmp$;
    this.m.showLoadingScreen_61zpoe$();
    tmp$ = this.m.userIdentification;
    if (tmp$ == null) {
      return;
    }
    var userIdentification = tmp$;
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(DashboardRoute$onRender$lambda(call, this, userIdentification));
  };
  function DashboardRoute$rightSidebar$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Bem-vindo de volta...');
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda_0(closure$userIdentification) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$userIdentification.username);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda(closure$userIdentification) {
    return function ($receiver) {
      div($receiver, void 0, DashboardRoute$rightSidebar$lambda$lambda$lambda);
      div($receiver, 'name', DashboardRoute$rightSidebar$lambda$lambda$lambda_0(closure$userIdentification));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda(closure$userIdentification) {
    return function ($receiver) {
      img($receiver, void 0, 'https://cdn.discordapp.com/avatars/' + closure$userIdentification.id + '/' + toString(closure$userIdentification.avatar) + '.png?size=256');
      div($receiver, 'text', DashboardRoute$rightSidebar$lambda$lambda(closure$userIdentification));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda_0(it) {
    return it.name;
  }
  function DashboardRoute$rightSidebar$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Escolha o Servidor!');
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      img($receiver, void 0, 'https://cdn.discordapp.com/icons/' + closure$it.id + '/' + toString(closure$it.icon) + '.png?size=128', 'icon', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it.name);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$it) {
    return function ($receiver) {
      var tmp$;
      switch (WebsiteUtils_getInstance().getUserPermissionLevel_qbryc2$(closure$it).name) {
        case 'OWNER':
          tmp$ = get_locale_0().get_25kzsl$('website.dashboard.owner', []);
          break;
        case 'ADMINISTRATOR':
          tmp$ = get_locale_0().get_25kzsl$('website.dashboard.administrator', []);
          break;
        case 'MANAGER':
          tmp$ = get_locale_0().get_25kzsl$('website.dashboard.manager', []);
          break;
        case 'MEMBER':
          tmp$ = get_locale_0().get_25kzsl$('website.dashboard.member', []);
          break;
        default:tmp$ = Kotlin.noWhenBranchMatched();
          break;
      }
      $receiver.unaryPlus_pdl1vz$(tmp$);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      div($receiver, 'name', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$it));
      div($receiver, 'role', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$it));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      div($receiver, void 0, DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda(closure$it));
      div($receiver, 'info', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_0(closure$it));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    var $receiver_0 = $receiver.attributes;
    var key = 'data-enable-link-preload';
    $receiver_0.put_xwzc9p$(key, 'true');
    i($receiver, 'fas fa-cogs', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_2);
    $receiver.unaryPlus_pdl1vz$(' ' + get_locale_0().get_25kzsl$('website.dashboard.configureLori', []));
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      a($receiver, '/' + SpicyMorenitta$Companion_getInstance().INSTANCE.websiteLocaleId + '/guild/' + closure$it.id + '/dashboard', void 0, void 0, DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_1);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda_1(closure$it) {
    return function ($receiver) {
      div($receiver, 'top-row', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda(closure$it));
      div($receiver, 'bottom-row', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_0(closure$it));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_3($receiver) {
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_2(closure$it) {
    return function ($receiver) {
      img($receiver, void 0, 'https://cdn.discordapp.com/icons/' + closure$it.id + '/' + toString(closure$it.icon) + '.png?size=128', 'icon', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_3);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it.name);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(WebsiteUtils_getInstance().getUserPermissionLevel_qbryc2$(closure$it).name);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_3(closure$it) {
    return function ($receiver) {
      div($receiver, 'name', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$it));
      div($receiver, 'role', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$it));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_1(closure$it) {
    return function ($receiver) {
      div($receiver, void 0, DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_2(closure$it));
      div($receiver, 'info', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_3(closure$it));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_6($receiver) {
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_4($receiver) {
    var $receiver_0 = $receiver.attributes;
    var key = 'data-enable-link-preload';
    $receiver_0.put_xwzc9p$(key, 'true');
    i($receiver, 'fas fa-plus', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda$lambda_6);
    $receiver.unaryPlus_pdl1vz$(' ' + get_locale_0().get_25kzsl$('website.dashboard.addLori', []));
    return Unit;
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_2(closure$it) {
    return function ($receiver) {
      a($receiver, '/' + SpicyMorenitta$Companion_getInstance().INSTANCE.websiteLocaleId + '/guild/' + closure$it.id + '/dashboard', void 0, void 0, DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda$lambda_4);
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda$lambda$lambda_2(closure$it) {
    return function ($receiver) {
      div($receiver, 'top-row', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_1(closure$it));
      div($receiver, 'bottom-row', DashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_2(closure$it));
      return Unit;
    };
  }
  function DashboardRoute$rightSidebar$lambda_2(closure$hasLori, closure$doesntHasLoriButCanAdd) {
    return function ($receiver) {
      var tmp$;
      tmp$ = closure$hasLori.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        div($receiver, 'entry', DashboardRoute$rightSidebar$lambda$lambda$lambda_1(element));
      }
      var tmp$_0;
      tmp$_0 = closure$doesntHasLoriButCanAdd.iterator();
      while (tmp$_0.hasNext()) {
        var element_0 = tmp$_0.next();
        div($receiver, 'entry', DashboardRoute$rightSidebar$lambda$lambda$lambda_2(element_0));
      }
      return Unit;
    };
  }
  DashboardRoute.prototype.rightSidebar_hugvpc$ = function ($receiver, userIdentification, list) {
    div($receiver, 'user-info', DashboardRoute$rightSidebar$lambda(userIdentification));
    var destination = ArrayList_init();
    var tmp$;
    tmp$ = list.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      if (WebsiteUtils_getInstance().canManageGuild_qbryc2$(element))
        destination.add_11rb$(element);
    }
    var canManage = sortedWith(destination, new Comparator$ObjectLiteral_0(compareBy$lambda_0(DashboardRoute$rightSidebar$lambda_0)));
    var destination_0 = ArrayList_init();
    var tmp$_0;
    tmp$_0 = canManage.iterator();
    while (tmp$_0.hasNext()) {
      var element_0 = tmp$_0.next();
      if (element_0.joined)
        destination_0.add_11rb$(element_0);
    }
    var hasLori = destination_0;
    var destination_1 = ArrayList_init();
    var tmp$_1;
    tmp$_1 = canManage.iterator();
    while (tmp$_1.hasNext()) {
      var element_1 = tmp$_1.next();
      if (!element_1.joined)
        destination_1.add_11rb$(element_1);
    }
    var doesntHasLoriButCanAdd = destination_1;
    h1($receiver, void 0, DashboardRoute$rightSidebar$lambda_1);
    div($receiver, 'server-list', DashboardRoute$rightSidebar$lambda_2(hasLori, doesntHasLoriButCanAdd));
  };
  DashboardRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DashboardRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function DiscordBotBrasileiroRoute() {
    BaseRoute.call(this, '/discord-bot-brasileiro');
  }
  function Coroutine$DiscordBotBrasileiroRoute$onRender$lambda($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda.prototype.constructor = Coroutine$DiscordBotBrasileiroRoute$onRender$lambda;
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var part0 = (tmp$ = document.querySelector('.right-side-text .introduction .my-name-is')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
            addClass(part0, ['animated', 'fade-in-right', 'one-second']);
            removeClass(part0, ['invisible']);
            this.state_0 = 2;
            this.result_0 = delay(L900, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var tmp$_0;
            var part1 = (tmp$_0 = document.querySelector('.right-side-text .introduction .loritta')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            addClass(part1, ['animated', 'fade-in-right', 'one-second']);
            removeClass(part1, ['invisible']);
            this.state_0 = 3;
            this.result_0 = delay(L900, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var tmp$_1;
            var part2 = (tmp$_1 = document.querySelector('.right-side-text .introduction .tagline')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
            addClass(part2, ['animated', 'fade-in-right', 'one-second']);
            return removeClass(part2, ['invisible']);
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DiscordBotBrasileiroRoute$onRender$lambda($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$DiscordBotBrasileiroRoute$onRender$lambda($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$DiscordBotBrasileiroRoute$onRender$lambda_0(closure$blinkingPose_0, closure$blushingPose_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$blinkingPose = closure$blinkingPose_0;
    this.local$closure$blushingPose = closure$blushingPose_0;
  }
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda_0.prototype.constructor = Coroutine$DiscordBotBrasileiroRoute$onRender$lambda_0;
  Coroutine$DiscordBotBrasileiroRoute$onRender$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$closure$blinkingPose.style.visibility = '';
            this.state_0 = 3;
            this.result_0 = delay(L7000, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$closure$blushingPose.style.visibility = '';
            this.local$closure$blinkingPose.style.visibility = 'visible';
            this.state_0 = 4;
            this.result_0 = delay(L140, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DiscordBotBrasileiroRoute$onRender$lambda_0(closure$blinkingPose_0, closure$blushingPose_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$DiscordBotBrasileiroRoute$onRender$lambda_0(closure$blinkingPose_0, closure$blushingPose_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function DiscordBotBrasileiroRoute$onRender$lambda_1(closure$selfie, closure$blushingPose, this$DiscordBotBrasileiroRoute) {
    return function (it) {
      var offset_0 = offset(closure$selfie);
      var x = (it.pageX - offset_0.left) / closure$blushingPose.offsetWidth;
      var y = (it.pageY - offset_0.top) / closure$selfie.offsetHeight;
      this$DiscordBotBrasileiroRoute.debug_yhszz7$(['x: ' + x.toString() + '; y: ' + y.toString()]);
      if (rangeTo(0.19, 0.3).contains_mef7kx$(x) && rangeTo(0.24, 0.35).contains_mef7kx$(y)) {
        closure$blushingPose.style.visibility = 'visible';
      }
      return Unit;
    };
  }
  DiscordBotBrasileiroRoute.prototype.onRender_hjvrm5$ = function (call) {
    BaseRoute.prototype.onRender_hjvrm5$.call(this, call);
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(DiscordBotBrasileiroRoute$onRender$lambda);
    var tmp$;
    var blinkingPose = (tmp$ = document.querySelector('.blinking-pose')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var tmp$_0;
    var blushingPose = (tmp$_0 = document.querySelector('.blushing-pose')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(DiscordBotBrasileiroRoute$onRender$lambda_0(blinkingPose, blushingPose));
    var tmp$_1;
    var selfie = (tmp$_1 = document.querySelector('#loritta-selfie')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    var tmp$_2;
    onClick((tmp$_2 = document.querySelector('#loritta-selfie')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE(), DiscordBotBrasileiroRoute$onRender$lambda_1(selfie, blushingPose, this));
  };
  DiscordBotBrasileiroRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DiscordBotBrasileiroRoute',
    interfaces: [BaseRoute]
  };
  function get$lambda_1($receiver) {
    return Unit;
  }
  function Comparator$ObjectLiteral_1(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_1.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_1.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareBy$lambda_1 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_2(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_2.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_2.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareByDescending$lambda = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(b), selector(a));
      };
    };
  });
  function FanArtsRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/fanarts/{artist?}');
    this.m = m;
    this.currentArtistSortingMethod = FanArtsRoute$ArtistSortingMethod$ALPHABETIC_getInstance();
    this.currentFanArtSortingMethod = FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_getInstance();
    this.filterTag = null;
    this.watchingUser = null;
    this.fanArtArtists = emptyList();
  }
  Object.defineProperty(FanArtsRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function FanArtsRoute$onRender$lambda$lambda($receiver) {
    url($receiver, window.location.origin + '/api/v1/loritta/fan-arts?query=all');
    return Unit;
  }
  function FanArtsRoute$onRender$lambda$lambda_0(closure$list, this$FanArtsRoute) {
    return function ($receiver) {
      this$FanArtsRoute.leftSidebar_farzp2$($receiver, closure$list);
      return Unit;
    };
  }
  function FanArtsRoute$onRender$lambda$lambda_1(closure$list, this$FanArtsRoute) {
    return function ($receiver) {
      this$FanArtsRoute.rightSidebar_farzp2$($receiver, closure$list);
      return Unit;
    };
  }
  function Coroutine$FanArtsRoute$onRender$lambda$lambda(closure$list_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$list = closure$list_0;
    this.local$holdingImage1 = void 0;
    this.local$holdingImage2 = void 0;
    this.local$index = void 0;
    this.local$index_0 = void 0;
  }
  Coroutine$FanArtsRoute$onRender$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$FanArtsRoute$onRender$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$FanArtsRoute$onRender$lambda$lambda.prototype.constructor = Coroutine$FanArtsRoute$onRender$lambda$lambda;
  Coroutine$FanArtsRoute$onRender$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var tmp$;
            this.local$holdingImage1 = (tmp$ = document.querySelector('#right-sidebar .holding-image-1')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
            var tmp$_0;
            this.local$holdingImage2 = (tmp$_0 = document.querySelector('#right-sidebar .holding-image-2')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            this.state_0 = 3;
            this.result_0 = delay(L5000, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$index = 0;
            this.state_0 = 4;
            continue;
          case 4:
            if (this.local$index >= 100) {
              this.state_0 = 7;
              continue;
            }

            this.local$holdingImage1.style.opacity = (toDouble(this.local$holdingImage1.style.opacity) - 0.01).toString();
            this.local$holdingImage2.style.opacity = (toDouble(this.local$holdingImage2.style.opacity) + 0.01).toString();
            this.state_0 = 5;
            this.result_0 = delay(L25, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            this.state_0 = 6;
            continue;
          case 6:
            this.local$index++;
            this.state_0 = 4;
            continue;
          case 7:
            var $receiver = this.local$closure$list;
            var destination = ArrayList_init();
            var tmp$_1;
            tmp$_1 = $receiver.iterator();
            while (tmp$_1.hasNext()) {
              var element = tmp$_1.next();
              var list = element.fanArts;
              addAll(destination, list);
            }

            this.local$holdingImage1.setAttribute('src', 'https://loritta.website/assets/img/fanarts/' + random(destination, Random.Default).fileName);
            this.state_0 = 8;
            this.result_0 = delay(L5000, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 8:
            this.local$index_0 = 0;
            this.state_0 = 9;
            continue;
          case 9:
            if (this.local$index_0 >= 100) {
              this.state_0 = 12;
              continue;
            }

            this.local$holdingImage2.style.opacity = (toDouble(this.local$holdingImage2.style.opacity) - 0.01).toString();
            this.local$holdingImage1.style.opacity = (toDouble(this.local$holdingImage1.style.opacity) + 0.01).toString();
            this.state_0 = 10;
            this.result_0 = delay(L25, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.state_0 = 11;
            continue;
          case 11:
            this.local$index_0++;
            this.state_0 = 9;
            continue;
          case 12:
            var $receiver_0 = this.local$closure$list;
            var destination_0 = ArrayList_init();
            var tmp$_2;
            tmp$_2 = $receiver_0.iterator();
            while (tmp$_2.hasNext()) {
              var element_0 = tmp$_2.next();
              var list_0 = element_0.fanArts;
              addAll(destination_0, list_0);
            }

            this.local$holdingImage2.setAttribute('src', 'https://loritta.website/assets/img/fanarts/' + random(destination_0, Random.Default).fileName);
            this.state_0 = 2;
            continue;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function FanArtsRoute$onRender$lambda$lambda_2(closure$list_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$FanArtsRoute$onRender$lambda$lambda(closure$list_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$FanArtsRoute$onRender$lambda(this$FanArtsRoute_0, closure$call_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$this$FanArtsRoute = this$FanArtsRoute_0;
    this.local$closure$call = closure$call_0;
    this.local$response = void 0;
  }
  Coroutine$FanArtsRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$FanArtsRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$FanArtsRoute$onRender$lambda.prototype.constructor = Coroutine$FanArtsRoute$onRender$lambda;
  Coroutine$FanArtsRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            FanArtsRoute$onRender$lambda$lambda($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            var list = $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(FanArtArtist))), result);
            this.local$this$FanArtsRoute.fanArtArtists = list;
            this.local$this$FanArtsRoute.fixDummyNavbarHeight_hjvrm5$(this.local$closure$call);
            this.local$this$FanArtsRoute.switchContent_hjvrm5$(this.local$closure$call);
            this.local$this$FanArtsRoute.twoColumnLayout_cbu7sc$(FanArtsRoute$onRender$lambda$lambda_0(list, this.local$this$FanArtsRoute), FanArtsRoute$onRender$lambda$lambda_1(list, this.local$this$FanArtsRoute));
            var artistId = this.local$closure$call.parameters.get_11rb$('artist');
            var artistLookup = null;
            if (artistId != null) {
              var firstOrNull$result;
              firstOrNull$break: do {
                var tmp$;
                tmp$ = list.iterator();
                while (tmp$.hasNext()) {
                  var element = tmp$.next();
                  if (equals(element.id, artistId)) {
                    firstOrNull$result = element;
                    break firstOrNull$break;
                  }
                }
                firstOrNull$result = null;
              }
               while (false);
              artistLookup = firstOrNull$result;
            }

            if (artistLookup != null) {
              this.local$this$FanArtsRoute.renderArtistFanArts_qnglhr$(artistLookup);
            }
             else {
              this.local$this$FanArtsRoute.renderFanArts_a704dj$(this.local$this$FanArtsRoute.sortFanArts_lbwf6o$(list));
            }

            this.local$this$FanArtsRoute.renderArtists_lbwf6o$(this.local$this$FanArtsRoute.sortArtists_lbwf6o$(list));
            this.local$this$FanArtsRoute.m.hideLoadingScreen();
            return SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(FanArtsRoute$onRender$lambda$lambda_2(list));
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function FanArtsRoute$onRender$lambda(this$FanArtsRoute_0, closure$call_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$FanArtsRoute$onRender$lambda(this$FanArtsRoute_0, closure$call_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  FanArtsRoute.prototype.onRender_hjvrm5$ = function (call) {
    this.m.showLoadingScreen_61zpoe$();
    this.currentArtistSortingMethod = FanArtsRoute$ArtistSortingMethod$ALPHABETIC_getInstance();
    this.currentFanArtSortingMethod = FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_getInstance();
    this.filterTag = null;
    this.watchingUser = null;
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(FanArtsRoute$onRender$lambda(this, call));
  };
  function FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda($receiver) {
    $receiver.value = 'ascend-name';
    $receiver.unaryPlus_pdl1vz$('por nome (A-Z)');
    return Unit;
  }
  function FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.value = 'descend-name';
    $receiver.unaryPlus_pdl1vz$('por nome (Z-A)');
    return Unit;
  }
  function FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.value = 'descend-art';
    $receiver.unaryPlus_pdl1vz$('por mais fan arts');
    return Unit;
  }
  function FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda_2(this$FanArtsRoute, closure$list) {
    return function (it) {
      window.scrollTo(0.0, 0.0);
      var tmp$;
      var selectFanArtOrder = ((tmp$ = document.querySelector('#select-artist-order')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      if (equals(selectFanArtOrder, 'ascend-name'))
        this$FanArtsRoute.currentArtistSortingMethod = FanArtsRoute$ArtistSortingMethod$ALPHABETIC_getInstance();
      if (equals(selectFanArtOrder, 'descend-name'))
        this$FanArtsRoute.currentArtistSortingMethod = FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_getInstance();
      if (equals(selectFanArtOrder, 'descend-art'))
        this$FanArtsRoute.currentArtistSortingMethod = FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_getInstance();
      this$FanArtsRoute.renderArtists_lbwf6o$(this$FanArtsRoute.sortArtists_lbwf6o$(closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$leftSidebar$lambda$lambda$lambda(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      set_id($receiver, 'select-artist-order');
      option($receiver, void 0, FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda);
      option($receiver, void 0, FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda_0);
      option($receiver, void 0, FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda_1);
      set_onChangeFunction($receiver, FanArtsRoute$leftSidebar$lambda$lambda$lambda$lambda_2(this$FanArtsRoute, closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$leftSidebar$lambda$lambda(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Organizar Artistas... ');
      select($receiver, void 0, FanArtsRoute$leftSidebar$lambda$lambda$lambda(this$FanArtsRoute, closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$leftSidebar$lambda(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      set_style($receiver, 'max-width: 250px;');
      div($receiver, void 0, FanArtsRoute$leftSidebar$lambda$lambda(this$FanArtsRoute, closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$leftSidebar$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Busca de artista por nome');
    return Unit;
  }
  function FanArtsRoute$leftSidebar$lambda$lambda_0(closure$list, this$FanArtsRoute) {
    return function (event) {
      var tmp$;
      Kotlin.isType(tmp$ = event, InputEvent) ? tmp$ : throwCCE();
      var value = {v: ensureNotNull(event.target).value};
      println(value.v);
      var tmp$_0 = this$FanArtsRoute;
      var $receiver = this$FanArtsRoute.sortArtists_lbwf6o$(closure$list);
      var destination = ArrayList_init();
      var tmp$_1;
      tmp$_1 = $receiver.iterator();
      while (tmp$_1.hasNext()) {
        var element = tmp$_1.next();
        var tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7;
        if (contains_0((tmp$_6 = (tmp$_5 = (tmp$_4 = (tmp$_2 = element.info.override) != null ? tmp$_2.name : null) != null ? tmp$_4 : (tmp$_3 = element.user) != null ? tmp$_3.name : null) != null ? tmp$_5 : element.info.name) != null ? tmp$_6 : element.id, typeof (tmp$_7 = value.v) === 'string' ? tmp$_7 : throwCCE(), true))
          destination.add_11rb$(element);
      }
      tmp$_0.renderArtists_lbwf6o$(destination);
      return Unit;
    };
  }
  function FanArtsRoute$leftSidebar$lambda_1(closure$list, this$FanArtsRoute) {
    return function ($receiver) {
      set_onInputFunction($receiver, FanArtsRoute$leftSidebar$lambda$lambda_0(closure$list, this$FanArtsRoute));
      return Unit;
    };
  }
  function FanArtsRoute$leftSidebar$lambda_2($receiver) {
    return Unit;
  }
  function FanArtsRoute$leftSidebar$lambda_3($receiver) {
    return Unit;
  }
  FanArtsRoute.prototype.leftSidebar_farzp2$ = function ($receiver, list) {
    div($receiver, void 0, FanArtsRoute$leftSidebar$lambda(this, list));
    div($receiver, void 0, FanArtsRoute$leftSidebar$lambda_0);
    input_0($receiver, InputType.text, void 0, void 0, void 0, void 0, FanArtsRoute$leftSidebar$lambda_1(list, this));
    hr($receiver, void 0, FanArtsRoute$leftSidebar$lambda_2);
    div($receiver, 'artists', FanArtsRoute$leftSidebar$lambda_3);
  };
  function FanArtsRoute$rightSidebar$lambda$lambda($receiver) {
    set_style($receiver, 'opacity: 1;');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda_0($receiver) {
    set_style($receiver, 'opacity: 0;');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda($receiver) {
    img($receiver, void 0, 'https://cdn.discordapp.com/attachments/544229872189309117/568465135170093086/Loritta_Fan_Arts_-_Miela.png', 'lori-behind');
    img($receiver, void 0, 'https://loritta.website/assets/img/fanarts/Loritta_Anniversary_2019_-_Miela.png', 'holding-image-1 icon-middle fan-art-in-hand', FanArtsRoute$rightSidebar$lambda$lambda);
    img($receiver, void 0, 'https://loritta.website/assets/img/fanarts/Loritta_3_-_Aniih.png', 'holding-image-2 icon-middle fan-art-in-hand', FanArtsRoute$rightSidebar$lambda$lambda_0);
    img($receiver, void 0, 'https://cdn.discordapp.com/attachments/544229872189309117/568465133286719488/loritta_arms.png', 'lori-arms');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda_1($receiver) {
    set_id($receiver, 'artist-info');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda($receiver) {
    $receiver.value = 'ascend';
    $receiver.unaryPlus_pdl1vz$('por data (ascendente)');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.value = 'descend';
    $receiver.unaryPlus_pdl1vz$('por data (descendente)');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_1(this$FanArtsRoute, closure$list) {
    return function (it) {
      window.scrollTo(0.0, 0.0);
      var tmp$;
      var selectFanArtOrder = (tmp$ = document.querySelector('#select-fan-art-order')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
      if (equals(selectFanArtOrder.value, 'ascend'))
        this$FanArtsRoute.currentFanArtSortingMethod = FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_getInstance();
      else
        this$FanArtsRoute.currentFanArtSortingMethod = FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_getInstance();
      this$FanArtsRoute.renderFanArts_a704dj$(this$FanArtsRoute.sortFanArts_lbwf6o$(closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      set_id($receiver, 'select-fan-art-order');
      option($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda);
      option($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_0);
      set_onChangeFunction($receiver, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_1(this$FanArtsRoute, closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$rightSidebar$lambda$lambda_2(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Organizar Fan Arts... ');
      select($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda(this$FanArtsRoute, closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_2($receiver) {
    $receiver.value = 'all';
    $receiver.unaryPlus_pdl1vz$('Todas');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_3($receiver) {
    $receiver.value = 'anniversary-2019';
    $receiver.unaryPlus_pdl1vz$('Anivers\xE1rio 2019');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_4($receiver) {
    $receiver.value = 'april-fools-2019';
    $receiver.unaryPlus_pdl1vz$('Primeiro de Abril 2019 (Furries)');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_5($receiver) {
    $receiver.value = 'sweater-2019';
    $receiver.unaryPlus_pdl1vz$('Moletons');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_6($receiver) {
    $receiver.value = 'holiday-2019';
    $receiver.unaryPlus_pdl1vz$('F\xE9rias de Inverno 2019');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_7(this$FanArtsRoute, closure$list) {
    return function (it) {
      window.scrollTo(0.0, 0.0);
      var tmp$;
      var selectFanArtOrder = ((tmp$ = document.querySelector('#select-fan-arts-type')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      if (equals(selectFanArtOrder, 'all')) {
        this$FanArtsRoute.filterTag = null;
        this$FanArtsRoute.renderFanArts_a704dj$(this$FanArtsRoute.sortFanArts_lbwf6o$(closure$list));
      }
       else {
        this$FanArtsRoute.filterTag = selectFanArtOrder;
        this$FanArtsRoute.renderFanArts_a704dj$(this$FanArtsRoute.sortFanArts_lbwf6o$(closure$list));
      }
      return Unit;
    };
  }
  function FanArtsRoute$rightSidebar$lambda$lambda$lambda_0(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      set_id($receiver, 'select-fan-arts-type');
      option($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_2);
      option($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_3);
      option($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_4);
      option($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_5);
      option($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_6);
      set_onChangeFunction($receiver, FanArtsRoute$rightSidebar$lambda$lambda$lambda$lambda_7(this$FanArtsRoute, closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$rightSidebar$lambda$lambda_3(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Mostrar Fan Arts... ');
      select($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda$lambda_0(this$FanArtsRoute, closure$list));
      return Unit;
    };
  }
  function FanArtsRoute$rightSidebar$lambda$lambda_4($receiver) {
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda$lambda_5($receiver) {
    set_id($receiver, 'fan-art-gallery');
    return Unit;
  }
  function FanArtsRoute$rightSidebar$lambda_0(this$FanArtsRoute, closure$list) {
    return function ($receiver) {
      div($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda_1);
      div($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda_2(this$FanArtsRoute, closure$list));
      div($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda_3(this$FanArtsRoute, closure$list));
      hr($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda_4);
      div($receiver, void 0, FanArtsRoute$rightSidebar$lambda$lambda_5);
      return Unit;
    };
  }
  FanArtsRoute.prototype.rightSidebar_farzp2$ = function ($receiver, list) {
    div($receiver, 'lori-holding', FanArtsRoute$rightSidebar$lambda);
    div($receiver, void 0, FanArtsRoute$rightSidebar$lambda_0(this, list));
  };
  function FanArtsRoute$sortArtists$lambda(it) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    return (tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$ = it.info.override) != null ? tmp$.name : null) != null ? tmp$_1 : (tmp$_0 = it.user) != null ? tmp$_0.name : null) != null ? tmp$_2 : it.info.name) != null ? tmp$_3 : it.id;
  }
  function FanArtsRoute$sortArtists$lambda_0(it) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
    return (tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$ = it.info.override) != null ? tmp$.name : null) != null ? tmp$_1 : (tmp$_0 = it.user) != null ? tmp$_0.name : null) != null ? tmp$_2 : it.info.name) != null ? tmp$_3 : it.id;
  }
  function FanArtsRoute$sortArtists$lambda_1(it) {
    return it.fanArts.size;
  }
  FanArtsRoute.prototype.sortArtists_lbwf6o$ = function (artists) {
    var tmp$;
    switch (this.currentArtistSortingMethod.name) {
      case 'ALPHABETIC':
        tmp$ = sortedWith(artists, new Comparator$ObjectLiteral_1(compareBy$lambda_1(FanArtsRoute$sortArtists$lambda)));
        break;
      case 'ALPHABETIC_REVERSED':
        tmp$ = sortedWith(artists, new Comparator$ObjectLiteral_2(compareByDescending$lambda(FanArtsRoute$sortArtists$lambda_0)));
        break;
      case 'FAN_ART_COUNT':
        tmp$ = sortedWith(artists, new Comparator$ObjectLiteral_2(compareByDescending$lambda(FanArtsRoute$sortArtists$lambda_1)));
        break;
      case 'BEST_ARTISTS':
        tmp$ = emptyList();
        break;
      default:tmp$ = Kotlin.noWhenBranchMatched();
        break;
    }
    var sorted = tmp$;
    return sorted;
  };
  function FanArtsRoute$sortFanArts$lambda(it) {
    return it.createdAt.getTime();
  }
  function FanArtsRoute$sortFanArts$lambda_0(it) {
    return it.createdAt.getTime();
  }
  FanArtsRoute.prototype.sortFanArts_lbwf6o$ = function (list) {
    var tmp$;
    var newList = list;
    if (this.watchingUser != null) {
      var $receiver = newList;
      var destination = ArrayList_init();
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (equals(element, this.watchingUser))
          destination.add_11rb$(element);
      }
      newList = destination;
    }
    switch (this.currentFanArtSortingMethod.name) {
      case 'OLD_TO_NEW':
        var $receiver_0 = newList;
        var destination_0 = ArrayList_init();
        var tmp$_1;
        tmp$_1 = $receiver_0.iterator();
        while (tmp$_1.hasNext()) {
          var element_0 = tmp$_1.next();
          var list_0 = element_0.fanArts;
          addAll(destination_0, list_0);
        }

        tmp$ = sortedWith(destination_0, new Comparator$ObjectLiteral_1(compareBy$lambda_1(FanArtsRoute$sortFanArts$lambda)));
        break;
      case 'NEW_TO_OLD':
        var $receiver_1 = newList;
        var destination_1 = ArrayList_init();
        var tmp$_2;
        tmp$_2 = $receiver_1.iterator();
        while (tmp$_2.hasNext()) {
          var element_1 = tmp$_2.next();
          var list_1 = element_1.fanArts;
          addAll(destination_1, list_1);
        }

        tmp$ = sortedWith(destination_1, new Comparator$ObjectLiteral_2(compareByDescending$lambda(FanArtsRoute$sortFanArts$lambda_0)));
        break;
      default:tmp$ = Kotlin.noWhenBranchMatched();
        break;
    }
    var sorted = tmp$;
    var filterTag = this.filterTag;
    if (filterTag != null) {
      var $receiver_2 = sorted;
      var destination_2 = ArrayList_init();
      var tmp$_3;
      tmp$_3 = $receiver_2.iterator();
      while (tmp$_3.hasNext()) {
        var element_2 = tmp$_3.next();
        if (element_2.tags.contains_11rb$(filterTag))
          destination_2.add_11rb$(element_2);
      }
      sorted = destination_2;
    }
    return sorted;
  };
  function FanArtsRoute$renderArtists$lambda$lambda$lambda(this$FanArtsRoute) {
    return function (it) {
      var tmp$;
      var artistInfo = (tmp$ = document.querySelector('#artist-info')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
      clear(artistInfo);
      this$FanArtsRoute.watchingUser = null;
      this$FanArtsRoute.renderFanArts_a704dj$(this$FanArtsRoute.sortFanArts_lbwf6o$(this$FanArtsRoute.fanArtArtists));
      window.history.pushState(null, '', '/' + this$FanArtsRoute.m.websiteLocaleId + '/fanarts');
      return Unit;
    };
  }
  function FanArtsRoute$renderArtists$lambda$lambda(this$FanArtsRoute) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; align-items: center;');
      var tmp$;
      var sum = 0;
      tmp$ = this$FanArtsRoute.fanArtArtists.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        sum = sum + element.fanArts.size | 0;
      }
      $receiver.unaryPlus_pdl1vz$('Ver todas as ' + sum + ' fan arts');
      set_onClickFunction($receiver, FanArtsRoute$renderArtists$lambda$lambda$lambda(this$FanArtsRoute));
      return Unit;
    };
  }
  function FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda($receiver) {
    $receiver.width = '32';
    $receiver.height = '32';
    set_style($receiver, 'border-radius: 999999px; margin-right: 6px;');
    return Unit;
  }
  function FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
      $receiver.unaryPlus_pdl1vz$((tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$ = closure$it.info.override) != null ? tmp$.name : null) != null ? tmp$_1 : (tmp$_0 = closure$it.user) != null ? tmp$_0.name : null) != null ? tmp$_2 : closure$it.info.name) != null ? tmp$_3 : closure$it.id);
      return Unit;
    };
  }
  function FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it.fanArts.size.toString() + ' fan art' + (closure$it.fanArts.size !== 1 ? 's' : ''));
      return Unit;
    };
  }
  function FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      set_style($receiver, 'overflow: hidden;');
      div($receiver, 'title', FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda$lambda(closure$it));
      div($receiver, 'subtitle', FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda$lambda_0(closure$it));
      return Unit;
    };
  }
  function FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda_1(closure$it, this$FanArtsRoute) {
    return function (event) {
      this$FanArtsRoute.renderArtistFanArts_qnglhr$(closure$it);
      return Unit;
    };
  }
  function FanArtsRoute$renderArtists$lambda$lambda$lambda_0(closure$it, this$FanArtsRoute) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      set_style($receiver, 'display: flex; align-items: center;');
      img($receiver, void 0, (tmp$_0 = (tmp$ = closure$it.user) != null ? tmp$.effectiveAvatarUrl : null) != null ? tmp$_0 : 'https://cdn.discordapp.com/emojis/523176710439567392.png?v=1', void 0, FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda);
      div($receiver, void 0, FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda_0(closure$it));
      set_onClickFunction($receiver, FanArtsRoute$renderArtists$lambda$lambda$lambda$lambda_1(closure$it, this$FanArtsRoute));
      return Unit;
    };
  }
  function FanArtsRoute$renderArtists$lambda(this$FanArtsRoute, closure$artists) {
    return function ($receiver) {
      div_0($receiver, 'entry', FanArtsRoute$renderArtists$lambda$lambda(this$FanArtsRoute));
      var $receiver_0 = closure$artists;
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        div_0($receiver, 'entry', FanArtsRoute$renderArtists$lambda$lambda$lambda_0(element, this$FanArtsRoute));
      }
      return Unit;
    };
  }
  FanArtsRoute.prototype.renderArtists_lbwf6o$ = function (artists) {
    var tmp$;
    var artistSidebar = (tmp$ = document.querySelector('#left-sidebar .artists')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(artistSidebar);
    append(artistSidebar, FanArtsRoute$renderArtists$lambda(this, artists));
  };
  function FanArtsRoute$renderArtistFanArts$lambda$lambda$lambda$lambda(closure$artist) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
      $receiver.unaryPlus_pdl1vz$((tmp$_3 = (tmp$_2 = (tmp$_1 = (tmp$ = closure$artist.info.override) != null ? tmp$.name : null) != null ? tmp$_1 : (tmp$_0 = closure$artist.user) != null ? tmp$_0.name : null) != null ? tmp$_2 : closure$artist.info.name) != null ? tmp$_3 : closure$artist.id);
      return Unit;
    };
  }
  function FanArtsRoute$renderArtistFanArts$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('*Sobre Mim do usu\xE1rio aqui*');
    return Unit;
  }
  function FanArtsRoute$renderArtistFanArts$lambda$lambda$lambda(closure$artist) {
    return function ($receiver) {
      div($receiver, 'name', FanArtsRoute$renderArtistFanArts$lambda$lambda$lambda$lambda(closure$artist));
      div($receiver, void 0, FanArtsRoute$renderArtistFanArts$lambda$lambda$lambda$lambda_0);
      return Unit;
    };
  }
  function FanArtsRoute$renderArtistFanArts$lambda$lambda(closure$artist) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      img($receiver, void 0, (tmp$_0 = (tmp$ = closure$artist.user) != null ? tmp$.effectiveAvatarUrl : null) != null ? tmp$_0 : 'https://cdn.discordapp.com/emojis/523176710439567392.png?v=1');
      div($receiver, 'text', FanArtsRoute$renderArtistFanArts$lambda$lambda$lambda(closure$artist));
      return Unit;
    };
  }
  function FanArtsRoute$renderArtistFanArts$lambda(closure$artist) {
    return function ($receiver) {
      div_0($receiver, 'user-info', FanArtsRoute$renderArtistFanArts$lambda$lambda(closure$artist));
      return Unit;
    };
  }
  function FanArtsRoute$renderArtistFanArts$lambda_0(it) {
    return it.createdAt.getTime();
  }
  FanArtsRoute.prototype.renderArtistFanArts_qnglhr$ = function (artist) {
    this.watchingUser = artist;
    var tmp$;
    var artistInfo = (tmp$ = document.querySelector('#artist-info')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(artistInfo);
    var tmp$_0;
    var fanArtGallery = (tmp$_0 = document.querySelector('#fan-art-gallery')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    clear(fanArtGallery);
    window.history.pushState(null, '', '/' + this.m.websiteLocaleId + '/fanarts/' + artist.id);
    append(artistInfo, FanArtsRoute$renderArtistFanArts$lambda(artist));
    this.renderFanArts_a704dj$(sortedWith(artist.fanArts, new Comparator$ObjectLiteral_1(compareBy$lambda_1(FanArtsRoute$renderArtistFanArts$lambda_0))));
  };
  function FanArtsRoute$renderFanArts$lambda() {
    return Unit;
  }
  function FanArtsRoute$renderFanArts$lambda$lambda$lambda(closure$it, closure$dyn) {
    return function ($receiver) {
      var date = closure$it.value.get_za3lpa$(0).createdAt;
      $receiver.unaryPlus_pdl1vz$(date.toLocaleString('pt-br', closure$dyn) + (' de ' + date.getFullYear()));
      return Unit;
    };
  }
  function FanArtsRoute$renderFanArts$lambda$lambda$lambda$lambda(closure$fanArt) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var key = 'lazy-load-url';
      var value = 'https://loritta.website/assets/img/fanarts/' + closure$fanArt.fileName;
      $receiver_0.put_xwzc9p$(key, value);
      $receiver.height = '100';
      set_title($receiver, closure$fanArt.createdAt.toDateString());
      return Unit;
    };
  }
  function FanArtsRoute$renderFanArts$lambda$lambda$lambda_0(closure$it) {
    return function ($receiver) {
      var tmp$;
      tmp$ = closure$it.value.iterator();
      while (tmp$.hasNext()) {
        var fanArt = tmp$.next();
        img($receiver, void 0, void 0, 'fan-art', FanArtsRoute$renderFanArts$lambda$lambda$lambda$lambda(fanArt));
      }
      return Unit;
    };
  }
  function FanArtsRoute$renderFanArts$lambda_0(closure$grouped, closure$dyn) {
    return function ($receiver) {
      var $receiver_0 = closure$grouped;
      var tmp$;
      tmp$ = $receiver_0.entries.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        h2($receiver, 'left-horizontal-line uppercase', FanArtsRoute$renderFanArts$lambda$lambda$lambda(element, closure$dyn));
        div_0($receiver, 'fan-arts-wrapper', FanArtsRoute$renderFanArts$lambda$lambda$lambda_0(element));
      }
      return Unit;
    };
  }
  FanArtsRoute.prototype.renderFanArts_a704dj$ = function (sorted) {
    var destination = LinkedHashMap_init();
    var tmp$;
    tmp$ = sorted.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var key = element.createdAt.getMonth().toString() + '-' + toString(element.createdAt.getFullYear());
      var tmp$_0;
      var value = destination.get_11rb$(key);
      if (value == null) {
        var answer = ArrayList_init();
        destination.put_xwzc9p$(key, answer);
        tmp$_0 = answer;
      }
       else {
        tmp$_0 = value;
      }
      var list = tmp$_0;
      list.add_11rb$(element);
    }
    var grouped = destination;
    var dyn = FanArtsRoute$renderFanArts$lambda;
    dyn['month'] = 'long';
    var tmp$_1;
    var fanArtGallery = (tmp$_1 = document.querySelector('#fan-art-gallery')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    clear(fanArtGallery);
    append(fanArtGallery, FanArtsRoute$renderFanArts$lambda_0(grouped, dyn));
    this.m.setUpLazyLoad();
  };
  function FanArtsRoute$ArtistSortingMethod(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function FanArtsRoute$ArtistSortingMethod_initFields() {
    FanArtsRoute$ArtistSortingMethod_initFields = function () {
    };
    FanArtsRoute$ArtistSortingMethod$ALPHABETIC_instance = new FanArtsRoute$ArtistSortingMethod('ALPHABETIC', 0);
    FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_instance = new FanArtsRoute$ArtistSortingMethod('ALPHABETIC_REVERSED', 1);
    FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_instance = new FanArtsRoute$ArtistSortingMethod('FAN_ART_COUNT', 2);
    FanArtsRoute$ArtistSortingMethod$BEST_ARTISTS_instance = new FanArtsRoute$ArtistSortingMethod('BEST_ARTISTS', 3);
  }
  var FanArtsRoute$ArtistSortingMethod$ALPHABETIC_instance;
  function FanArtsRoute$ArtistSortingMethod$ALPHABETIC_getInstance() {
    FanArtsRoute$ArtistSortingMethod_initFields();
    return FanArtsRoute$ArtistSortingMethod$ALPHABETIC_instance;
  }
  var FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_instance;
  function FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_getInstance() {
    FanArtsRoute$ArtistSortingMethod_initFields();
    return FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_instance;
  }
  var FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_instance;
  function FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_getInstance() {
    FanArtsRoute$ArtistSortingMethod_initFields();
    return FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_instance;
  }
  var FanArtsRoute$ArtistSortingMethod$BEST_ARTISTS_instance;
  function FanArtsRoute$ArtistSortingMethod$BEST_ARTISTS_getInstance() {
    FanArtsRoute$ArtistSortingMethod_initFields();
    return FanArtsRoute$ArtistSortingMethod$BEST_ARTISTS_instance;
  }
  FanArtsRoute$ArtistSortingMethod.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ArtistSortingMethod',
    interfaces: [Enum]
  };
  function FanArtsRoute$ArtistSortingMethod$values() {
    return [FanArtsRoute$ArtistSortingMethod$ALPHABETIC_getInstance(), FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_getInstance(), FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_getInstance(), FanArtsRoute$ArtistSortingMethod$BEST_ARTISTS_getInstance()];
  }
  FanArtsRoute$ArtistSortingMethod.values = FanArtsRoute$ArtistSortingMethod$values;
  function FanArtsRoute$ArtistSortingMethod$valueOf(name) {
    switch (name) {
      case 'ALPHABETIC':
        return FanArtsRoute$ArtistSortingMethod$ALPHABETIC_getInstance();
      case 'ALPHABETIC_REVERSED':
        return FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_getInstance();
      case 'FAN_ART_COUNT':
        return FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_getInstance();
      case 'BEST_ARTISTS':
        return FanArtsRoute$ArtistSortingMethod$BEST_ARTISTS_getInstance();
      default:throwISE('No enum constant net.perfectdreams.spicymorenitta.routes.FanArtsRoute.ArtistSortingMethod.' + name);
    }
  }
  FanArtsRoute$ArtistSortingMethod.valueOf_61zpoe$ = FanArtsRoute$ArtistSortingMethod$valueOf;
  function FanArtsRoute$FanArtSortingMethod(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function FanArtsRoute$FanArtSortingMethod_initFields() {
    FanArtsRoute$FanArtSortingMethod_initFields = function () {
    };
    FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_instance = new FanArtsRoute$FanArtSortingMethod('OLD_TO_NEW', 0);
    FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_instance = new FanArtsRoute$FanArtSortingMethod('NEW_TO_OLD', 1);
  }
  var FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_instance;
  function FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_getInstance() {
    FanArtsRoute$FanArtSortingMethod_initFields();
    return FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_instance;
  }
  var FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_instance;
  function FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_getInstance() {
    FanArtsRoute$FanArtSortingMethod_initFields();
    return FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_instance;
  }
  FanArtsRoute$FanArtSortingMethod.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FanArtSortingMethod',
    interfaces: [Enum]
  };
  function FanArtsRoute$FanArtSortingMethod$values() {
    return [FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_getInstance(), FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_getInstance()];
  }
  FanArtsRoute$FanArtSortingMethod.values = FanArtsRoute$FanArtSortingMethod$values;
  function FanArtsRoute$FanArtSortingMethod$valueOf(name) {
    switch (name) {
      case 'OLD_TO_NEW':
        return FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_getInstance();
      case 'NEW_TO_OLD':
        return FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_getInstance();
      default:throwISE('No enum constant net.perfectdreams.spicymorenitta.routes.FanArtsRoute.FanArtSortingMethod.' + name);
    }
  }
  FanArtsRoute$FanArtSortingMethod.valueOf_61zpoe$ = FanArtsRoute$FanArtSortingMethod$valueOf;
  FanArtsRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FanArtsRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function get$lambda_2($receiver) {
    return Unit;
  }
  function AuditLogRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/guild/{guildid}/configure/audit-log');
    this.m = m;
  }
  Object.defineProperty(AuditLogRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function AuditLogRoute$onRender$lambda$lambda(closure$call) {
    return function ($receiver) {
      url($receiver, window.location.origin + '/api/v1/guild/' + toString(closure$call.parameters.get_11rb$('guildid')) + '/audit-log');
      return Unit;
    };
  }
  function AuditLogRoute$onRender$lambda$lambda_0(closure$call, this$AuditLogRoute) {
    return function () {
      this$AuditLogRoute.switchContent_hjvrm5$(closure$call);
      return Unit;
    };
  }
  function AuditLogRoute$onRender$lambda$lambda$lambda(closure$user, closure$entry, this$AuditLogRoute) {
    return function ($receiver) {
      this$AuditLogRoute.createAuditLogEntry_tac7u7$($receiver, closure$user, closure$entry);
      return Unit;
    };
  }
  function AuditLogRoute$onRender$lambda$lambda_1(closure$user, closure$entry, this$AuditLogRoute) {
    return function ($receiver) {
      div_0($receiver, void 0, AuditLogRoute$onRender$lambda$lambda$lambda(closure$user, closure$entry, this$AuditLogRoute));
      return Unit;
    };
  }
  function Coroutine$AuditLogRoute$onRender$lambda(closure$call_0, this$AuditLogRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$closure$call = closure$call_0;
    this.local$this$AuditLogRoute = this$AuditLogRoute_0;
    this.local$response = void 0;
  }
  Coroutine$AuditLogRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AuditLogRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AuditLogRoute$onRender$lambda.prototype.constructor = Coroutine$AuditLogRoute$onRender$lambda;
  Coroutine$AuditLogRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var $receiver_0 = http;
            var block = AuditLogRoute$onRender$lambda$lambda(this.local$closure$call);
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            block($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            var list = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(ServerConfig$WebAuditLogWrapper)), result);
            this.local$this$AuditLogRoute.fixDummyNavbarHeight_hjvrm5$(this.local$closure$call);
            this.local$this$AuditLogRoute.m.fixLeftSidebarScroll_o14v8n$(AuditLogRoute$onRender$lambda$lambda_0(this.local$closure$call, this.local$this$AuditLogRoute));
            var tmp$_0;
            var entriesDiv = (tmp$_0 = document.querySelector('#audit-log-entries')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            tmp$ = list.entries.iterator();
            loop_label: while (tmp$.hasNext()) {
              var entry = tmp$.next();
              var $receiver_2 = list.users;
              var first$result;
              first$break: do {
                var tmp$_1;
                tmp$_1 = $receiver_2.iterator();
                while (tmp$_1.hasNext()) {
                  var element = tmp$_1.next();
                  if (equals(element.id, entry.id.toString())) {
                    first$result = element;
                    break first$break;
                  }
                }
                throw new NoSuchElementException_init('Collection contains no element matching the predicate.');
              }
               while (false);
              var user = first$result;
              append(entriesDiv, AuditLogRoute$onRender$lambda$lambda_1(user, entry, this.local$this$AuditLogRoute));
            }

            return this.local$this$AuditLogRoute.m.hideLoadingScreen(), Unit;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AuditLogRoute$onRender$lambda(closure$call_0, this$AuditLogRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$AuditLogRoute$onRender$lambda(closure$call_0, this$AuditLogRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  AuditLogRoute.prototype.onRender_hjvrm5$ = function (call) {
    moment.locale('pt-br');
    this.m.showLoadingScreen_61zpoe$();
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(AuditLogRoute$onRender$lambda(call, this));
  };
  function AuditLogRoute$createAuditLogEntry$lambda$lambda(closure$selfMember) {
    return function ($receiver) {
      set_style($receiver, 'width: 6%; height: auto; border-radius: 999999px; float: left; position: relative; bottom: 8px;');
      $receiver.src = closure$selfMember.effectiveAvatarUrl;
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$selfMember) {
    return function ($receiver) {
      set_style($receiver, 'font-size: 0.8em; opacity: 0.6;');
      $receiver.unaryPlus_pdl1vz$('#' + closure$selfMember.discriminator);
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$type) {
    return function ($receiver) {
      var tmp$;
      switch (closure$type.name) {
        case 'UPDATE_YOUTUBE':
          tmp$ = 'YouTube';
          break;
        case 'UPDATE_TWITCH':
          tmp$ = 'Twitch';
          break;
        case 'UPDATE_MISCELLANEOUS':
          tmp$ = get_locale_0().get_25kzsl$('commands.category.misc.name', []);
          break;
        default:tmp$ = get_locale_0().get_25kzsl$('modules.sectionNames.' + closure$type.sectionName, []);
          break;
      }
      var sectionName = tmp$;
      $receiver.unaryPlus_pdl1vz$(sectionName);
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda(closure$selfMember, this$, closure$type) {
    return function (num) {
      if (num === 0) {
        this$.unaryPlus_pdl1vz$(closure$selfMember.name);
        span(this$, void 0, AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$selfMember));
      }
      if (num === 1) {
        span(this$, void 0, AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$type));
      }
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$str) {
    return function ($receiver) {
      set_style($receiver, 'opacity: 0.8;');
      $receiver.unaryPlus_pdl1vz$(closure$str);
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda_0(this$) {
    return function (str) {
      span(this$, void 0, AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(str));
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda(closure$updateString, closure$selfMember, closure$type) {
    return function ($receiver) {
      set_style($receiver, 'font-family: Lato,Helvetica Neue,Helvetica,Arial,sans-serif;');
      get_locale_0().buildAsHtml_yljpba$(closure$updateString, AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda(closure$selfMember, $receiver, closure$type), AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver));
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda_0(closure$entry) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(moment.unix(closure$entry.executedAt.div(Kotlin.Long.fromInt(1000))).calendar());
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda(closure$type, closure$selfMember, closure$entry) {
    return function ($receiver) {
      set_style($receiver, 'margin-left: 10px; margin-right: 10px;');
      var updateString = get_locale_0().get_25kzsl$('modules.auditLog.' + closure$type.updateType, []);
      div($receiver, 'amino-title entry-title', AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda(updateString, closure$selfMember, closure$type));
      div($receiver, 'amino-title toggleSubText', AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda$lambda_0(closure$entry));
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda(closure$type, closure$selfMember, closure$entry) {
    return function ($receiver) {
      div($receiver, void 0, AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda$lambda(closure$type, closure$selfMember, closure$entry));
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda$lambda_0(closure$type, closure$selfMember, closure$entry) {
    return function ($receiver) {
      div($receiver, 'pure-u-1 pure-u-md-18-24', AuditLogRoute$createAuditLogEntry$lambda$lambda$lambda(closure$type, closure$selfMember, closure$entry));
      return Unit;
    };
  }
  function AuditLogRoute$createAuditLogEntry$lambda(closure$selfMember, closure$type, closure$entry) {
    return function ($receiver) {
      img($receiver, void 0, void 0, 'amino-small-image', AuditLogRoute$createAuditLogEntry$lambda$lambda(closure$selfMember));
      div($receiver, 'pure-g', AuditLogRoute$createAuditLogEntry$lambda$lambda_0(closure$type, closure$selfMember, closure$entry));
      return Unit;
    };
  }
  AuditLogRoute.prototype.createAuditLogEntry_tac7u7$ = function ($receiver, selfMember, entry) {
    var type = ActionType$valueOf(entry.type);
    div($receiver, 'discord-generic-entry timer-entry', AuditLogRoute$createAuditLogEntry$lambda(selfMember, type, entry));
  };
  AuditLogRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AuditLogRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function BadgeRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/guild/{guildid}/configure/badge');
    this.m = m;
  }
  Object.defineProperty(BadgeRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function BadgeRoute$onRender$lambda$lambda(this$BadgeRoute) {
    return function (it) {
      this$BadgeRoute.prepareSave();
      return Unit;
    };
  }
  function BadgeRoute$onRender$lambda$lambda_0(closure$guild) {
    return function () {
      if (closure$guild.donationKey == null || 19.99 > closure$guild.donationKey.value) {
        Stuff_getInstance().showPremiumFeatureModal();
        return false;
      }
      return true;
    };
  }
  function Coroutine$BadgeRoute$onRender$lambda(closure$call_0, this$BadgeRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$call = closure$call_0;
    this.local$this$BadgeRoute = this$BadgeRoute_0;
  }
  Coroutine$BadgeRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$BadgeRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$BadgeRoute$onRender$lambda.prototype.constructor = Coroutine$BadgeRoute$onRender$lambda;
  Coroutine$BadgeRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = DashboardUtils_getInstance().retrieveGuildConfiguration_61zpoe$(ensureNotNull(this.local$closure$call.parameters.get_11rb$('guildid')), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var guild = this.result_0;
            DashboardUtils_getInstance().switchContentAndFixLeftSidebarScroll_dh735h$(this.local$this$BadgeRoute, this.local$closure$call);
            var tmp$_0;
            onClick((tmp$_0 = document.querySelector('#save-button')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE(), BadgeRoute$onRender$lambda$lambda(this.local$this$BadgeRoute));
            (Kotlin.isType(tmp$ = page.getElementById_61zpoe$('cmn-toggle-1'), HTMLInputElement) ? tmp$ : throwCCE()).checked = guild.donationConfig.customBadge;
            return LoriDashboard_getInstance().applyBlur_iiwsaa$('#hiddenIfDisabled', '#cmn-toggle-1', BadgeRoute$onRender$lambda$lambda_0(guild)), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function BadgeRoute$onRender$lambda(closure$call_0, this$BadgeRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$BadgeRoute$onRender$lambda(closure$call_0, this$BadgeRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  BadgeRoute.prototype.onRender_hjvrm5$ = function (call) {
    DashboardUtils_getInstance().launchWithLoadingScreenAndFixContent_wmzl2u$(this, call, BadgeRoute$onRender$lambda(call, this));
  };
  function BadgeRoute$prepareSave$lambda(closure$reader, this$BadgeRoute) {
    return function (it) {
      var tmp$, tmp$_0;
      var imageAsBase64 = closure$reader.result;
      tmp$_0 = typeof (tmp$ = imageAsBase64) === 'string' ? tmp$ : null;
      this$BadgeRoute.save_pdl1vj$(tmp$_0);
      return Unit;
    };
  }
  BadgeRoute.prototype.prepareSave = function () {
    var file = page.getElementById_61zpoe$('upload-badge').files[0];
    if (file != null) {
      var reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = BadgeRoute$prepareSave$lambda(reader, this);
    }
     else {
      this.save_pdl1vj$(null);
    }
  };
  function BadgeRoute$save$lambda(closure$base64Image) {
    return function (it) {
      var tmp$;
      it['customBadge'] = (Kotlin.isType(tmp$ = page.getElementById_61zpoe$('cmn-toggle-1'), HTMLInputElement) ? tmp$ : throwCCE()).checked;
      it['badgeImage'] = closure$base64Image;
      return Unit;
    };
  }
  BadgeRoute.prototype.save_pdl1vj$ = function (base64Image) {
    SaveUtils_getInstance().prepareSave_feck85$('badge', BadgeRoute$save$lambda(base64Image));
  };
  BadgeRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BadgeRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function DailyMultiplierRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/guild/{guildid}/configure/daily-multiplier');
    this.m = m;
  }
  Object.defineProperty(DailyMultiplierRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function DailyMultiplierRoute$onRender$lambda$lambda(this$DailyMultiplierRoute) {
    return function (it) {
      this$DailyMultiplierRoute.prepareSave();
      return Unit;
    };
  }
  function DailyMultiplierRoute$onRender$lambda$lambda_0(closure$guild) {
    return function () {
      if (closure$guild.donationKey == null || 59.99 > closure$guild.donationKey.value) {
        Stuff_getInstance().showPremiumFeatureModal();
        return false;
      }
      return true;
    };
  }
  function Coroutine$DailyMultiplierRoute$onRender$lambda(closure$call_0, this$DailyMultiplierRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$call = closure$call_0;
    this.local$this$DailyMultiplierRoute = this$DailyMultiplierRoute_0;
  }
  Coroutine$DailyMultiplierRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DailyMultiplierRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DailyMultiplierRoute$onRender$lambda.prototype.constructor = Coroutine$DailyMultiplierRoute$onRender$lambda;
  Coroutine$DailyMultiplierRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = DashboardUtils_getInstance().retrieveGuildConfiguration_61zpoe$(ensureNotNull(this.local$closure$call.parameters.get_11rb$('guildid')), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var guild = this.result_0;
            DashboardUtils_getInstance().switchContentAndFixLeftSidebarScroll_dh735h$(this.local$this$DailyMultiplierRoute, this.local$closure$call);
            var tmp$_0;
            onClick((tmp$_0 = document.querySelector('#save-button')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE(), DailyMultiplierRoute$onRender$lambda$lambda(this.local$this$DailyMultiplierRoute));
            (Kotlin.isType(tmp$ = page.getElementById_61zpoe$('cmn-toggle-1'), HTMLInputElement) ? tmp$ : throwCCE()).checked = guild.donationConfig.dailyMultiplier;
            return LoriDashboard_getInstance().applyBlur_iiwsaa$('#hiddenIfDisabled', '#cmn-toggle-1', DailyMultiplierRoute$onRender$lambda$lambda_0(guild)), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DailyMultiplierRoute$onRender$lambda(closure$call_0, this$DailyMultiplierRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$DailyMultiplierRoute$onRender$lambda(closure$call_0, this$DailyMultiplierRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  DailyMultiplierRoute.prototype.onRender_hjvrm5$ = function (call) {
    DashboardUtils_getInstance().launchWithLoadingScreenAndFixContent_wmzl2u$(this, call, DailyMultiplierRoute$onRender$lambda(call, this));
  };
  function DailyMultiplierRoute$prepareSave$lambda(it) {
    var tmp$;
    it['dailyMultiplier'] = (Kotlin.isType(tmp$ = page.getElementById_61zpoe$('cmn-toggle-1'), HTMLInputElement) ? tmp$ : throwCCE()).checked;
    return Unit;
  }
  DailyMultiplierRoute.prototype.prepareSave = function () {
    SaveUtils_getInstance().prepareSave_feck85$('daily_multiplier', DailyMultiplierRoute$prepareSave$lambda);
  };
  DailyMultiplierRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DailyMultiplierRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function GeneralConfigRoute(m) {
    GeneralConfigRoute$Companion_getInstance();
    UpdateNavbarSizePostRender.call(this, '/dashboard/configure/{guildid}');
    this.m = m;
    this.blacklistedChannels = ArrayList_init();
  }
  function GeneralConfigRoute$Companion() {
    GeneralConfigRoute$Companion_instance = this;
    this.LOCALE_PREFIX_0 = 'modules.levelUp';
  }
  GeneralConfigRoute$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var GeneralConfigRoute$Companion_instance = null;
  function GeneralConfigRoute$Companion_getInstance() {
    if (GeneralConfigRoute$Companion_instance === null) {
      new GeneralConfigRoute$Companion();
    }
    return GeneralConfigRoute$Companion_instance;
  }
  GeneralConfigRoute.prototype.onUnload = function () {
    this.blacklistedChannels.clear();
  };
  Object.defineProperty(GeneralConfigRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function GeneralConfigRoute$createFakeMessage$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'border-radius: 100%;');
    $receiver.width = '40';
    return Unit;
  }
  function GeneralConfigRoute$createFakeMessage$lambda$lambda(closure$avatarUrl) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; flex-direction: column; margin-right: 10px;');
      img($receiver, void 0, closure$avatarUrl, void 0, GeneralConfigRoute$createFakeMessage$lambda$lambda$lambda);
      return Unit;
    };
  }
  function GeneralConfigRoute$createFakeMessage$lambda$lambda$lambda_0(closure$name) {
    return function ($receiver) {
      set_style($receiver, 'font-weight: 600;');
      $receiver.unaryPlus_pdl1vz$(closure$name);
      return Unit;
    };
  }
  function GeneralConfigRoute$createFakeMessage$lambda$lambda$lambda_1(closure$content) {
    return function ($receiver) {
      closure$content($receiver);
      return Unit;
    };
  }
  function GeneralConfigRoute$createFakeMessage$lambda$lambda_0(closure$name, closure$content) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; flex-direction: column;');
      div($receiver, void 0, GeneralConfigRoute$createFakeMessage$lambda$lambda$lambda_0(closure$name));
      div($receiver, void 0, GeneralConfigRoute$createFakeMessage$lambda$lambda$lambda_1(closure$content));
      return Unit;
    };
  }
  function GeneralConfigRoute$createFakeMessage$lambda(closure$avatarUrl, closure$name, closure$content) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; align-items: center;');
      div($receiver, void 0, GeneralConfigRoute$createFakeMessage$lambda$lambda(closure$avatarUrl));
      div($receiver, void 0, GeneralConfigRoute$createFakeMessage$lambda$lambda_0(closure$name, closure$content));
      return Unit;
    };
  }
  GeneralConfigRoute.prototype.createFakeMessage_0 = function ($receiver, avatarUrl, name, content) {
    div($receiver, void 0, GeneralConfigRoute$createFakeMessage$lambda(avatarUrl, name, content));
  };
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'border-radius: 99999px; height: 100px;');
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda($receiver) {
    img($receiver, void 0, '/assets/img/lori_avatar_v3.png', void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('website.dashboard.general.commandPrefix.title', []));
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('website.dashboard.general.commandPrefix.subtext', []));
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda(it) {
    var tmp$;
    var tmp$_0;
    ((tmp$ = document.querySelector('#command-prefix-preview')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).innerText = ((tmp$_0 = document.querySelector('#command-prefix')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).value;
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$guild) {
    return function ($receiver) {
      set_id($receiver, 'command-prefix');
      $receiver.value = closure$guild.commandPrefix;
      set_onInputFunction($receiver, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$guild) {
    return function ($receiver) {
      set_id($receiver, 'command-prefix-preview');
      $receiver.unaryPlus_pdl1vz$(closure$guild.commandPrefix);
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('ping');
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$guild) {
    return function ($receiver) {
      span($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$guild));
      span($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    hr($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    $receiver.unaryPlus_pdl1vz$('\uD83C\uDFD3');
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(this$GeneralConfigRoute) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      $receiver.unaryPlus_pdl1vz$('@' + toString((tmp$_0 = (tmp$ = this$GeneralConfigRoute.m.userIdentification) != null ? tmp$.username : null) != null ? tmp$_0 : '???'));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(this$GeneralConfigRoute) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(' | ');
      span($receiver, 'discord-mention', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(this$GeneralConfigRoute));
      $receiver.unaryPlus_pdl1vz$(' Pong!');
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(this$GeneralConfigRoute) {
    return function ($receiver) {
      span($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2);
      b($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_3(this$GeneralConfigRoute));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3(this$GeneralConfigRoute, closure$guild) {
    return function ($receiver) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5;
      set_style($receiver, 'display: flex; flex-direction: column; justify-content: center; font-family: Lato,Helvetica Neue,Helvetica,Arial,sans-serif;');
      tmp$_1 = (tmp$_0 = (tmp$ = this$GeneralConfigRoute.m.userIdentification) != null ? tmp$.userAvatarUrl : null) != null ? tmp$_0 : '???';
      tmp$_4 = (tmp$_3 = (tmp$_2 = this$GeneralConfigRoute.m.userIdentification) != null ? tmp$_2.username : null) != null ? tmp$_3 : '???';
      tmp$_5 = GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$guild);
      this$GeneralConfigRoute.createFakeMessage_0($receiver, tmp$_1, tmp$_4, tmp$_5);
      div($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
      this$GeneralConfigRoute.createFakeMessage_0($receiver, '/assets/img/lori_avatar_v3.png', 'Loritta', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(this$GeneralConfigRoute));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_0(closure$guild, this$GeneralConfigRoute) {
    return function ($receiver) {
      div($receiver, 'flavourText', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0);
      div($receiver, 'toggleSubText', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1);
      input_0($receiver, InputType.text, void 0, void 0, void 0, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$guild));
      div($receiver, 'discord-message-helper', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3(this$GeneralConfigRoute, closure$guild));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda(closure$guild, this$GeneralConfigRoute) {
    return function ($receiver) {
      div($receiver, 'pure-u-1 pure-u-md-1-6', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda);
      div($receiver, 'pure-u-1 pure-u-md-2-3', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_0(closure$guild, this$GeneralConfigRoute));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda(closure$guild, this$GeneralConfigRoute) {
    return function ($receiver) {
      div($receiver, 'pure-g', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda(closure$guild, this$GeneralConfigRoute));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_3($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('website.dashboard.general.blacklistedChannels.title', []));
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_4($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('website.dashboard.general.blacklistedChannels.subtext', []));
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_1(closure$channel) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('#' + closure$channel.name);
      $receiver.value = closure$channel.id;
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_5(closure$guild) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      set_id($receiver, 'choose-channel-blacklisted');
      set_style($receiver, 'width: 320px;');
      tmp$ = closure$guild.textChannels;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var channel = tmp$[tmp$_0];
        option($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_1(channel));
      }
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_2(this$GeneralConfigRoute, closure$guild) {
    return function (it) {
      var tmp$;
      var role = ((tmp$ = document.querySelector('#choose-channel-blacklisted')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      this$GeneralConfigRoute.blacklistedChannels.add_11rb$(toLong(role));
      this$GeneralConfigRoute.updateBlacklistedChannelsList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_6(this$GeneralConfigRoute, closure$guild) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('loritta.add', []));
      set_onClickFunction($receiver, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_2(this$GeneralConfigRoute, closure$guild));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_7($receiver) {
    set_id($receiver, 'channel-blacklisted-list');
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_8($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_9(this$GeneralConfigRoute) {
    return function () {
      this$GeneralConfigRoute.updateDisabledSections();
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_10($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_3($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('website.dashboard.general.messageWhenUsingACommandInABlockedChannel.title', []));
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_4(closure$guild) {
    return function ($receiver) {
      var tmp$;
      set_id($receiver, 'blacklisted-warning');
      $receiver.unaryPlus_pdl1vz$((tmp$ = closure$guild.blacklistedWarning) != null ? tmp$ : '{@user} Voc\xEA n\xE3o pode usar comandos no {@channel}, bobinho(a)');
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_11(closure$guild) {
    return function ($receiver) {
      set_id($receiver, 'hidden-if-disabled-blacklist');
      div($receiver, 'flavourText', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_3);
      textArea($receiver, void 0, void 0, void 0, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_4(closure$guild));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_12($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_5(this$GeneralConfigRoute) {
    return function (it) {
      this$GeneralConfigRoute.prepareSave();
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_13(this$GeneralConfigRoute) {
    return function ($receiver) {
      set_style($receiver, 'float: right;');
      $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('loritta.save', []));
      set_onClickFunction($receiver, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda$lambda_5(this$GeneralConfigRoute));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda$lambda_0(closure$guild, this$GeneralConfigRoute) {
    return function ($receiver) {
      createToggle($receiver, get_locale_0().get_25kzsl$('website.dashboard.general.deleteMessagesAfterExecuting.title', []), get_locale_0().get_25kzsl$('website.dashboard.general.deleteMessagesAfterExecuting.subtext', []), 'delete-message-after-command', closure$guild.deleteMessageAfterCommand);
      hr($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_0);
      createToggle($receiver, get_locale_0().get_25kzsl$('website.dashboard.general.tellMissingPermissionOnAChannel.title', []), get_locale_0().get_25kzsl$('website.dashboard.general.tellMissingPermissionOnAChannel.subtext', []), 'warn-on-missing-permission', closure$guild.warnOnMissingPermission);
      hr($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_1);
      createToggle($receiver, get_locale_0().get_25kzsl$('website.dashboard.general.tellUserWhenUsingUnknownCommand.title', []), get_locale_0().get_25kzsl$('website.dashboard.general.tellUserWhenUsingUnknownCommand.subtext', []), 'warn-on-unknown-command', closure$guild.warnOnUnknownCommand);
      hr($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_2);
      div($receiver, 'flavourText', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_3);
      div($receiver, 'toggleSubText', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_4);
      select($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_5(closure$guild));
      $receiver.unaryPlus_pdl1vz$(' ');
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-info pure-button', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_6(this$GeneralConfigRoute, closure$guild));
      div($receiver, 'list-wrapper', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_7);
      hr($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_8);
      createToggle($receiver, get_locale_0().get_25kzsl$('website.dashboard.general.tellUserWhenUsingCommandsOnABlacklistedChannel.title', []), get_locale_0().get_25kzsl$('website.dashboard.general.tellUserWhenUsingCommandsOnABlacklistedChannel.subtext', []), 'warn-if-blacklisted', closure$guild.warnIfBlacklisted, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_9(this$GeneralConfigRoute));
      hr($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_10);
      div($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_11(closure$guild));
      hr($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_12);
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-success pure-button', GeneralConfigRoute$onRender$lambda$lambda$lambda$lambda_13(this$GeneralConfigRoute));
      return Unit;
    };
  }
  function GeneralConfigRoute$onRender$lambda$lambda(closure$guild, this$GeneralConfigRoute) {
    return function ($receiver) {
      div_0($receiver, 'userOptionsWrapper', GeneralConfigRoute$onRender$lambda$lambda$lambda(closure$guild, this$GeneralConfigRoute));
      div_0($receiver, void 0, GeneralConfigRoute$onRender$lambda$lambda$lambda_0(closure$guild, this$GeneralConfigRoute));
      return Unit;
    };
  }
  function Coroutine$GeneralConfigRoute$onRender$lambda(closure$call_0, this$GeneralConfigRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$call = closure$call_0;
    this.local$this$GeneralConfigRoute = this$GeneralConfigRoute_0;
  }
  Coroutine$GeneralConfigRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GeneralConfigRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GeneralConfigRoute$onRender$lambda.prototype.constructor = Coroutine$GeneralConfigRoute$onRender$lambda;
  Coroutine$GeneralConfigRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = DashboardUtils_getInstance().retrieveGuildConfiguration_61zpoe$(ensureNotNull(this.local$closure$call.parameters.get_11rb$('guildid')), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var guild = this.result_0;
            addAll_0(this.local$this$GeneralConfigRoute.blacklistedChannels, guild.blacklistedChannels);
            DashboardUtils_getInstance().switchContentAndFixLeftSidebarScroll_dh735h$(this.local$this$GeneralConfigRoute, this.local$closure$call);
            var tmp$;
            var stuff = (tmp$ = document.querySelector('#general-stuff')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
            append(stuff, GeneralConfigRoute$onRender$lambda$lambda(guild, this.local$this$GeneralConfigRoute));
            LoriDashboard_getInstance().configureTextArea_qx4uyf$(jq('#blacklisted-warning'), true, null, false, null, true, Placeholders_getInstance().DEFAULT_PLACEHOLDERS, false, void 0, emptyMap());
            this.local$this$GeneralConfigRoute.updateBlacklistedChannelsList_3kewv$(guild);
            return this.local$this$GeneralConfigRoute.updateDisabledSections(), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GeneralConfigRoute$onRender$lambda(closure$call_0, this$GeneralConfigRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$GeneralConfigRoute$onRender$lambda(closure$call_0, this$GeneralConfigRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  GeneralConfigRoute.prototype.onRender_hjvrm5$ = function (call) {
    DashboardUtils_getInstance().launchWithLoadingScreenAndFixContent_wmzl2u$(this, call, GeneralConfigRoute$onRender$lambda(call, this));
  };
  GeneralConfigRoute.prototype.updateDisabledSections = function () {
    var tmp$;
    var warnIfBlacklisted = ((tmp$ = document.querySelector('#warn-if-blacklisted')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).checked;
    if (warnIfBlacklisted) {
      var tmp$_0;
      removeClass((tmp$_0 = document.querySelector('#hidden-if-disabled-blacklist')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE(), ['blurSection']);
    }
     else {
      var tmp$_1;
      addClass((tmp$_1 = document.querySelector('#hidden-if-disabled-blacklist')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE(), ['blurSection']);
    }
  };
  function GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda$lambda(this$GeneralConfigRoute, closure$channelId, closure$guild) {
    return function (it) {
      this$GeneralConfigRoute.blacklistedChannels.remove_11rb$(closure$channelId);
      this$GeneralConfigRoute.updateBlacklistedChannelsList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    set_style($receiver, 'border-left: 1px solid rgba(0, 0, 0, 0.15);opacity: 0.7;padding-left: 3px;font-size: 14px;margin-left: 3px;padding-right: 3px;');
    i($receiver, 'fas fa-times', GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda(closure$guildChannel, this$GeneralConfigRoute, closure$channelId, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'cursor: pointer; margin-right: 4px;');
      $receiver.unaryPlus_pdl1vz$('#' + closure$guildChannel.name);
      set_onClickFunction($receiver, GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda$lambda(this$GeneralConfigRoute, closure$channelId, closure$guild));
      span($receiver, void 0, GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda$lambda_0);
      return Unit;
    };
  }
  function GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda(closure$guildChannel, this$GeneralConfigRoute, closure$channelId, closure$guild) {
    return function ($receiver) {
      span_0($receiver, 'discord-mention', GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda$lambda(closure$guildChannel, this$GeneralConfigRoute, closure$channelId, closure$guild));
      return Unit;
    };
  }
  function GeneralConfigRoute$updateBlacklistedChannelsList$lambda(this$GeneralConfigRoute, closure$guild, closure$list) {
    return function ($receiver) {
      var $receiver_0 = this$GeneralConfigRoute.blacklistedChannels;
      var tmp$;
      tmp$ = $receiver_0.iterator();
      loop_label: while (tmp$.hasNext()) {
        var element = tmp$.next();
        var closure$guild_0 = closure$guild;
        var closure$list_0 = closure$list;
        var this$GeneralConfigRoute_0 = this$GeneralConfigRoute;
        action$break: do {
          var tmp$_0;
          var $receiver_1 = closure$guild_0.textChannels;
          var firstOrNull$result;
          firstOrNull$break: do {
            var tmp$_1;
            for (tmp$_1 = 0; tmp$_1 !== $receiver_1.length; ++tmp$_1) {
              var element_0 = $receiver_1[tmp$_1];
              if (equals(toLong(element_0.id), element)) {
                firstOrNull$result = element_0;
                break firstOrNull$break;
              }
            }
            firstOrNull$result = null;
          }
           while (false);
          tmp$_0 = firstOrNull$result;
          if (tmp$_0 == null) {
            break action$break;
          }
          var guildChannel = tmp$_0;
          append(closure$list_0, GeneralConfigRoute$updateBlacklistedChannelsList$lambda$lambda$lambda(guildChannel, this$GeneralConfigRoute_0, element, closure$guild_0));
        }
         while (false);
      }
      return Unit;
    };
  }
  GeneralConfigRoute.prototype.updateBlacklistedChannelsList_3kewv$ = function (guild) {
    var tmp$;
    var list = (tmp$ = document.querySelector('#channel-blacklisted-list')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(list);
    append(list, GeneralConfigRoute$updateBlacklistedChannelsList$lambda(this, guild, list));
  };
  function GeneralConfigRoute$prepareSave$lambda(this$GeneralConfigRoute) {
    return function (it) {
      var tmp$;
      it['commandPrefix'] = ((tmp$ = document.querySelector('#command-prefix')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      var tmp$_0;
      it['deleteMessageAfterCommand'] = ((tmp$_0 = document.querySelector('#delete-message-after-command')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).checked;
      var tmp$_1;
      it['warnOnMissingPermission'] = ((tmp$_1 = document.querySelector('#warn-on-missing-permission')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()).checked;
      var tmp$_2;
      it['warnOnUnknownCommand'] = ((tmp$_2 = document.querySelector('#warn-on-unknown-command')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE()).checked;
      var $receiver = this$GeneralConfigRoute.blacklistedChannels;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
      var tmp$_3;
      tmp$_3 = $receiver.iterator();
      while (tmp$_3.hasNext()) {
        var item = tmp$_3.next();
        destination.add_11rb$(item.toString());
      }
      it['blacklistedChannels'] = destination;
      var tmp$_4;
      var warnIfBlacklisted = ((tmp$_4 = document.querySelector('#warn-if-blacklisted')) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE()).checked;
      it['warnIfBlacklisted'] = warnIfBlacklisted;
      if (warnIfBlacklisted) {
        var tmp$_5;
        it['blacklistedWarning'] = ((tmp$_5 = document.querySelector('#blacklisted-warning')) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE()).value;
      }
      return Unit;
    };
  }
  GeneralConfigRoute.prototype.prepareSave = function () {
    SaveUtils_getInstance().prepareSave_feck85$('default', GeneralConfigRoute$prepareSave$lambda(this));
  };
  GeneralConfigRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeneralConfigRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function get$lambda_3($receiver) {
    return Unit;
  }
  function GeneralDashboardRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/guild/{guildId}/dashboard');
    this.m = m;
  }
  Object.defineProperty(GeneralDashboardRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda(closure$senderAvatar) {
    return function ($receiver) {
      img($receiver, void 0, closure$senderAvatar, 'user-avatar', GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_0(closure$senderName) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$senderName);
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_1(closure$senderMessage) {
    return function ($receiver) {
      set_style($receiver, 'white-space: normal; max-width: 20em;');
      closure$senderMessage($receiver);
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda_0(closure$senderName, closure$senderMessage) {
    return function ($receiver) {
      div($receiver, 'user-name', GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_0(closure$senderName));
      div($receiver, void 0, GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_1(closure$senderMessage));
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda(closure$senderAvatar, closure$senderName, closure$senderMessage) {
    return function ($receiver) {
      div($receiver, void 0, GeneralDashboardRoute$createMessage$lambda$lambda$lambda(closure$senderAvatar));
      div($receiver, 'right-side', GeneralDashboardRoute$createMessage$lambda$lambda$lambda_0(closure$senderName, closure$senderMessage));
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda_0($receiver) {
    return Unit;
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda_1($receiver) {
    img($receiver, void 0, 'https://cdn.discordapp.com/avatars/297153970613387264/eb14362006ecdd6d5030a463e01935d3.png?size=2048', 'user-avatar', GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_2);
    return Unit;
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Bot');
    return Unit;
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_3($receiver) {
    $receiver.unaryPlus_pdl1vz$('Loritta Morenitta \uD83D\uDE18 ');
    span($receiver, 'bot-tag', GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_4(closure$loriResponse) {
    return function ($receiver) {
      closure$loriResponse($receiver);
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda$lambda_2(closure$loriResponse) {
    return function ($receiver) {
      div($receiver, 'user-name', GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_3);
      div($receiver, void 0, GeneralDashboardRoute$createMessage$lambda$lambda$lambda$lambda_4(closure$loriResponse));
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda$lambda_1(closure$loriResponse) {
    return function ($receiver) {
      div($receiver, void 0, GeneralDashboardRoute$createMessage$lambda$lambda$lambda_1);
      div($receiver, 'right-side', GeneralDashboardRoute$createMessage$lambda$lambda$lambda_2(closure$loriResponse));
      return Unit;
    };
  }
  function GeneralDashboardRoute$createMessage$lambda(closure$senderAvatar, closure$senderName, closure$senderMessage, closure$loriResponse) {
    return function ($receiver) {
      set_style($receiver, 'padding: 12px; border-radius: 7px; border: 1px solid #dcddde;');
      div($receiver, 'content', GeneralDashboardRoute$createMessage$lambda$lambda(closure$senderAvatar, closure$senderName, closure$senderMessage));
      hr($receiver, void 0, GeneralDashboardRoute$createMessage$lambda$lambda_0);
      div($receiver, 'content', GeneralDashboardRoute$createMessage$lambda$lambda_1(closure$loriResponse));
      return Unit;
    };
  }
  GeneralDashboardRoute.prototype.createMessage_9ycu1y$ = function ($receiver, senderName, senderAvatar, senderMessage, loriResponse) {
    div($receiver, 'discord-chat-box', GeneralDashboardRoute$createMessage$lambda(senderAvatar, senderName, senderMessage, loriResponse));
  };
  function GeneralDashboardRoute$onRender$lambda$lambda(closure$call) {
    return function ($receiver) {
      url($receiver, window.location.origin + '/api/v1/guilds/' + toString(closure$call.parameters.get_11rb$('guildId')) + '/config');
      return Unit;
    };
  }
  function GeneralDashboardRoute$onRender$lambda$lambda_0($receiver) {
    leftSidebarForGuildDashboard($receiver);
    return Unit;
  }
  function GeneralDashboardRoute$onRender$lambda$lambda_1(closure$call, closure$guildConfig, this$GeneralDashboardRoute) {
    return function ($receiver) {
      this$GeneralDashboardRoute.rightSidebar_dwvl1m$($receiver, closure$call, closure$guildConfig);
      return Unit;
    };
  }
  function Coroutine$GeneralDashboardRoute$onRender$lambda(closure$call_0, this$GeneralDashboardRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$closure$call = closure$call_0;
    this.local$this$GeneralDashboardRoute = this$GeneralDashboardRoute_0;
    this.local$response = void 0;
  }
  Coroutine$GeneralDashboardRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$GeneralDashboardRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$GeneralDashboardRoute$onRender$lambda.prototype.constructor = Coroutine$GeneralDashboardRoute$onRender$lambda;
  Coroutine$GeneralDashboardRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var block = GeneralDashboardRoute$onRender$lambda$lambda(this.local$closure$call);
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            block($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            var guildConfig = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(GuildConfig)), result);
            this.local$this$GeneralDashboardRoute.fixDummyNavbarHeight_hjvrm5$(this.local$closure$call);
            this.local$this$GeneralDashboardRoute.switchContent_hjvrm5$(this.local$closure$call);
            this.local$this$GeneralDashboardRoute.twoColumnLayout_cbu7sc$(GeneralDashboardRoute$onRender$lambda$lambda_0, GeneralDashboardRoute$onRender$lambda$lambda_1(this.local$closure$call, guildConfig, this.local$this$GeneralDashboardRoute));
            SpicyMorenitta$Companion_getInstance().INSTANCE.setUpLinkPreloader();
            return this.local$this$GeneralDashboardRoute.m.hideLoadingScreen(), Unit;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function GeneralDashboardRoute$onRender$lambda(closure$call_0, this$GeneralDashboardRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$GeneralDashboardRoute$onRender$lambda(closure$call_0, this$GeneralDashboardRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  GeneralDashboardRoute.prototype.onRender_hjvrm5$ = function (call) {
    this.m.showLoadingScreen_61zpoe$();
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(GeneralDashboardRoute$onRender$lambda(call, this));
  };
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'border-radius: 100%; align-self: baseline;');
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda($receiver) {
    img($receiver, void 0, 'https://cdn.discordapp.com/avatars/297153970613387264/eb14362006ecdd6d5030a463e01935d3.png', void 0, GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda);
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Prefixo');
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Prefixo \xE9 o texto que vem antes de um comando. Eu venho como padr\xE3o com o caractere +, mas voc\xEA pode alter\xE1-lo nesta op\xE7\xE3o.');
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda$lambda(it) {
    var tmp$;
    var cmdPrefixInputElement = (tmp$ = document.querySelector('.lori-section .right .command-prefix')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var tmp$_0;
    var prefixElement = (tmp$_0 = document.querySelector('.lori-section .right .prefix')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    prefixElement.innerText = cmdPrefixInputElement.value;
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_2(closure$generalConfig) {
    return function ($receiver) {
      $receiver.value = closure$generalConfig.commandPrefix;
      set_onInputFunction($receiver, GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_0(it) {
    hideUnsavedAlert();
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_3($receiver) {
    $receiver.unaryPlus_pdl1vz$('Reset');
    set_onClickFunction($receiver, GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_1(closure$generalConfig) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$generalConfig.commandPrefix);
      return Unit;
    };
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_4(closure$generalConfig) {
    return function ($receiver) {
      span($receiver, 'prefix', GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda$lambda_1(closure$generalConfig));
      $receiver.unaryPlus_pdl1vz$('ping');
      return Unit;
    };
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_5($receiver) {
    $receiver.unaryPlus_pdl1vz$('Pong!');
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda_0(closure$generalConfig, this$GeneralDashboardRoute) {
    return function ($receiver) {
      div($receiver, 'section-title', GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_0);
      div($receiver, void 0, GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_1);
      input_0($receiver, InputType.text, void 0, void 0, void 0, 'command-prefix', GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_2(closure$generalConfig));
      button($receiver, void 0, void 0, void 0, void 0, void 0, GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_3);
      this$GeneralDashboardRoute.createMessage_9ycu1y$($receiver, ensureNotNull(SpicyMorenitta$Companion_getInstance().INSTANCE.userIdentification).username, 'https://cdn.discordapp.com/emojis/523176710439567392.png?v=1', GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_4(closure$generalConfig), GeneralDashboardRoute$rightSidebar$lambda$lambda$lambda_5);
      return Unit;
    };
  }
  function GeneralDashboardRoute$rightSidebar$lambda(closure$generalConfig, this$GeneralDashboardRoute) {
    return function ($receiver) {
      div($receiver, 'left', GeneralDashboardRoute$rightSidebar$lambda$lambda);
      div($receiver, 'right as-column', GeneralDashboardRoute$rightSidebar$lambda$lambda_0(closure$generalConfig, this$GeneralDashboardRoute));
      return Unit;
    };
  }
  function GeneralDashboardRoute$rightSidebar$lambda_0($receiver) {
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda_1($receiver) {
    return Unit;
  }
  function GeneralDashboardRoute$rightSidebar$lambda_2(closure$generalConfig) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$generalConfig.commandPrefix);
      return Unit;
    };
  }
  function GeneralDashboardRoute$rightSidebar$lambda$lambda$ObjectLiteral() {
  }
  GeneralDashboardRoute$rightSidebar$lambda$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function GeneralDashboardRoute$rightSidebar$lambda$lambda_1(closure$call) {
    return function (it) {
      var testPrefix = window.prompt('Prefix', '..');
      var obj = new GeneralDashboardRoute$rightSidebar$lambda$lambda$ObjectLiteral();
      obj.commandPrefix = testPrefix;
      WebsiteUtils_getInstance().patchGuildConfigById_3m4wor$(ensureNotNull(getValue(closure$call.parameters, 'guildId')), 10000, obj);
      return Unit;
    };
  }
  function GeneralDashboardRoute$rightSidebar$lambda_3(closure$call) {
    return function ($receiver) {
      set_id($receiver, 'button-wow');
      $receiver.unaryPlus_pdl1vz$('Test Update Guild');
      set_onClickFunction($receiver, GeneralDashboardRoute$rightSidebar$lambda$lambda_1(closure$call));
      return Unit;
    };
  }
  GeneralDashboardRoute.prototype.rightSidebar_dwvl1m$ = function ($receiver, call, guildConfig) {
    var generalConfig = ensureNotNull(guildConfig.general);
    div($receiver, 'lori-section', GeneralDashboardRoute$rightSidebar$lambda(generalConfig, this));
    hr($receiver, void 0, GeneralDashboardRoute$rightSidebar$lambda_0);
    createToggle($receiver, 'Mencionar quem executou o comando.', 'Caso o comando n\xE3o tenha argumentos obrigat\xF3rios, voc\xEA pode usar \uD83E\uDD37 como primeiro argumento para obter a ajuda do comando.', 'commandStuff', true);
    hr($receiver, void 0, GeneralDashboardRoute$rightSidebar$lambda_1);
    createToggle($receiver, 'Explicar comandos ao executar eles sem usar nenhum argumento.', 'Caso o comando n\xE3o tenha argumentos obrigat\xF3rios, voc\xEA pode usar \uD83E\uDD37 como primeiro argumento para obter a ajuda do comando.', 'commandStuff', true);
    div($receiver, void 0, GeneralDashboardRoute$rightSidebar$lambda_2(generalConfig));
    button($receiver, void 0, void 0, void 0, void 0, void 0, GeneralDashboardRoute$rightSidebar$lambda_3(call));
  };
  GeneralDashboardRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeneralDashboardRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function GuildDashboard() {
    GuildDashboard_instance = this;
    this.isModified = false;
  }
  GuildDashboard.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'GuildDashboard',
    interfaces: []
  };
  var GuildDashboard_instance = null;
  function GuildDashboard_getInstance() {
    if (GuildDashboard_instance === null) {
      new GuildDashboard();
    }
    return GuildDashboard_instance;
  }
  function createToggle$lambda$lambda$lambda(closure$title) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$title);
      return Unit;
    };
  }
  function createToggle$lambda$lambda$lambda_0(closure$subText) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$subText);
      return Unit;
    };
  }
  function createToggle$lambda$lambda(closure$title, closure$subText) {
    return function ($receiver) {
      div($receiver, void 0, createToggle$lambda$lambda$lambda(closure$title));
      if (closure$subText != null) {
        div($receiver, 'sub-text', createToggle$lambda$lambda$lambda_0(closure$subText));
      }
      return Unit;
    };
  }
  function createToggle$lambda$lambda$lambda$lambda(closure$onChange) {
    return function (it) {
      closure$onChange != null ? closure$onChange() : null;
      return Unit;
    };
  }
  function createToggle$lambda$lambda$lambda_1(closure$id, closure$isChecked, closure$onChange) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var value = closure$id != null ? closure$id : 'checkbox';
      $receiver_0.put_xwzc9p$('id', value);
      if (closure$isChecked) {
        $receiver.attributes.put_xwzc9p$('checked', 'true');
      }
      set_onChangeFunction($receiver, createToggle$lambda$lambda$lambda$lambda(closure$onChange));
      return Unit;
    };
  }
  function createToggle$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function createToggle$lambda$lambda_0(closure$id, closure$isChecked, closure$onChange) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var value = closure$id != null ? closure$id : 'checkbox';
      $receiver_0.put_xwzc9p$('for', value);
      input_0($receiver, InputType.checkBox, void 0, void 0, void 0, void 0, createToggle$lambda$lambda$lambda_1(closure$id, closure$isChecked, closure$onChange));
      div($receiver, 'slider round', createToggle$lambda$lambda$lambda_2);
      return Unit;
    };
  }
  function createToggle$lambda(closure$title, closure$subText, closure$id, closure$isChecked, closure$onChange) {
    return function ($receiver) {
      div($receiver, 'information', createToggle$lambda$lambda(closure$title, closure$subText));
      label($receiver, 'switch', createToggle$lambda$lambda_0(closure$id, closure$isChecked, closure$onChange));
      return Unit;
    };
  }
  function createToggle($receiver, title, subText, id, isChecked, onChange) {
    if (subText === void 0)
      subText = null;
    if (id === void 0)
      id = null;
    if (isChecked === void 0)
      isChecked = false;
    if (onChange === void 0)
      onChange = null;
    div($receiver, 'toggleable-wrapper', createToggle$lambda(title, subText, id, isChecked, onChange));
  }
  function displayUnsavedAlert() {
    if (GuildDashboard_getInstance().isModified)
      return;
    var tmp$;
    var unsavedAlert = (tmp$ = document.querySelector('#not-saved-alert')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    removeClass(unsavedAlert, ['reversed', 'invisible']);
    resetAnimation(unsavedAlert);
  }
  function hideUnsavedAlert() {
    if (!GuildDashboard_getInstance().isModified)
      return;
    var tmp$;
    var unsavedAlert = (tmp$ = document.querySelector('#not-saved-alert')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    removeClass(unsavedAlert, ['invisible']);
    addClass(unsavedAlert, ['reversed']);
    resetAnimation(unsavedAlert);
  }
  function Coroutine$resetAnimation$lambda(closure$element_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$element = closure$element_0;
  }
  Coroutine$resetAnimation$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$resetAnimation$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$resetAnimation$lambda.prototype.constructor = Coroutine$resetAnimation$lambda;
  Coroutine$resetAnimation$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delay(L5, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.local$closure$element.style.display = 'block', Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function resetAnimation$lambda(closure$element_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$resetAnimation$lambda(closure$element_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function resetAnimation(element) {
    element.style.display = 'none';
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(resetAnimation$lambda(element));
  }
  function Coroutine$leftSidebarForGuildDashboard$lambda$lambda($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$content = void 0;
    this.local$body = void 0;
    this.local$unsavedAlert = void 0;
  }
  Coroutine$leftSidebarForGuildDashboard$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$leftSidebarForGuildDashboard$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$leftSidebarForGuildDashboard$lambda$lambda.prototype.constructor = Coroutine$leftSidebarForGuildDashboard$lambda$lambda;
  Coroutine$leftSidebarForGuildDashboard$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.local$content = (tmp$ = document.querySelector('#content')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
            var tmp$_0;
            this.local$body = (tmp$_0 = document.querySelector('body')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            var tmp$_1;
            this.local$unsavedAlert = (tmp$_1 = document.querySelector('#not-saved-alert')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
            if (hasClass(this.local$unsavedAlert, 'warning')) {
              return;
            }
             else {
              this.state_0 = 2;
              continue;
            }

          case 1:
            throw this.exception_0;
          case 2:
            addClass(this.local$unsavedAlert, ['warning']);
            addClass(this.local$content, ['shake']);
            this.local$body.style.overflow = 'hidden';
            this.state_0 = 3;
            this.result_0 = delay(L750, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            removeClass(this.local$unsavedAlert, ['warning']);
            removeClass(this.local$content, ['shake']);
            return this.local$body.style.overflow = '', Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function leftSidebarForGuildDashboard$lambda$lambda($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$leftSidebarForGuildDashboard$lambda$lambda($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function leftSidebarForGuildDashboard$lambda(it) {
    if (GuildDashboard_getInstance().isModified) {
      SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(leftSidebarForGuildDashboard$lambda$lambda);
    }
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_0($receiver) {
    $receiver.width = '128';
    $receiver.height = '128';
    set_style($receiver, 'border-radius: 100%;');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_1($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_0($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_2(closure$function) {
    return function ($receiver) {
      i($receiver, 'fas fa-cog', leftSidebarForGuildDashboard$lambda$lambda_0);
      $receiver.unaryPlus_pdl1vz$(' Configura\xE7\xF5es gerais');
      set_onClickFunction($receiver, closure$function);
      return Unit;
    };
  }
  function leftSidebarForGuildDashboard$lambda$lambda_1($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_3(closure$function) {
    return function ($receiver) {
      i($receiver, 'fas fa-user-shield', leftSidebarForGuildDashboard$lambda$lambda_1);
      $receiver.unaryPlus_pdl1vz$(' Modera\xE7\xE3o');
      set_onClickFunction($receiver, closure$function);
      return Unit;
    };
  }
  function leftSidebarForGuildDashboard$lambda$lambda_2($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_4(closure$function) {
    return function ($receiver) {
      i($receiver, 'fas fa-terminal', leftSidebarForGuildDashboard$lambda$lambda_2);
      $receiver.unaryPlus_pdl1vz$(' Comandos');
      set_onClickFunction($receiver, closure$function);
      return Unit;
    };
  }
  function leftSidebarForGuildDashboard$lambda$lambda_3($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_5(closure$function) {
    return function ($receiver) {
      i($receiver, 'fas fa-address-card', leftSidebarForGuildDashboard$lambda$lambda_3);
      $receiver.unaryPlus_pdl1vz$(' Permiss\xF5es');
      set_onClickFunction($receiver, closure$function);
      return Unit;
    };
  }
  function leftSidebarForGuildDashboard$lambda_6($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_7($receiver) {
    $receiver.unaryPlus_pdl1vz$('Notifica\xE7\xF5es');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_4($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_8($receiver) {
    i($receiver, 'fas fa-sign-in-alt', leftSidebarForGuildDashboard$lambda$lambda_4);
    $receiver.unaryPlus_pdl1vz$(' Mensagens de Entrada/Sa\xEDda');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_5($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_9($receiver) {
    i($receiver, 'fas fa-eye', leftSidebarForGuildDashboard$lambda$lambda_5);
    $receiver.unaryPlus_pdl1vz$(' Event Log');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_10($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_11($receiver) {
    $receiver.unaryPlus_pdl1vz$('Miscel\xE2nea');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_6($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_12($receiver) {
    i($receiver, 'fas fa-briefcase', leftSidebarForGuildDashboard$lambda$lambda_6);
    $receiver.unaryPlus_pdl1vz$(' Autorole');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_7($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_13($receiver) {
    i($receiver, 'fas fa-ban', leftSidebarForGuildDashboard$lambda$lambda_7);
    $receiver.unaryPlus_pdl1vz$(' Bloqueador de Convites');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_8($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_14($receiver) {
    i($receiver, 'fas fa-music', leftSidebarForGuildDashboard$lambda$lambda_8);
    $receiver.unaryPlus_pdl1vz$(' DJ Loritta');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_9($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_15($receiver) {
    i($receiver, 'fas fa-star', leftSidebarForGuildDashboard$lambda$lambda_9);
    $receiver.unaryPlus_pdl1vz$(' Starboard');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_10($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_16($receiver) {
    i($receiver, 'fas fa-shuffle', leftSidebarForGuildDashboard$lambda$lambda_10);
    $receiver.unaryPlus_pdl1vz$(' Miscel\xE2nea');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_17($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_18($receiver) {
    $receiver.unaryPlus_pdl1vz$('Premium');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_11($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_19($receiver) {
    i($receiver, 'fas fa-gift', leftSidebarForGuildDashboard$lambda$lambda_11);
    $receiver.unaryPlus_pdl1vz$(' Premium Keys');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_12($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_20($receiver) {
    i($receiver, 'fas fa-certificate', leftSidebarForGuildDashboard$lambda$lambda_12);
    $receiver.unaryPlus_pdl1vz$(' Emblema Personalizado');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_13($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_21($receiver) {
    i($receiver, 'fas fa-times', leftSidebarForGuildDashboard$lambda$lambda_13);
    $receiver.unaryPlus_pdl1vz$(' Multiplicador de Sonhos');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_22($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_23($receiver) {
    $receiver.unaryPlus_pdl1vz$('Precisando de Ajuda?');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda$lambda_14($receiver) {
    var $receiver_0 = $receiver.attributes;
    var key = 'data-enable-link-preload';
    $receiver_0.put_xwzc9p$(key, 'true');
    i($receiver, 'fas fa-question-circle', leftSidebarForGuildDashboard$lambda$lambda$lambda);
    $receiver.unaryPlus_pdl1vz$(' Suporte');
    return Unit;
  }
  function leftSidebarForGuildDashboard$lambda_24($receiver) {
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda$lambda_14);
    return Unit;
  }
  function leftSidebarForGuildDashboard($receiver) {
    var function_0 = leftSidebarForGuildDashboard$lambda;
    img($receiver, void 0, 'https://cdn.discordapp.com/icons/297732013006389252/75327a9cf9ad3a2fc76945d06dc897aa.png', void 0, leftSidebarForGuildDashboard$lambda_0);
    hr($receiver, void 0, leftSidebarForGuildDashboard$lambda_1);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_2(function_0));
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_3(function_0));
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_4(function_0));
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_5(function_0));
    hr($receiver, void 0, leftSidebarForGuildDashboard$lambda_6);
    div($receiver, 'section-title', leftSidebarForGuildDashboard$lambda_7);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_8);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_9);
    hr($receiver, void 0, leftSidebarForGuildDashboard$lambda_10);
    div($receiver, 'section-title', leftSidebarForGuildDashboard$lambda_11);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_12);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_13);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_14);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_15);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_16);
    hr($receiver, void 0, leftSidebarForGuildDashboard$lambda_17);
    div($receiver, 'section-title', leftSidebarForGuildDashboard$lambda_18);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_19);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_20);
    div($receiver, 'entry', leftSidebarForGuildDashboard$lambda_21);
    hr($receiver, void 0, leftSidebarForGuildDashboard$lambda_22);
    div($receiver, 'section-title', leftSidebarForGuildDashboard$lambda_23);
    a($receiver, WebsiteUtils_getInstance().getUrlWithLocale() + '/support', void 0, void 0, leftSidebarForGuildDashboard$lambda_24);
  }
  function IFrameGeneralDashboardRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/guild/{guildId}/dashboard');
    this.m = m;
  }
  IFrameGeneralDashboardRoute.prototype.onRender_hjvrm5$ = function (call) {
    var tmp$;
    var iframe = (tmp$ = document.querySelector('iframe')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var newDocument = ensureNotNull(iframe.contentDocument);
  };
  IFrameGeneralDashboardRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'IFrameGeneralDashboardRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function Comparator$ObjectLiteral_3(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_3.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_3.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareByDescending$lambda_0 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(b), selector(a));
      };
    };
  });
  function LevelUpRoute(m) {
    LevelUpRoute$Companion_getInstance();
    UpdateNavbarSizePostRender.call(this, '/guild/{guildid}/configure/level');
    this.m = m;
    this.rolesByExperience = ArrayList_init();
    this.experienceRoleRates = ArrayList_init();
    this.noXpRoles = ArrayList_init();
    this.noXpChannels = ArrayList_init();
  }
  function LevelUpRoute$Companion() {
    LevelUpRoute$Companion_instance = this;
    this.LOCALE_PREFIX_0 = 'modules.levelUp';
  }
  LevelUpRoute$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var LevelUpRoute$Companion_instance = null;
  function LevelUpRoute$Companion_getInstance() {
    if (LevelUpRoute$Companion_instance === null) {
      new LevelUpRoute$Companion();
    }
    return LevelUpRoute$Companion_instance;
  }
  LevelUpRoute.prototype.onUnload = function () {
    this.rolesByExperience.clear();
    this.experienceRoleRates.clear();
    this.noXpRoles.clear();
    this.noXpChannels.clear();
  };
  Object.defineProperty(LevelUpRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function LevelUpRoute$onRender$lambda$lambda(this$LevelUpRoute) {
    return function (it) {
      this$LevelUpRoute.prepareSave();
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.roleGiveType.title', []));
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_0(closure$guild) {
    return function ($receiver) {
      h5($receiver, 'section-title', LevelUpRoute$onRender$lambda$lambda$lambda$lambda);
      createRadioButton($receiver, 'role-level-up-style', get_locale_0().get_25kzsl$('modules.levelUp.roleGiveType.types.stack.title', []), get_locale_0().get_25kzsl$('modules.levelUp.roleGiveType.types.stack.description', []), 'STACK', equals(closure$guild.levelUpConfig.roleGiveType, 'STACK'));
      createRadioButton($receiver, 'role-level-up-style', get_locale_0().get_25kzsl$('modules.levelUp.roleGiveType.types.remove.title', []), get_locale_0().get_25kzsl$('modules.levelUp.roleGiveType.types.remove.description', []), 'REMOVE', equals(closure$guild.levelUpConfig.roleGiveType, 'REMOVE'));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.roleByXpLevel.title', []));
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute) {
    return function (it) {
      var tmp$;
      var tmp$_0;
      ((tmp$ = document.querySelector('#give-role-level-calc')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).innerText = toLong(this$LevelUpRoute.valueOrPlaceholderIfEmpty_0((tmp$_0 = document.querySelector('.add-role .required-xp')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE(), '1000')).div(Kotlin.Long.fromInt(1000)).toString();
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute) {
    return function ($receiver) {
      $receiver.placeholder = '1000';
      $receiver.min = '0';
      $receiver.max = '10000000';
      $receiver.step = '1000';
      set_onChangeFunction($receiver, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    set_id($receiver, 'give-role-level-calc');
    $receiver.unaryPlus_pdl1vz$('0');
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    set_id($receiver, 'choose-role');
    set_style($receiver, 'width: 320px;');
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_0(this$LevelUpRoute, this$) {
    return function (num) {
      if (num === 0) {
        input_0(this$, InputType.number, void 0, void 0, void 0, 'required-xp', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute));
      }
      if (num === 1) {
        span(this$, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0);
      }
      if (num === 2) {
        select(this$, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1);
      }
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_1(this$) {
    return function (str) {
      this$.unaryPlus_pdl1vz$(str);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2(this$LevelUpRoute, closure$guild) {
    return function (it) {
      if (this$LevelUpRoute.rolesByExperience.size >= 15) {
        Stuff_getInstance().showPremiumFeatureModal();
      }
       else {
        var tmp$;
        var tmp$_0;
        this$LevelUpRoute.addRoleToRoleByExperienceList_bprwuk$(closure$guild, new ServerConfig$RoleByExperience(this$LevelUpRoute.valueOrPlaceholderIfEmpty_0((tmp$ = document.querySelector('.add-role .required-xp')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE(), '1000'), listOf(((tmp$_0 = document.querySelector('#choose-role')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).value)));
      }
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_2(this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('loritta.add', []));
      set_onClickFunction($receiver, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2(this$LevelUpRoute, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_1(this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      get_locale_0().buildAsHtml_yljpba$(get_locale_0().get_25kzsl$('modules.levelUp.roleByXpLevel.whenUserGetsToXp', []), LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_0(this$LevelUpRoute, $receiver), LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_1($receiver));
      $receiver.unaryPlus_pdl1vz$(' ');
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-info pure-button', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_2(this$LevelUpRoute, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_2(this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      h5($receiver, 'section-title', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_0);
      var tmp$;
      tmp$ = get_locale_0().getList_61zpoe$('modules.levelUp.roleByXpLevel.description').iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        p($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda(element));
      }
      div($receiver, 'add-role', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_1(this$LevelUpRoute, closure$guild));
      div($receiver, 'roles-by-xp-list list-wrapper', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_2);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_3($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_3($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.customRoleRate.title', []));
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_3(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3($receiver) {
    set_id($receiver, 'choose-role-custom-rate');
    set_style($receiver, 'width: 320px;');
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_4($receiver) {
    $receiver.placeholder = '1.0';
    $receiver.min = '0';
    $receiver.max = '10';
    $receiver.step = '0.05';
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_4(this$) {
    return function (num) {
      if (num === 0) {
        select(this$, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3);
      }
      if (num === 1) {
        input_0(this$, InputType.number, void 0, void 0, void 0, 'xp-rate', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_4);
      }
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_5(this$) {
    return function (str) {
      this$.unaryPlus_pdl1vz$(str);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$guild, this$LevelUpRoute) {
    return function (it) {
      var tmp$;
      var tmp$_0;
      this$LevelUpRoute.addRoleToRolesWithCustomRateList_ozpdz1$(closure$guild, new ServerConfig$ExperienceRoleRate(toLong(((tmp$ = document.querySelector('#choose-role-custom-rate')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value), toDouble(this$LevelUpRoute.valueOrPlaceholderIfEmpty_0((tmp$_0 = document.querySelector('.add-custom-rate-role .xp-rate')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE(), '1.0'))));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_6(closure$guild, this$LevelUpRoute) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('loritta.add', []));
      set_onClickFunction($receiver, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$guild, this$LevelUpRoute));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_4(closure$guild, this$LevelUpRoute) {
    return function ($receiver) {
      get_locale_0().buildAsHtml_yljpba$(get_locale_0().get_25kzsl$('modules.levelUp.customRoleRate.whenUserHasRoleRate', []), LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_4($receiver), LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_5($receiver));
      $receiver.unaryPlus_pdl1vz$(' ');
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-info pure-button', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_6(closure$guild, this$LevelUpRoute));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_5($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_4(closure$guild, this$LevelUpRoute) {
    return function ($receiver) {
      h5($receiver, 'section-title', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_3);
      var tmp$;
      tmp$ = get_locale_0().getList_61zpoe$('modules.levelUp.customRoleRate.description').iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        p($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_3(element));
      }
      div($receiver, 'add-custom-rate-role', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_4(closure$guild, this$LevelUpRoute));
      div($receiver, 'roles-with-custom-rate-list list-wrapper', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_5);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_5($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_6($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.noXpRoles.title', []));
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_7(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_7($receiver) {
    set_id($receiver, 'choose-role-no-xp');
    set_style($receiver, 'width: 320px;');
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_8(this$LevelUpRoute, closure$guild) {
    return function (it) {
      var tmp$;
      var role = ((tmp$ = document.querySelector('#choose-role-no-xp')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      this$LevelUpRoute.noXpRoles.add_11rb$(toLong(role));
      this$LevelUpRoute.updateNoXpRoleList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_8(this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('loritta.add', []));
      set_onClickFunction($receiver, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_8(this$LevelUpRoute, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_9($receiver) {
    set_id($receiver, 'choose-role-no-xp-list');
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_6(this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      h5($receiver, 'section-title', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_6);
      var tmp$;
      tmp$ = get_locale_0().getList_61zpoe$('modules.levelUp.noXpRoles.description').iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        p($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_7(element));
      }
      select($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda_7);
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-info pure-button', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_8(this$LevelUpRoute, closure$guild));
      div($receiver, 'list-wrapper', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_9);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_7($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_10($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.noXpChannels.title', []));
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_9(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_10(closure$channel) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('#' + closure$channel.name);
      $receiver.value = closure$channel.id;
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_11(closure$guild) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      set_id($receiver, 'choose-channel-no-xp');
      set_style($receiver, 'width: 320px;');
      tmp$ = closure$guild.textChannels;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var channel = tmp$[tmp$_0];
        option($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_10(channel));
      }
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_11(this$LevelUpRoute, closure$guild) {
    return function (it) {
      var tmp$;
      var role = ((tmp$ = document.querySelector('#choose-channel-no-xp')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      this$LevelUpRoute.noXpChannels.add_11rb$(toLong(role));
      this$LevelUpRoute.updateNoXpChannelsList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_12(this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('loritta.add', []));
      set_onClickFunction($receiver, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_11(this$LevelUpRoute, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_13($receiver) {
    set_id($receiver, 'choose-channel-no-xp-list');
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_14($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_12($receiver) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(it) {
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_6(closure$modal) {
    return function () {
      closure$modal.close();
      SaveUtils_getInstance().prepareSave_feck85$('reset_xp', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_7(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.resetXp.areYouSure', []));
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.width = '250';
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    set_style($receiver, 'text-align: center;');
    img($receiver, void 0, 'https://loritta.website/assets/img/fanarts/l6.png', void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    var tmp$;
    tmp$ = get_locale_0().getList_61zpoe$('modules.levelUp.resetXp.description').iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      p($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(element));
    }
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_8($receiver) {
    div($receiver, 'category-name', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
    div($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2);
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_13(it) {
    var modal = new TingleModal(new TingleOptions(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
    modal.addFooterBtn('<i class=' + '"' + 'fas fa-redo' + '"' + '><\/i> ' + get_locale_0().get_25kzsl$('modules.levelUp.resetXp.clearAll', []), 'button-discord button-discord-attention pure-button button-discord-modal', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_6(modal));
    modal.addFooterBtn('<i class=' + '"' + 'fas fa-times' + '"' + '><\/i> ' + get_locale_0().get_25kzsl$('modules.levelUp.resetXp.cancel', []), 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_7(modal));
    modal.setContent(div_0(createHTML(), void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_8));
    modal.open();
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda$lambda_15($receiver) {
    i($receiver, 'fas fa-redo', LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_12);
    $receiver.unaryPlus_pdl1vz$(' ' + get_locale_0().get_25kzsl$('modules.levelUp.resetXp.title', []));
    set_onClickFunction($receiver, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_13);
    return Unit;
  }
  function LevelUpRoute$onRender$lambda$lambda$lambda_8(closure$guild, this$LevelUpRoute) {
    return function ($receiver) {
      h5($receiver, 'section-title', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_10);
      var tmp$;
      tmp$ = get_locale_0().getList_61zpoe$('modules.levelUp.noXpChannels.description').iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        p($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda$lambda_9(element));
      }
      select($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda_11(closure$guild));
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-info pure-button', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_12(this$LevelUpRoute, closure$guild));
      div($receiver, 'list-wrapper', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_13);
      hr($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda$lambda_14);
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-attention pure-button', LevelUpRoute$onRender$lambda$lambda$lambda$lambda_15);
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$lambda_0(closure$guild, this$LevelUpRoute) {
    return function ($receiver) {
      this$LevelUpRoute.generateLevelUpAnnouncementSection_0($receiver, closure$guild);
      hr_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda);
      div_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_0(closure$guild));
      hr_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_1);
      div_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_2(this$LevelUpRoute, closure$guild));
      hr_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_3);
      div_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_4(closure$guild, this$LevelUpRoute));
      hr_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_5);
      div_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_6(this$LevelUpRoute, closure$guild));
      hr_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_7);
      div_0($receiver, void 0, LevelUpRoute$onRender$lambda$lambda$lambda_8(closure$guild, this$LevelUpRoute));
      return Unit;
    };
  }
  function LevelUpRoute$onRender$lambda$ObjectLiteral() {
  }
  LevelUpRoute$onRender$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LevelUpRoute$onRender$lambda$ObjectLiteral_0() {
  }
  LevelUpRoute$onRender$lambda$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function LevelUpRoute$onRender$lambda$lambda_1(str) {
    return str;
  }
  function Coroutine$LevelUpRoute$onRender$lambda(closure$call_0, this$LevelUpRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$call = closure$call_0;
    this.local$this$LevelUpRoute = this$LevelUpRoute_0;
  }
  Coroutine$LevelUpRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$LevelUpRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$LevelUpRoute$onRender$lambda.prototype.constructor = Coroutine$LevelUpRoute$onRender$lambda;
  Coroutine$LevelUpRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3;
            this.state_0 = 2;
            this.result_0 = DashboardUtils_getInstance().retrieveGuildConfiguration_61zpoe$(ensureNotNull(this.local$closure$call.parameters.get_11rb$('guildid')), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var guild = this.result_0;
            DashboardUtils_getInstance().switchContentAndFixLeftSidebarScroll_dh735h$(this.local$this$LevelUpRoute, this.local$closure$call);
            var tmp$_4;
            onClick((tmp$_4 = document.querySelector('#save-button')) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE(), LevelUpRoute$onRender$lambda$lambda(this.local$this$LevelUpRoute));
            var optionData = ArrayList_init();
            var tmp$_5;
            var stuff = (tmp$_5 = document.querySelector('#level-stuff')) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE();
            append(stuff, LevelUpRoute$onRender$lambda$lambda_0(guild, this.local$this$LevelUpRoute));
            tmp$ = guild.roles;
            for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
              var it = tmp$[tmp$_0];
              var option = new LevelUpRoute$onRender$lambda$ObjectLiteral();
              option.id = it.id;
              var text = '<span style=' + '"' + 'font-weight: 600;' + '"' + '>' + it.name + '<\/span>';
              var color = it.getColor();
              if (color != null) {
                text = '<span style=' + '"' + 'font-weight: 600; color: rgb(' + color.red + ', ' + color.green + ', ' + color.blue + ')' + '"' + '>' + it.name + '<\/span>';
              }
              option.text = text;
              if (!it.canInteract || it.isManaged) {
                if (it.isManaged) {
                  option.text = text + ' <span class=' + '"' + 'keyword' + '"' + ' style=' + '"' + 'background-color: rgb(225, 149, 23);' + '"' + '>' + get_legacyLocale().get_25kzsl$('DASHBOARD_RoleByIntegration', []) + '<\/span>';
                }
                 else {
                  option.text = text + ' <span class=' + '"' + 'keyword' + '"' + ' style=' + '"' + 'background-color: rgb(231, 76, 60);' + '"' + '>' + get_legacyLocale().get_25kzsl$('DASHBOARD_NoPermission', []) + '<\/span>';
                }
              }
              optionData.add_11rb$(option);
            }

            var options = new LevelUpRoute$onRender$lambda$ObjectLiteral_0();
            options.data = copyToArray(optionData);
            options.escapeMarkup = LevelUpRoute$onRender$lambda$lambda_1;
            jq('#choose-role-no-xp').select2(options);
            jq('#choose-role').select2(options);
            jq('#choose-role-custom-rate').select2(options);
            var roleList = guild.roles;
            var tmp$_6;
            for (tmp$_6 = 0; tmp$_6 !== roleList.length; ++tmp$_6) {
              var element = roleList[tmp$_6];
              this.local$this$LevelUpRoute.addRoleToAutoroleList_w2wgmg$(element);
            }

            var tmp$_7;
            tmp$_7 = guild.levelUpConfig.rolesByExperience.iterator();
            while (tmp$_7.hasNext()) {
              var element_0 = tmp$_7.next();
              this.local$this$LevelUpRoute.addRoleToRoleByExperienceList_bprwuk$(guild, element_0);
            }

            var tmp$_8;
            tmp$_8 = guild.levelUpConfig.experienceRoleRates.iterator();
            while (tmp$_8.hasNext()) {
              var element_1 = tmp$_8.next();
              this.local$this$LevelUpRoute.addRoleToRolesWithCustomRateList_ozpdz1$(guild, element_1);
            }

            this.local$this$LevelUpRoute.noXpRoles.addAll_brywnq$(guild.levelUpConfig.noXpRoles);
            this.local$this$LevelUpRoute.noXpChannels.addAll_brywnq$(guild.levelUpConfig.noXpChannels);
            this.local$this$LevelUpRoute.updateNoXpRoleList_3kewv$(guild);
            this.local$this$LevelUpRoute.updateNoXpChannelsList_3kewv$(guild);
            tmp$_3 = LoriDashboard_getInstance();
            tmp$_1 = jq('#announcement-message');
            var $receiver = toMutableMap(Placeholders_getInstance().DEFAULT_PLACEHOLDERS);
            $receiver.put_xwzc9p$('previous-level', 'Qual era o n\xEDvel do usu\xE1rio antes dele ter passado de n\xEDvel');
            $receiver.put_xwzc9p$('previous-xp', 'Quanta experi\xEAncia o usu\xE1rio tinha antes dele ter passado de n\xEDvel');
            $receiver.put_xwzc9p$('level', 'O novo n\xEDvel que o usu\xE1rio est\xE1');
            $receiver.put_xwzc9p$('xp', 'A nova quantidade de experi\xEAncia que o usu\xE1rio tem');
            tmp$_2 = mapOf([to('previous-level', '99'), to('previous-xp', '99987'), to('level', '100'), to('xp', '100002')]);
            tmp$_3.configureTextArea_qx4uyf$(tmp$_1, true, null, false, null, true, $receiver, true, mapOf([to(get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.templates.default.title', []), get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.templates.default.content', ['<a:lori_yay_wobbly:638040459721310238>'])), to(get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.templates.embed.title', []), '{' + '\n' + '  ' + '"' + 'content' + '"' + ':' + '"' + '{@user}' + '"' + ',' + '\n' + '    ' + '"' + 'embed' + '"' + ':{' + '\n' + '    ' + '"' + 'color' + '"' + ':-12591736,' + '\n' + '    ' + '"' + 'title' + '"' + ':' + '"' + ' **<a:lori_yay_wobbly:638040459721310238> | LEVEL UP!**' + '"' + ',' + '\n' + '    ' + '"' + 'description' + '"' + ':' + '"' + ' ' + get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.templates.default.content', ['<:lori_heart:640158506049077280>']) + '"' + ',' + '\n' + '    ' + '"' + 'footer' + '"' + ': { ' + '"' + 'text' + '"' + ': ' + '"' + get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.templates.embed.footer', []) + '"' + ' }' + '\n' + '  }' + '\n' + '}')]), tmp$_2);
            return this.local$this$LevelUpRoute.updateDisabledSections(), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function LevelUpRoute$onRender$lambda(closure$call_0, this$LevelUpRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$LevelUpRoute$onRender$lambda(closure$call_0, this$LevelUpRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  LevelUpRoute.prototype.onRender_hjvrm5$ = function (call) {
    DashboardUtils_getInstance().launchWithLoadingScreenAndFixContent_wmzl2u$(this, call, LevelUpRoute$onRender$lambda(call, this));
  };
  LevelUpRoute.prototype.updateDisabledSections = function () {
    var tmp$;
    var announcementTypeSelect = (tmp$ = document.querySelector('#announcement-type')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var announcementValue = LevelUpAnnouncementType$valueOf(announcementTypeSelect.value);
    if (announcementValue !== LevelUpAnnouncementType$DISABLED_getInstance()) {
      var tmp$_0;
      removeClass((tmp$_0 = document.querySelector('#level-up-message')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE(), ['blurSection']);
    }
     else {
      var tmp$_1;
      addClass((tmp$_1 = document.querySelector('#level-up-message')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE(), ['blurSection']);
    }
    if (announcementValue === LevelUpAnnouncementType$DIFFERENT_CHANNEL_getInstance()) {
      var tmp$_2;
      removeClass((tmp$_2 = document.querySelector('#select-custom-channel')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE(), ['blurSection']);
    }
     else {
      var tmp$_3;
      addClass((tmp$_3 = document.querySelector('#select-custom-channel')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE(), ['blurSection']);
    }
  };
  LevelUpRoute.prototype.addRoleToRolesWithCustomRateList_ozpdz1$ = function (guild, experienceRoleRate) {
    this.experienceRoleRates.add_11rb$(experienceRoleRate);
    this.updateRolesWithCustomRateList_3kewv$(guild);
  };
  function LevelUpRoute$updateRolesWithCustomRateList$lambda(it) {
    return Kotlin.Long.fromNumber(it.rate);
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda_0(this$LevelUpRoute, closure$experienceRoleRate, closure$guild) {
    return function (it) {
      this$LevelUpRoute.experienceRoleRates.remove_11rb$(closure$experienceRoleRate);
      this$LevelUpRoute.updateRolesWithCustomRateList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda(this$LevelUpRoute, closure$experienceRoleRate, closure$guild) {
    return function ($receiver) {
      i($receiver, 'fas fa-trash', LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda);
      set_onClickFunction($receiver, LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda_0(this$LevelUpRoute, closure$experienceRoleRate, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda_1(closure$color, closure$guildRole) {
    return function ($receiver) {
      if (closure$color != null)
        set_style($receiver, 'color: rgb(' + closure$color.red + ', ' + closure$color.green + ', ' + closure$color.blue + '); background-color: rgba(' + closure$color.red + ', ' + closure$color.green + ', ' + closure$color.blue + ', 0.298039);');
      $receiver.unaryPlus_pdl1vz$('@' + closure$guildRole.name);
      return Unit;
    };
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda_2(closure$experienceRoleRate) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$experienceRoleRate.rate.toString());
      return Unit;
    };
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda_0(closure$color, closure$guildRole, this$, closure$experienceRoleRate) {
    return function (num) {
      if (num === 0) {
        span(this$, 'discord-mention', LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda_1(closure$color, closure$guildRole));
      }
      if (num === 1) {
        strong(this$, void 0, LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda$lambda_2(closure$experienceRoleRate));
      }
      return Unit;
    };
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda_1(this$) {
    return function (str) {
      this$.unaryPlus_pdl1vz$(str);
      return Unit;
    };
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda(this$LevelUpRoute, closure$experienceRoleRate, closure$guild, closure$color, closure$guildRole) {
    return function ($receiver) {
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-info pure-button remove-action', LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda(this$LevelUpRoute, closure$experienceRoleRate, closure$guild));
      $receiver.unaryPlus_pdl1vz$(' ');
      get_locale_0().buildAsHtml_yljpba$(get_locale_0().get_25kzsl$('modules.levelUp.customRoleRate.whenUserHasRoleRate', []), LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda_0(closure$color, closure$guildRole, $receiver, closure$experienceRoleRate), LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda$lambda_1($receiver));
      return Unit;
    };
  }
  function LevelUpRoute$updateRolesWithCustomRateList$lambda_0(this$LevelUpRoute, closure$experienceRoleRate, closure$guild, closure$color, closure$guildRole) {
    return function ($receiver) {
      div_0($receiver, void 0, LevelUpRoute$updateRolesWithCustomRateList$lambda$lambda(this$LevelUpRoute, closure$experienceRoleRate, closure$guild, closure$color, closure$guildRole));
      return Unit;
    };
  }
  LevelUpRoute.prototype.updateRolesWithCustomRateList_3kewv$ = function (guild) {
    var tmp$;
    var tmp$_0;
    var list = (tmp$_0 = document.querySelector('.roles-with-custom-rate-list')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    clear(list);
    var invalidEntries = ArrayList_init();
    tmp$ = sortedWith(this.experienceRoleRates, new Comparator$ObjectLiteral_3(compareByDescending$lambda_0(LevelUpRoute$updateRolesWithCustomRateList$lambda))).iterator();
    loop_label: while (tmp$.hasNext()) {
      var experienceRoleRate = tmp$.next();
      var theRealRoleId = experienceRoleRate.role;
      var $receiver = guild.roles;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_1;
        for (tmp$_1 = 0; tmp$_1 !== $receiver.length; ++tmp$_1) {
          var element = $receiver[tmp$_1];
          if (equals(element.id, theRealRoleId.toString())) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      var guildRole = firstOrNull$result;
      if (guildRole == null) {
        this.debug_yhszz7$(['Role ' + theRealRoleId.toString() + ' not found! Removing ' + experienceRoleRate]);
        invalidEntries.add_11rb$(experienceRoleRate);
        continue loop_label;
      }
      var color = guildRole.getColor();
      append(list, LevelUpRoute$updateRolesWithCustomRateList$lambda_0(this, experienceRoleRate, guild, color, guildRole));
    }
    this.experienceRoleRates.removeAll_brywnq$(invalidEntries);
  };
  LevelUpRoute.prototype.addRoleToRoleByExperienceList_bprwuk$ = function (guild, roleByExperience) {
    this.rolesByExperience.add_11rb$(roleByExperience);
    this.updateRoleByExperienceList_3kewv$(guild);
  };
  function LevelUpRoute$updateRoleByExperienceList$lambda(it) {
    return toLong(it.requiredExperience);
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_0(this$LevelUpRoute, closure$roleByExperience, closure$guild) {
    return function (it) {
      this$LevelUpRoute.rolesByExperience.remove_11rb$(closure$roleByExperience);
      this$LevelUpRoute.updateRoleByExperienceList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda(this$LevelUpRoute, closure$roleByExperience, closure$guild) {
    return function ($receiver) {
      i($receiver, 'fas fa-trash', LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda);
      set_onClickFunction($receiver, LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_0(this$LevelUpRoute, closure$roleByExperience, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_1(closure$roleByExperience) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$roleByExperience.requiredExperience);
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_2(closure$roleByExperience) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(toLong(closure$roleByExperience.requiredExperience).div(Kotlin.Long.fromInt(1000)).toString());
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_3(closure$color, closure$guildRole) {
    return function ($receiver) {
      if (closure$color != null)
        set_style($receiver, 'color: rgb(' + closure$color.red + ', ' + closure$color.green + ', ' + closure$color.blue + '); background-color: rgba(' + closure$color.red + ', ' + closure$color.green + ', ' + closure$color.blue + ', 0.298039);');
      $receiver.unaryPlus_pdl1vz$('@' + closure$guildRole.name);
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda_0(closure$roleByExperience, this$, closure$color, closure$guildRole) {
    return function (num) {
      if (num === 0) {
        strong(this$, void 0, LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_1(closure$roleByExperience));
      }
      if (num === 1) {
        span(this$, void 0, LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_2(closure$roleByExperience));
      }
      if (num === 2) {
        span(this$, 'discord-mention', LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda$lambda_3(closure$color, closure$guildRole));
      }
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda_1(this$) {
    return function (str) {
      this$.unaryPlus_pdl1vz$(str);
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda$lambda(this$LevelUpRoute, closure$roleByExperience, closure$guild, closure$color, closure$guildRole) {
    return function ($receiver) {
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-info pure-button remove-action', LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda(this$LevelUpRoute, closure$roleByExperience, closure$guild));
      $receiver.unaryPlus_pdl1vz$(' ');
      get_locale_0().buildAsHtml_yljpba$(get_locale_0().get_25kzsl$('modules.levelUp.roleByXpLevel.whenUserGetsToXp', []), LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda_0(closure$roleByExperience, $receiver, closure$color, closure$guildRole), LevelUpRoute$updateRoleByExperienceList$lambda$lambda$lambda_1($receiver));
      return Unit;
    };
  }
  function LevelUpRoute$updateRoleByExperienceList$lambda_0(this$LevelUpRoute, closure$roleByExperience, closure$guild, closure$color, closure$guildRole) {
    return function ($receiver) {
      div_0($receiver, void 0, LevelUpRoute$updateRoleByExperienceList$lambda$lambda(this$LevelUpRoute, closure$roleByExperience, closure$guild, closure$color, closure$guildRole));
      return Unit;
    };
  }
  LevelUpRoute.prototype.updateRoleByExperienceList_3kewv$ = function (guild) {
    var tmp$, tmp$_0;
    var tmp$_1;
    var list = (tmp$_1 = document.querySelector('.roles-by-xp-list')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    clear(list);
    var invalidEntries = ArrayList_init();
    tmp$ = sortedWith(this.rolesByExperience, new Comparator$ObjectLiteral_3(compareByDescending$lambda_0(LevelUpRoute$updateRoleByExperienceList$lambda))).iterator();
    loop_label: while (tmp$.hasNext()) {
      var roleByExperience = tmp$.next();
      tmp$_0 = firstOrNull(roleByExperience.roles);
      if (tmp$_0 == null) {
        continue loop_label;
      }
      var theRealRoleId = tmp$_0;
      var $receiver = guild.roles;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_2;
        for (tmp$_2 = 0; tmp$_2 !== $receiver.length; ++tmp$_2) {
          var element = $receiver[tmp$_2];
          if (equals(element.id, theRealRoleId)) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      var guildRole = firstOrNull$result;
      if (guildRole == null) {
        this.debug_yhszz7$(['Role ' + theRealRoleId + ' not found! Removing ' + roleByExperience]);
        invalidEntries.add_11rb$(roleByExperience);
        continue loop_label;
      }
      var color = guildRole.getColor();
      append(list, LevelUpRoute$updateRoleByExperienceList$lambda_0(this, roleByExperience, guild, color, guildRole));
    }
    this.rolesByExperience.removeAll_brywnq$(invalidEntries);
  };
  function LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute, closure$noXpRoleId, closure$guild) {
    return function (it) {
      this$LevelUpRoute.noXpRoles.remove_11rb$(closure$noXpRoleId);
      this$LevelUpRoute.updateNoXpRoleList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    set_style($receiver, 'border-left: 1px solid rgba(0, 0, 0, 0.15);opacity: 0.7;padding-left: 3px;font-size: 14px;margin-left: 3px;padding-right: 3px;');
    i($receiver, 'fas fa-times', LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda(closure$color, closure$guildRole, this$LevelUpRoute, closure$noXpRoleId, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'cursor: pointer; margin-right: 4px;');
      if (closure$color != null)
        set_style($receiver, 'cursor: pointer; margin-right: 4px; color: rgb(' + closure$color.red + ', ' + closure$color.green + ', ' + closure$color.blue + '); background-color: rgba(' + closure$color.red + ', ' + closure$color.green + ', ' + closure$color.blue + ', 0.298039);');
      else
        set_style($receiver, 'cursor: pointer; margin-right: 4px;');
      $receiver.unaryPlus_pdl1vz$('@' + closure$guildRole.name);
      set_onClickFunction($receiver, LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute, closure$noXpRoleId, closure$guild));
      span($receiver, void 0, LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda$lambda_0);
      return Unit;
    };
  }
  function LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda(closure$guildRole, this$LevelUpRoute, closure$noXpRoleId, closure$guild) {
    return function ($receiver) {
      var color = closure$guildRole.getColor();
      span_0($receiver, 'discord-mention', LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda$lambda(color, closure$guildRole, this$LevelUpRoute, closure$noXpRoleId, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$updateNoXpRoleList$lambda(this$LevelUpRoute, closure$guild, closure$list) {
    return function ($receiver) {
      var $receiver_0 = this$LevelUpRoute.noXpRoles;
      var tmp$;
      tmp$ = $receiver_0.iterator();
      loop_label: while (tmp$.hasNext()) {
        var element = tmp$.next();
        var closure$guild_0 = closure$guild;
        var closure$list_0 = closure$list;
        var this$LevelUpRoute_0 = this$LevelUpRoute;
        action$break: do {
          var tmp$_0;
          var $receiver_1 = closure$guild_0.roles;
          var firstOrNull$result;
          firstOrNull$break: do {
            var tmp$_1;
            for (tmp$_1 = 0; tmp$_1 !== $receiver_1.length; ++tmp$_1) {
              var element_0 = $receiver_1[tmp$_1];
              if (equals(toLong(element_0.id), element)) {
                firstOrNull$result = element_0;
                break firstOrNull$break;
              }
            }
            firstOrNull$result = null;
          }
           while (false);
          tmp$_0 = firstOrNull$result;
          if (tmp$_0 == null) {
            break action$break;
          }
          var guildRole = tmp$_0;
          append(closure$list_0, LevelUpRoute$updateNoXpRoleList$lambda$lambda$lambda(guildRole, this$LevelUpRoute_0, element, closure$guild_0));
        }
         while (false);
      }
      return Unit;
    };
  }
  LevelUpRoute.prototype.updateNoXpRoleList_3kewv$ = function (guild) {
    var tmp$;
    var list = (tmp$ = document.querySelector('#choose-role-no-xp-list')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(list);
    append(list, LevelUpRoute$updateNoXpRoleList$lambda(this, guild, list));
  };
  function LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute, closure$noXpChannelId, closure$guild) {
    return function (it) {
      this$LevelUpRoute.noXpChannels.remove_11rb$(closure$noXpChannelId);
      this$LevelUpRoute.updateNoXpChannelsList_3kewv$(closure$guild);
      return Unit;
    };
  }
  function LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    set_style($receiver, 'border-left: 1px solid rgba(0, 0, 0, 0.15);opacity: 0.7;padding-left: 3px;font-size: 14px;margin-left: 3px;padding-right: 3px;');
    i($receiver, 'fas fa-times', LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda(closure$guildChannel, this$LevelUpRoute, closure$noXpChannelId, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'cursor: pointer; margin-right: 4px;');
      $receiver.unaryPlus_pdl1vz$('#' + closure$guildChannel.name);
      set_onClickFunction($receiver, LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda$lambda(this$LevelUpRoute, closure$noXpChannelId, closure$guild));
      span($receiver, void 0, LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda$lambda_0);
      return Unit;
    };
  }
  function LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda(closure$guildChannel, this$LevelUpRoute, closure$noXpChannelId, closure$guild) {
    return function ($receiver) {
      span_0($receiver, 'discord-mention', LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda$lambda(closure$guildChannel, this$LevelUpRoute, closure$noXpChannelId, closure$guild));
      return Unit;
    };
  }
  function LevelUpRoute$updateNoXpChannelsList$lambda(this$LevelUpRoute, closure$guild, closure$list) {
    return function ($receiver) {
      var $receiver_0 = this$LevelUpRoute.noXpChannels;
      var tmp$;
      tmp$ = $receiver_0.iterator();
      loop_label: while (tmp$.hasNext()) {
        var element = tmp$.next();
        var closure$guild_0 = closure$guild;
        var closure$list_0 = closure$list;
        var this$LevelUpRoute_0 = this$LevelUpRoute;
        action$break: do {
          var tmp$_0;
          var $receiver_1 = closure$guild_0.textChannels;
          var firstOrNull$result;
          firstOrNull$break: do {
            var tmp$_1;
            for (tmp$_1 = 0; tmp$_1 !== $receiver_1.length; ++tmp$_1) {
              var element_0 = $receiver_1[tmp$_1];
              if (equals(toLong(element_0.id), element)) {
                firstOrNull$result = element_0;
                break firstOrNull$break;
              }
            }
            firstOrNull$result = null;
          }
           while (false);
          tmp$_0 = firstOrNull$result;
          if (tmp$_0 == null) {
            break action$break;
          }
          var guildChannel = tmp$_0;
          append(closure$list_0, LevelUpRoute$updateNoXpChannelsList$lambda$lambda$lambda(guildChannel, this$LevelUpRoute_0, element, closure$guild_0));
        }
         while (false);
      }
      return Unit;
    };
  }
  LevelUpRoute.prototype.updateNoXpChannelsList_3kewv$ = function (guild) {
    var tmp$;
    var list = (tmp$ = document.querySelector('#choose-channel-no-xp-list')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(list);
    append(list, LevelUpRoute$updateNoXpChannelsList$lambda(this, guild, list));
  };
  function LevelUpRoute$addRoleToAutoroleList$lambda(closure$tr) {
    return function (it) {
      closure$tr.remove();
      return Unit;
    };
  }
  LevelUpRoute.prototype.addRoleToAutoroleList_w2wgmg$ = function (role) {
    var td = jq('<td>').attr('role-id', role.id).addClass('role-entry');
    var roleSpan = jq('<span>').text('@' + role.name).addClass('discord-mention');
    var color = role.getColor();
    if (color != null) {
      roleSpan.css('color', 'rgb(' + color.red + ', ' + color.green + ', ' + color.blue + ')');
      roleSpan.css('background-color', 'rgba(' + color.red + ', ' + color.green + ', ' + color.blue + ', 0.298039)');
    }
    td.append(roleSpan);
    var tr = jq('<tr>').append(td);
    tr.click(LevelUpRoute$addRoleToAutoroleList$lambda(tr));
    jq('#roleTable').append(tr);
  };
  function LevelUpRoute$prepareSave$lambda(this$LevelUpRoute) {
    return function (it) {
      var tmp$;
      it['roleGiveType'] = ((tmp$ = document.querySelector("input[name='role-level-up-style']:checked")) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      var $receiver = this$LevelUpRoute.noXpChannels;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver, 10));
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var item = tmp$_0.next();
        destination.add_11rb$(item.toString());
      }
      it['noXpChannels'] = destination;
      var $receiver_0 = this$LevelUpRoute.noXpRoles;
      var destination_0 = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
      var tmp$_1;
      tmp$_1 = $receiver_0.iterator();
      while (tmp$_1.hasNext()) {
        var item_0 = tmp$_1.next();
        destination_0.add_11rb$(item_0.toString());
      }
      it['noXpRoles'] = destination_0;
      var announcements = ArrayList_init();
      var tmp$_2;
      var announcementType = ((tmp$_2 = document.querySelector('#announcement-type')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE()).value;
      var tmp$_3;
      var announcementMessage = ((tmp$_3 = document.querySelector('#announcement-message')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE()).value;
      if (!equals(announcementType, 'DISABLED')) {
        var tmp$_4;
        var json_0 = json([to('type', announcementType), to('message', announcementMessage), to('onlyIfUserReceivedRoles', ((tmp$_4 = document.querySelector('#only-if-user-received-roles')) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE()).checked)]);
        if (equals(announcementType, 'DIFFERENT_CHANNEL')) {
          var tmp$_5;
          json_0['channelId'] = ((tmp$_5 = document.querySelector('#choose-channel-custom-channel')) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE()).value;
        }
        announcements.add_11rb$(json_0);
      }
      it['announcements'] = announcements;
      var rolesByExperience = ArrayList_init();
      var tmp$_6;
      tmp$_6 = this$LevelUpRoute.rolesByExperience.iterator();
      while (tmp$_6.hasNext()) {
        var element = tmp$_6.next();
        var inner = json([to('requiredExperience', element.requiredExperience), to('roles', element.roles)]);
        rolesByExperience.add_11rb$(inner);
      }
      it['rolesByExperience'] = rolesByExperience;
      var experienceRoleRates = ArrayList_init();
      var tmp$_7;
      tmp$_7 = this$LevelUpRoute.experienceRoleRates.iterator();
      while (tmp$_7.hasNext()) {
        var element_0 = tmp$_7.next();
        var inner_0 = json([to('rate', element_0.rate.toString()), to('role', element_0.role.toString())]);
        experienceRoleRates.add_11rb$(inner_0);
      }
      it['experienceRoleRates'] = experienceRoleRates;
      return Unit;
    };
  }
  LevelUpRoute.prototype.prepareSave = function () {
    SaveUtils_getInstance().prepareSave_feck85$('level', LevelUpRoute$prepareSave$lambda(this));
  };
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.title', []));
    return Unit;
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$it);
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.tellWhere', []));
    return Unit;
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda$lambda(closure$entry, closure$announcement) {
    return function ($receiver) {
      var tmp$;
      switch (closure$entry.name) {
        case 'DISABLED':
          tmp$ = get_locale_0().get_25kzsl$('modules.levelUp.channelTypes.disabled', []);
          break;
        case 'SAME_CHANNEL':
          tmp$ = get_locale_0().get_25kzsl$('modules.levelUp.channelTypes.sameChannel', []);
          break;
        case 'DIRECT_MESSAGE':
          tmp$ = get_locale_0().get_25kzsl$('modules.levelUp.channelTypes.directMessage', []);
          break;
        case 'DIFFERENT_CHANNEL':
          tmp$ = get_locale_0().get_25kzsl$('modules.levelUp.channelTypes.differentChannel', []);
          break;
        default:tmp$ = Kotlin.noWhenBranchMatched();
          break;
      }
      $receiver.unaryPlus_pdl1vz$(tmp$);
      $receiver.value = closure$entry.name;
      if (equals(closure$entry.name, closure$announcement != null ? closure$announcement.type : null)) {
        $receiver.selected = true;
      }
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda$lambda_0(this$LevelUpRoute) {
    return function (it) {
      this$LevelUpRoute.updateDisabledSections();
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda_0(closure$announcement, this$LevelUpRoute) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      set_style($receiver, 'width: 100%;');
      set_id($receiver, 'announcement-type');
      tmp$ = LevelUpAnnouncementType$values();
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var entry = tmp$[tmp$_0];
        option($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda$lambda(entry, closure$announcement));
      }
      set_onChangeFunction($receiver, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda$lambda_0(this$LevelUpRoute));
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda(closure$announcement, this$LevelUpRoute) {
    return function ($receiver) {
      set_style($receiver, 'flex-grow: 1; margin-right: 10px;');
      h5($receiver, 'section-title', LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda);
      select($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda_0(closure$announcement, this$LevelUpRoute));
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.channel', []));
    return Unit;
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$channel, closure$announcement) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('#' + closure$channel.name);
      $receiver.value = closure$channel.id;
      if (equals(closure$channel.id, closure$announcement != null ? closure$announcement.channelId : null)) {
        $receiver.selected = true;
      }
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda_2(closure$guild, closure$announcement) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      set_style($receiver, 'width: 100%;');
      set_id($receiver, 'choose-channel-custom-channel');
      tmp$ = closure$guild.textChannels;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var channel = tmp$[tmp$_0];
        option($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda$lambda_1(channel, closure$announcement));
      }
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda_0(closure$guild, closure$announcement) {
    return function ($receiver) {
      set_style($receiver, 'flex-grow: 1; margin-left: 16px;');
      set_id($receiver, 'select-custom-channel');
      h5($receiver, 'section-title', LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda_1);
      select($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda$lambda_2(closure$guild, closure$announcement));
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda_0(closure$announcement, this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; flex-direction: row;');
      div($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda(closure$announcement, this$LevelUpRoute));
      div($receiver, 'blurSection', LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda_0(closure$guild, closure$announcement));
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda_1(closure$announcement) {
    return function ($receiver) {
      var tmp$;
      createToggle($receiver, get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.onlyIfUserReceivedRoles.title', []), get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.onlyIfUserReceivedRoles.subtext', []), 'only-if-user-received-roles', (tmp$ = closure$announcement != null ? closure$announcement.onlyIfUserReceivedRoles : null) != null ? tmp$ : false);
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.theMessage', []));
    return Unit;
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda_2(closure$announcement) {
    return function ($receiver) {
      var tmp$;
      set_id($receiver, 'announcement-message');
      $receiver.unaryPlus_pdl1vz$((tmp$ = closure$announcement != null ? closure$announcement.message : null) != null ? tmp$ : get_locale_0().get_25kzsl$('modules.levelUp.levelUpAnnouncement.templates.default.content', ['<a:lori_yay_wobbly:638040459721310238>']));
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda_2(closure$announcement) {
    return function ($receiver) {
      set_id($receiver, 'level-up-message');
      set_style($receiver, 'flex-grow: 1;');
      h5($receiver, 'section-title', LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda_1);
      textArea($receiver, void 0, void 0, void 0, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda$lambda_2(closure$announcement));
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda_0(closure$announcement, this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; flex-direction: column;');
      div($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda_0(closure$announcement, this$LevelUpRoute, closure$guild));
      div($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda_1(closure$announcement));
      div($receiver, 'blurSection', LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda_2(closure$announcement));
      return Unit;
    };
  }
  function LevelUpRoute$generateLevelUpAnnouncementSection$lambda(closure$announcement, this$LevelUpRoute, closure$guild) {
    return function ($receiver) {
      h5($receiver, 'section-title', LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda);
      var tmp$;
      tmp$ = get_locale_0().getList_61zpoe$('modules.levelUp.levelUpAnnouncement.description').iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        p($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda$lambda(element));
      }
      div($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda$lambda_0(closure$announcement, this$LevelUpRoute, closure$guild));
      return Unit;
    };
  }
  LevelUpRoute.prototype.generateLevelUpAnnouncementSection_0 = function ($receiver, guild) {
    var announcement = firstOrNull(guild.levelUpConfig.announcements);
    div_0($receiver, void 0, LevelUpRoute$generateLevelUpAnnouncementSection$lambda(announcement, this, guild));
  };
  LevelUpRoute.prototype.valueOrPlaceholderIfEmpty_0 = function ($receiver, newValue) {
    var value = $receiver.value;
    if (value.length === 0)
      return newValue;
    return value;
  };
  LevelUpRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LevelUpRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function PremiumKeyRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/guild/{guildid}/configure/premium');
    this.m = m;
  }
  Object.defineProperty(PremiumKeyRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function Coroutine$PremiumKeyRoute$onRender$lambda(closure$call_0, this$PremiumKeyRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$call = closure$call_0;
    this.local$this$PremiumKeyRoute = this$PremiumKeyRoute_0;
  }
  Coroutine$PremiumKeyRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$PremiumKeyRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$PremiumKeyRoute$onRender$lambda.prototype.constructor = Coroutine$PremiumKeyRoute$onRender$lambda;
  Coroutine$PremiumKeyRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = DashboardUtils_getInstance().retrieveGuildConfiguration_61zpoe$(ensureNotNull(this.local$closure$call.parameters.get_11rb$('guildid')), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var guild = this.result_0;
            DashboardUtils_getInstance().switchContentAndFixLeftSidebarScroll_dh735h$(this.local$this$PremiumKeyRoute, this.local$closure$call);
            return this.local$this$PremiumKeyRoute.generateStuff_3kewv$(guild), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function PremiumKeyRoute$onRender$lambda(closure$call_0, this$PremiumKeyRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$PremiumKeyRoute$onRender$lambda(closure$call_0, this$PremiumKeyRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  PremiumKeyRoute.prototype.onRender_hjvrm5$ = function (call) {
    DashboardUtils_getInstance().launchWithLoadingScreenAndFixContent_wmzl2u$(this, call, PremiumKeyRoute$onRender$lambda(call, this));
  };
  function PremiumKeyRoute$generateStuff$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Voc\xEA n\xE3o tem nenhuma key ativada neste servidor!');
    return Unit;
  }
  function PremiumKeyRoute$generateStuff$lambda$lambda$lambda_0(closure$donationKey) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Voc\xEA est\xE1 usando key ' + closure$donationKey.id);
      return Unit;
    };
  }
  function PremiumKeyRoute$generateStuff$lambda$lambda(closure$donationKey) {
    return function ($receiver) {
      set_style($receiver, 'text-align: center;');
      if (closure$donationKey == null) {
        h1($receiver, void 0, PremiumKeyRoute$generateStuff$lambda$lambda$lambda);
      }
       else {
        h1($receiver, void 0, PremiumKeyRoute$generateStuff$lambda$lambda$lambda_0(closure$donationKey));
      }
      return Unit;
    };
  }
  function PremiumKeyRoute$generateStuff$lambda$lambda_0($receiver) {
    return Unit;
  }
  function PremiumKeyRoute$generateStuff$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Suas Keys');
    return Unit;
  }
  function PremiumKeyRoute$generateStuff$lambda(closure$guild, this$PremiumKeyRoute) {
    return function ($receiver) {
      var tmp$;
      set_id($receiver, 'premium-stuff');
      var donationKey = closure$guild.donationKey;
      div($receiver, void 0, PremiumKeyRoute$generateStuff$lambda$lambda(donationKey));
      hr($receiver, void 0, PremiumKeyRoute$generateStuff$lambda$lambda_0);
      h1($receiver, void 0, PremiumKeyRoute$generateStuff$lambda$lambda_1);
      var $receiver_0 = ensureNotNull(closure$guild.selfMember.donationKeys);
      var destination = ArrayList_init();
      var tmp$_0;
      tmp$_0 = $receiver_0.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (element.expiresAt.toNumber() >= (new Date()).getTime())
          destination.add_11rb$(element);
      }
      tmp$ = destination.iterator();
      while (tmp$.hasNext()) {
        var donationKey_0 = tmp$.next();
        this$PremiumKeyRoute.createKeyEntry_k7na5t$($receiver, closure$guild.selfMember, donationKey_0);
      }
      return Unit;
    };
  }
  PremiumKeyRoute.prototype.generateStuff_3kewv$ = function (guild) {
    var premiumContent = page.getElementById_61zpoe$('premium-content');
    clear(premiumContent);
    premiumContent.appendChild(div_0(get_create(document), void 0, PremiumKeyRoute$generateStuff$lambda(guild, this)));
  };
  function PremiumKeyRoute$createKeyEntry$lambda$lambda(closure$donationKey, closure$selfMember) {
    return function ($receiver) {
      var tmp$;
      set_style($receiver, 'width: 6%; height: auto; border-radius: 999999px; float: left; position: relative; bottom: 8px;');
      if (closure$donationKey.usesKey != null) {
        $receiver.src = (tmp$ = closure$donationKey.usesKey.iconUrl) != null ? tmp$ : closure$selfMember.effectiveAvatarUrl;
      }
       else {
        $receiver.src = closure$selfMember.effectiveAvatarUrl;
      }
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda(closure$donationKey) {
    return function ($receiver) {
      set_style($receiver, 'font-family: Whitney,Helvetica Neue,Helvetica,Arial,sans-serif;');
      $receiver.unaryPlus_pdl1vz$('Key ' + closure$donationKey.id);
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda_0(closure$donationKey) {
    return function ($receiver) {
      if (closure$donationKey.usesKey != null) {
        $receiver.unaryPlus_pdl1vz$('R' + '$' + closure$donationKey.value + ' \u2022 Ativado em ' + closure$donationKey.usesKey.name + ' \u2022 Expirar\xE1 em ' + DateUtils_getInstance().formatDateDiff_lu1900$((new Date()).getTime(), closure$donationKey.expiresAt.toNumber()));
      }
       else {
        $receiver.unaryPlus_pdl1vz$('R' + '$' + closure$donationKey.value + ' \u2022 Expirar\xE1 em ' + DateUtils_getInstance().formatDateDiff_lu1900$((new Date()).getTime(), closure$donationKey.expiresAt.toNumber()));
      }
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda(closure$donationKey) {
    return function ($receiver) {
      set_style($receiver, 'margin-left: 10px; margin-right: 10;');
      div($receiver, 'amino-title entry-title', PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda(closure$donationKey));
      div($receiver, 'amino-title toggleSubText', PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda_0(closure$donationKey));
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda(closure$donationKey) {
    return function ($receiver) {
      div($receiver, void 0, PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda(closure$donationKey));
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda$lambda(closure$donationKey) {
    return function (it) {
      it['keyId'] = closure$donationKey.id;
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda$lambda_0(this$PremiumKeyRoute) {
    return function (it) {
      var $receiver = JSON_0.Companion.nonstrict;
      var str = it.body;
      var guild = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(ServerConfig$Guild)), str);
      this$PremiumKeyRoute.generateStuff_3kewv$(guild);
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda_1(closure$donationKey, this$PremiumKeyRoute) {
    return function (it) {
      println('Saving!');
      SaveUtils_getInstance().prepareSave_feck85$('premium', PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda$lambda(closure$donationKey), void 0, PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda$lambda_0(this$PremiumKeyRoute));
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda_0(closure$donationKey, this$PremiumKeyRoute) {
    return function ($receiver) {
      set_onClickFunction($receiver, PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda$lambda_1(closure$donationKey, this$PremiumKeyRoute));
      $receiver.unaryPlus_pdl1vz$('Ativar');
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda_0(closure$donationKey, this$PremiumKeyRoute) {
    return function ($receiver) {
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-edit pure-button edit-timer-button', PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda$lambda_0(closure$donationKey, this$PremiumKeyRoute));
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda$lambda_0(closure$donationKey, this$PremiumKeyRoute) {
    return function ($receiver) {
      div($receiver, 'pure-u-1 pure-u-md-18-24', PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda(closure$donationKey));
      div($receiver, 'pure-u-1 pure-u-md-6-24 vertically-centered-right-aligned', PremiumKeyRoute$createKeyEntry$lambda$lambda$lambda_0(closure$donationKey, this$PremiumKeyRoute));
      return Unit;
    };
  }
  function PremiumKeyRoute$createKeyEntry$lambda(closure$donationKey, closure$selfMember, this$PremiumKeyRoute) {
    return function ($receiver) {
      img($receiver, void 0, void 0, 'amino-small-image', PremiumKeyRoute$createKeyEntry$lambda$lambda(closure$donationKey, closure$selfMember));
      div($receiver, 'pure-g', PremiumKeyRoute$createKeyEntry$lambda$lambda_0(closure$donationKey, this$PremiumKeyRoute));
      return Unit;
    };
  }
  PremiumKeyRoute.prototype.createKeyEntry_k7na5t$ = function ($receiver, selfMember, donationKey) {
    div($receiver, 'discord-generic-entry timer-entry', PremiumKeyRoute$createKeyEntry$lambda(donationKey, selfMember, this));
  };
  function PremiumKeyRoute$prepareSave$lambda(it) {
    var tmp$;
    it['dailyMultiplier'] = (Kotlin.isType(tmp$ = page.getElementById_61zpoe$('cmn-toggle-1'), HTMLInputElement) ? tmp$ : throwCCE()).checked;
    return Unit;
  }
  PremiumKeyRoute.prototype.prepareSave = function () {
    SaveUtils_getInstance().prepareSave_feck85$('daily_multiplier', PremiumKeyRoute$prepareSave$lambda);
  };
  PremiumKeyRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PremiumKeyRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function get$lambda_4($receiver) {
    return Unit;
  }
  function RssFeedsRoute(m) {
    RssFeedsRoute$Companion_getInstance();
    UpdateNavbarSizePostRender.call(this, '/guild/{guildid}/configure/rss-feeds');
    this.m = m;
    this.trackedRssFeeds = ArrayList_init();
    this.defaultFeedEntries = ArrayList_init();
  }
  function RssFeedsRoute$Companion() {
    RssFeedsRoute$Companion_instance = this;
    this.LOCALE_PREFIX_0 = 'modules.rssfeeds';
  }
  RssFeedsRoute$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var RssFeedsRoute$Companion_instance = null;
  function RssFeedsRoute$Companion_getInstance() {
    if (RssFeedsRoute$Companion_instance === null) {
      new RssFeedsRoute$Companion();
    }
    return RssFeedsRoute$Companion_instance;
  }
  Object.defineProperty(RssFeedsRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  RssFeedsRoute.prototype.onUnload = function () {
    this.trackedRssFeeds.clear();
    this.defaultFeedEntries.clear();
  };
  function RssFeedsRoute$onRender$lambda$lambda($receiver) {
    url($receiver, window.location.origin + '/api/v1/rss/default');
    return Unit;
  }
  function RssFeedsRoute$onRender$lambda$lambda_0(this$RssFeedsRoute) {
    return function (it) {
      this$RssFeedsRoute.prepareSave();
      return Unit;
    };
  }
  function RssFeedsRoute$onRender$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function RssFeedsRoute$onRender$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function RssFeedsRoute$onRender$lambda$lambda_1($receiver) {
    div_0($receiver, 'tracked-twitter-accounts', RssFeedsRoute$onRender$lambda$lambda$lambda);
    hr_0($receiver, void 0, RssFeedsRoute$onRender$lambda$lambda$lambda_0);
    return Unit;
  }
  function RssFeedsRoute$onRender$lambda$lambda_2(closure$guild, this$RssFeedsRoute) {
    return function (it) {
      this$RssFeedsRoute.editTrackedRssFeed_0(closure$guild, new ServerConfig$TrackedRssFeed(L_1, '-1', '{link}'));
      return Unit;
    };
  }
  function Coroutine$RssFeedsRoute$onRender$lambda(this$RssFeedsRoute_0, closure$call_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$this$RssFeedsRoute = this$RssFeedsRoute_0;
    this.local$closure$call = closure$call_0;
    this.local$response = void 0;
  }
  Coroutine$RssFeedsRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$RssFeedsRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$RssFeedsRoute$onRender$lambda.prototype.constructor = Coroutine$RssFeedsRoute$onRender$lambda;
  Coroutine$RssFeedsRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            RssFeedsRoute$onRender$lambda$lambda($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            var tmp$ = this.local$this$RssFeedsRoute.defaultFeedEntries;
            var $receiver = JSON_0.Companion.nonstrict;
            tmp$.addAll_brywnq$($receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(RssFeedsRoute$DefaultRssFeedEntry))), result));
            var tmp$_0;
            onClick((tmp$_0 = document.querySelector('#save-button')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE(), RssFeedsRoute$onRender$lambda$lambda_0(this.local$this$RssFeedsRoute));
            this.state_0 = 10;
            this.result_0 = DashboardUtils_getInstance().retrieveGuildConfiguration_61zpoe$(ensureNotNull(this.local$closure$call.parameters.get_11rb$('guildid')), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            var guild = this.result_0;
            DashboardUtils_getInstance().switchContentAndFixLeftSidebarScroll_dh735h$(this.local$this$RssFeedsRoute, this.local$closure$call);
            var tmp$_1;
            var stuff = (tmp$_1 = document.querySelector('#level-stuff')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
            append(stuff, RssFeedsRoute$onRender$lambda$lambda_1);
            var tmp$_2;
            var addEntryButton = (tmp$_2 = document.querySelector('#add-new-entry')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
            onClick(addEntryButton, RssFeedsRoute$onRender$lambda$lambda_2(guild, this.local$this$RssFeedsRoute));
            addAll_0(this.local$this$RssFeedsRoute.trackedRssFeeds, guild.trackedRssFeeds);
            return this.local$this$RssFeedsRoute.updateTrackedRssFeedsList_0(guild), Unit;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function RssFeedsRoute$onRender$lambda(this$RssFeedsRoute_0, closure$call_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$RssFeedsRoute$onRender$lambda(this$RssFeedsRoute_0, closure$call_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  RssFeedsRoute.prototype.onRender_hjvrm5$ = function (call) {
    DashboardUtils_getInstance().launchWithLoadingScreenAndFixContent_wmzl2u$(this, call, RssFeedsRoute$onRender$lambda(this, call));
  };
  function RssFeedsRoute$updateTrackedRssFeedsList$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 20%; filter: grayscale(100%);');
    return Unit;
  }
  function RssFeedsRoute$updateTrackedRssFeedsList$lambda$lambda$lambda($receiver) {
    img($receiver, void 0, 'https://loritta.website/assets/img/blog/lori_calca.gif', void 0, RssFeedsRoute$updateTrackedRssFeedsList$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function RssFeedsRoute$updateTrackedRssFeedsList$lambda$lambda($receiver) {
    set_style($receiver, 'text-align: center;font-size: 2em;opacity: 0.7;');
    div($receiver, void 0, RssFeedsRoute$updateTrackedRssFeedsList$lambda$lambda$lambda);
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('website.empty', []) + random(get_locale_0().getList_61zpoe$('website.funnyEmpty'), Random.Default));
    return Unit;
  }
  function RssFeedsRoute$updateTrackedRssFeedsList$lambda(this$RssFeedsRoute, closure$guild) {
    return function ($receiver) {
      var tmp$;
      if (this$RssFeedsRoute.trackedRssFeeds.isEmpty()) {
        div_0($receiver, void 0, RssFeedsRoute$updateTrackedRssFeedsList$lambda$lambda);
      }
       else {
        tmp$ = this$RssFeedsRoute.trackedRssFeeds.iterator();
        while (tmp$.hasNext()) {
          var account = tmp$.next();
          this$RssFeedsRoute.createTrackedRssFeedsEntry_n8008b$($receiver, closure$guild, account);
        }
      }
      return Unit;
    };
  }
  RssFeedsRoute.prototype.updateTrackedRssFeedsList_0 = function (guild) {
    var tmp$;
    var trackedDiv = (tmp$ = document.querySelector('.tracked-twitter-accounts')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(trackedDiv);
    append(trackedDiv, RssFeedsRoute$updateTrackedRssFeedsList$lambda(this, guild));
  };
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda($receiver) {
    set_style($receiver, 'width: 6%; height: auto; border-radius: 999999px; float: left; position: relative; bottom: 8px;');
    return Unit;
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda(closure$trackedTwitterAccount) {
    return function ($receiver) {
      set_style($receiver, 'font-family: Whitney,Helvetica Neue,Helvetica,Arial,sans-serif;');
      $receiver.unaryPlus_pdl1vz$(closure$trackedTwitterAccount.feedUrl);
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_0(closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      var tmp$;
      var $receiver_0 = closure$guild.textChannels;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_0;
        for (tmp$_0 = 0; tmp$_0 !== $receiver_0.length; ++tmp$_0) {
          var element = $receiver_0[tmp$_0];
          if (equals(element.id, closure$trackedTwitterAccount.channelId.toString())) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      var currentChannel = firstOrNull$result;
      var channelName = (tmp$ = currentChannel != null ? '#' + currentChannel.name : null) != null ? tmp$ : '???';
      $receiver.unaryPlus_pdl1vz$(channelName);
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda(closure$trackedTwitterAccount, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'margin-left: 10px; margin-right: 10;');
      div($receiver, 'amino-title entry-title', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda(closure$trackedTwitterAccount));
      div($receiver, 'amino-title toggleSubText', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_0(closure$guild, closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda(closure$trackedTwitterAccount, closure$guild) {
    return function ($receiver) {
      div($receiver, void 0, RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda(closure$trackedTwitterAccount, closure$guild));
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_1(this$RssFeedsRoute, closure$trackedTwitterAccount, closure$guild) {
    return function (it) {
      this$RssFeedsRoute.trackedRssFeeds.remove_11rb$(closure$trackedTwitterAccount);
      this$RssFeedsRoute.updateTrackedRssFeedsList_0(closure$guild);
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda_0(this$RssFeedsRoute, closure$trackedTwitterAccount, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'margin-right: 8px; min-width: 0px;');
      set_onClickFunction($receiver, RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_1(this$RssFeedsRoute, closure$trackedTwitterAccount, closure$guild));
      i($receiver, 'fas fa-trash', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_2);
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_3(closure$guild, closure$trackedTwitterAccount, this$RssFeedsRoute) {
    return function (it) {
      this$RssFeedsRoute.editTrackedRssFeed_0(closure$guild, closure$trackedTwitterAccount);
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda_1(closure$guild, closure$trackedTwitterAccount, this$RssFeedsRoute) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Editar');
      set_onClickFunction($receiver, RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda$lambda_3(closure$guild, closure$trackedTwitterAccount, this$RssFeedsRoute));
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda_0(this$RssFeedsRoute, closure$trackedTwitterAccount, closure$guild) {
    return function ($receiver) {
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-edit pure-button delete-button', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda_0(this$RssFeedsRoute, closure$trackedTwitterAccount, closure$guild));
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-edit pure-button edit-button', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda$lambda_1(closure$guild, closure$trackedTwitterAccount, this$RssFeedsRoute));
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda_0(closure$trackedTwitterAccount, closure$guild, this$RssFeedsRoute) {
    return function ($receiver) {
      div($receiver, 'pure-u-1 pure-u-md-18-24', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda(closure$trackedTwitterAccount, closure$guild));
      div($receiver, 'pure-u-1 pure-u-md-6-24 vertically-centered-content', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda$lambda_0(this$RssFeedsRoute, closure$trackedTwitterAccount, closure$guild));
      return Unit;
    };
  }
  function RssFeedsRoute$createTrackedRssFeedsEntry$lambda(closure$trackedTwitterAccount, closure$guild, this$RssFeedsRoute) {
    return function ($receiver) {
      img($receiver, void 0, void 0, 'amino-small-image', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda);
      div($receiver, 'pure-g', RssFeedsRoute$createTrackedRssFeedsEntry$lambda$lambda_0(closure$trackedTwitterAccount, closure$guild, this$RssFeedsRoute));
      return Unit;
    };
  }
  RssFeedsRoute.prototype.createTrackedRssFeedsEntry_n8008b$ = function ($receiver, guild, trackedTwitterAccount) {
    div_0($receiver, 'discord-generic-entry timer-entry', RssFeedsRoute$createTrackedRssFeedsEntry$lambda(trackedTwitterAccount, guild, this));
  };
  function RssFeedsRoute$editTrackedRssFeed$lambda(this$RssFeedsRoute, closure$trackedTwitterAccount, closure$modal, closure$guild) {
    return function () {
      var tmp$;
      var position = this$RssFeedsRoute.trackedRssFeeds.size;
      if (this$RssFeedsRoute.trackedRssFeeds.contains_11rb$(closure$trackedTwitterAccount)) {
        position = this$RssFeedsRoute.trackedRssFeeds.indexOf_11rb$(closure$trackedTwitterAccount);
        if (position === -1)
          position = this$RssFeedsRoute.trackedRssFeeds.size;
        this$RssFeedsRoute.trackedRssFeeds.remove_11rb$(closure$trackedTwitterAccount);
      }
      var tmp$_0;
      var channelId = ((tmp$_0 = get_visibleModal().querySelector('.choose-channel')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).value;
      var tmp$_1;
      var text = ((tmp$_1 = get_visibleModal().querySelector('.choose-text')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()).value;
      this$RssFeedsRoute.debug_yhszz7$(['Adding ' + toString(get_visibleModal().getAttribute('data-twitter-account-id')) + ' account to the tracked twitter accounts list...']);
      var tmp$_2;
      var selectedType = ((tmp$_2 = get_visibleModal().querySelector('.select-feed-type')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE()).value;
      var tmp$_3;
      var feedUrlDiv = (tmp$_3 = get_visibleModal().querySelector('.feed-url')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE();
      if (equals(selectedType, 'my-own-feed')) {
        tmp$ = feedUrlDiv.value;
      }
       else {
        var $receiver = this$RssFeedsRoute.defaultFeedEntries;
        var first$result;
        first$break: do {
          var tmp$_4;
          tmp$_4 = $receiver.iterator();
          while (tmp$_4.hasNext()) {
            var element = tmp$_4.next();
            if (equals(element.feedId, selectedType)) {
              first$result = element;
              break first$break;
            }
          }
          throw new NoSuchElementException_init('Collection contains no element matching the predicate.');
        }
         while (false);
        tmp$ = '{' + first$result.feedId + '}';
      }
      var feedUrl = tmp$;
      var account = new ServerConfig$TrackedRssFeed(toLong(channelId), feedUrl, text);
      this$RssFeedsRoute.trackedRssFeeds.add_wxm5ur$(position, account);
      closure$modal.close();
      this$RssFeedsRoute.updateTrackedRssFeedsList_0(closure$guild);
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda_0(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Feed RSS');
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 100%; height: auto; float: left; border-radius: 999999px;');
    $receiver.src = 'https://i.imgur.com/s4dTtBy.jpg';
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'flex: 0 1 25%;');
    img($receiver, void 0, void 0, 'account-icon', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.rssfeeds.feedType', []));
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.value = 'my-own-feed';
    $receiver.unaryPlus_pdl1vz$('Utilizar minha pr\xF3pria Feed');
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_1(closure$defaultEntry) {
    return function ($receiver) {
      $receiver.value = closure$defaultEntry.feedId;
      $receiver.unaryPlus_pdl1vz$(closure$defaultEntry.feedId);
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_1(this$RssFeedsRoute) {
    return function ($receiver) {
      var tmp$;
      option($receiver, void 0, RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda);
      option($receiver, void 0, RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_0);
      tmp$ = this$RssFeedsRoute.defaultFeedEntries.iterator();
      while (tmp$.hasNext()) {
        var defaultEntry = tmp$.next();
        option($receiver, void 0, RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_1(defaultEntry));
      }
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_2($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.rssfeeds.feedUrl', []));
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_3($receiver) {
    $receiver.disabled = true;
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.rssfeeds.channel', []));
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda$lambda(closure$channel, closure$trackedTwitterAccount) {
    return function ($receiver) {
      $receiver.value = closure$channel.id;
      if (equals(closure$channel.id, closure$trackedTwitterAccount.channelId.toString())) {
        $receiver.selected = true;
      }
      $receiver.unaryPlus_pdl1vz$('#' + closure$channel.name);
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_3(closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      set_style($receiver, 'box-sizing: border-box !important; width: 100%;');
      tmp$ = closure$guild.textChannels;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var channel = tmp$[tmp$_0];
        option($receiver, void 0, RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda$lambda(channel, closure$trackedTwitterAccount));
      }
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_4($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.rssfeeds.theMessage', []));
    return Unit;
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_5(closure$trackedTwitterAccount) {
    return function ($receiver) {
      set_style($receiver, 'box-sizing: border-box !important; width: 100%;');
      $receiver.unaryPlus_pdl1vz$(closure$trackedTwitterAccount.message);
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_4(closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      h5($receiver, 'section-title', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_2);
      select($receiver, 'choose-channel', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_3(closure$guild, closure$trackedTwitterAccount));
      h5($receiver, 'section-title', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_4);
      textArea($receiver, void 0, void 0, void 0, 'choose-text', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda$lambda_5(closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda_0(this$RssFeedsRoute, closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      set_style($receiver, 'flex-grow: 1; margin: 0.25em;');
      h5($receiver, 'section-title', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_0);
      select($receiver, 'select-feed-type', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_1(this$RssFeedsRoute));
      h5($receiver, 'section-title', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_2);
      input_0($receiver, void 0, void 0, void 0, void 0, 'feed-url', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_3);
      div($receiver, 'account-config blurSection', RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda$lambda_4(closure$guild, closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda$lambda_0(this$RssFeedsRoute, closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      set_style($receiver, 'display: flex;');
      div($receiver, void 0, RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda);
      div($receiver, void 0, RssFeedsRoute$editTrackedRssFeed$lambda$lambda$lambda_0(this$RssFeedsRoute, closure$guild, closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda_1(this$RssFeedsRoute, closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      div($receiver, 'category-name', RssFeedsRoute$editTrackedRssFeed$lambda$lambda);
      div($receiver, void 0, RssFeedsRoute$editTrackedRssFeed$lambda$lambda_0(this$RssFeedsRoute, closure$guild, closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function RssFeedsRoute$editTrackedRssFeed$lambda_2(this$RssFeedsRoute) {
    return function (it) {
      var tmp$;
      var selectedType = ((tmp$ = get_visibleModal().querySelector('.select-feed-type')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      var tmp$_0;
      var feedUrlDiv = (tmp$_0 = get_visibleModal().querySelector('.feed-url')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
      if (equals(selectedType, 'my-own-feed')) {
        feedUrlDiv.disabled = false;
      }
       else {
        feedUrlDiv.disabled = true;
        var $receiver = this$RssFeedsRoute.defaultFeedEntries;
        var first$result;
        first$break: do {
          var tmp$_1;
          tmp$_1 = $receiver.iterator();
          while (tmp$_1.hasNext()) {
            var element = tmp$_1.next();
            if (equals(element.feedId, selectedType)) {
              first$result = element;
              break first$break;
            }
          }
          throw new NoSuchElementException_init('Collection contains no element matching the predicate.');
        }
         while (false);
        feedUrlDiv.value = first$result.feedUrl;
      }
      var tmp$_2;
      removeClass((tmp$_2 = get_visibleModal().querySelector('.account-config')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE(), ['blurSection']);
      return this$RssFeedsRoute;
    };
  }
  RssFeedsRoute.prototype.editTrackedRssFeed_0 = function (guild, trackedTwitterAccount) {
    var tmp$, tmp$_0;
    var modal = new TingleModal(new TingleOptions(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
    modal.addFooterBtn('Salvar', 'button-discord button-discord-info pure-button button-discord-modal', RssFeedsRoute$editTrackedRssFeed$lambda(this, trackedTwitterAccount, modal, guild));
    modal.addFooterBtn('Cancelar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', RssFeedsRoute$editTrackedRssFeed$lambda_0(modal));
    modal.setContent(div_0(createHTML(), void 0, RssFeedsRoute$editTrackedRssFeed$lambda_1(this, guild, trackedTwitterAccount)));
    modal.open();
    var tmp$_1;
    ((tmp$_1 = get_visibleModal().querySelector('.select-feed-type')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()).onchange = RssFeedsRoute$editTrackedRssFeed$lambda_2(this);
    tmp$_0 = LoriDashboard_getInstance();
    tmp$ = jq('.tingle-modal--visible .choose-text');
    var $receiver = toMutableMap(Placeholders_getInstance().DEFAULT_PLACEHOLDERS);
    $receiver.put_xwzc9p$('link', 'Link do Tweet');
    tmp$_0.configureTextArea_qx4uyf$(tmp$, true, null, false, null, true, $receiver, false, void 0, mapOf_0(to('link', 'https://twitter.com/LorittaBot/status/1112093554174763008')));
  };
  function RssFeedsRoute$prepareSave$lambda(this$RssFeedsRoute) {
    return function (it) {
      var tmp$;
      var accounts = ArrayList_init();
      tmp$ = this$RssFeedsRoute.trackedRssFeeds.iterator();
      while (tmp$.hasNext()) {
        var tracked = tmp$.next();
        accounts.add_11rb$(json([to('channelId', tracked.channelId.toString()), to('feedUrl', tracked.feedUrl), to('message', tracked.message)]));
      }
      it['rssFeeds'] = accounts;
      return Unit;
    };
  }
  RssFeedsRoute.prototype.prepareSave = function () {
    SaveUtils_getInstance().prepareSave_feck85$('rss_feeds', RssFeedsRoute$prepareSave$lambda(this));
  };
  function RssFeedsRoute$DefaultRssFeedEntry(feedId, feedUrl) {
    RssFeedsRoute$DefaultRssFeedEntry$Companion_getInstance();
    this.feedId = feedId;
    this.feedUrl = feedUrl;
  }
  function RssFeedsRoute$DefaultRssFeedEntry$Companion() {
    RssFeedsRoute$DefaultRssFeedEntry$Companion_instance = this;
  }
  RssFeedsRoute$DefaultRssFeedEntry$Companion.prototype.serializer = function () {
    return RssFeedsRoute$DefaultRssFeedEntry$$serializer_getInstance();
  };
  RssFeedsRoute$DefaultRssFeedEntry$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var RssFeedsRoute$DefaultRssFeedEntry$Companion_instance = null;
  function RssFeedsRoute$DefaultRssFeedEntry$Companion_getInstance() {
    if (RssFeedsRoute$DefaultRssFeedEntry$Companion_instance === null) {
      new RssFeedsRoute$DefaultRssFeedEntry$Companion();
    }
    return RssFeedsRoute$DefaultRssFeedEntry$Companion_instance;
  }
  function RssFeedsRoute$DefaultRssFeedEntry$$serializer() {
    this.descriptor_4q3udd$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.routes.guilds.dashboard.RssFeedsRoute.DefaultRssFeedEntry', this);
    this.descriptor.addElement_ivxn3r$('feedId', false);
    this.descriptor.addElement_ivxn3r$('feedUrl', false);
    RssFeedsRoute$DefaultRssFeedEntry$$serializer_instance = this;
  }
  Object.defineProperty(RssFeedsRoute$DefaultRssFeedEntry$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_4q3udd$_0;
    }
  });
  RssFeedsRoute$DefaultRssFeedEntry$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.feedId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.feedUrl);
    output.endStructure_qatsm0$(this.descriptor);
  };
  RssFeedsRoute$DefaultRssFeedEntry$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return RssFeedsRoute$RssFeedsRoute$DefaultRssFeedEntry_init(bitMask0, local0, local1, null);
  };
  RssFeedsRoute$DefaultRssFeedEntry$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer];
  };
  RssFeedsRoute$DefaultRssFeedEntry$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var RssFeedsRoute$DefaultRssFeedEntry$$serializer_instance = null;
  function RssFeedsRoute$DefaultRssFeedEntry$$serializer_getInstance() {
    if (RssFeedsRoute$DefaultRssFeedEntry$$serializer_instance === null) {
      new RssFeedsRoute$DefaultRssFeedEntry$$serializer();
    }
    return RssFeedsRoute$DefaultRssFeedEntry$$serializer_instance;
  }
  function RssFeedsRoute$RssFeedsRoute$DefaultRssFeedEntry_init(seen1, feedId, feedUrl, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(RssFeedsRoute$DefaultRssFeedEntry.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('feedId');
    else
      $this.feedId = feedId;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('feedUrl');
    else
      $this.feedUrl = feedUrl;
    return $this;
  }
  RssFeedsRoute$DefaultRssFeedEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DefaultRssFeedEntry',
    interfaces: []
  };
  RssFeedsRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RssFeedsRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function get$lambda_5($receiver) {
    return Unit;
  }
  function TwitterRoute(m) {
    TwitterRoute$Companion_getInstance();
    UpdateNavbarSizePostRender.call(this, '/guild/{guildid}/configure/twitter');
    this.m = m;
    this.trackedTwitterAccounts = ArrayList_init();
    this.cachedUsersById = LinkedHashMap_init();
    this.cachedUsersByScreenName = LinkedHashMap_init();
  }
  function TwitterRoute$Companion() {
    TwitterRoute$Companion_instance = this;
    this.LOCALE_PREFIX_0 = 'modules.twitter';
  }
  TwitterRoute$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TwitterRoute$Companion_instance = null;
  function TwitterRoute$Companion_getInstance() {
    if (TwitterRoute$Companion_instance === null) {
      new TwitterRoute$Companion();
    }
    return TwitterRoute$Companion_instance;
  }
  TwitterRoute.prototype.onUnload = function () {
    this.trackedTwitterAccounts.clear();
    this.cachedUsersById.clear();
    this.cachedUsersByScreenName.clear();
  };
  function TwitterRoute$onRender$lambda$lambda(this$TwitterRoute) {
    return function (it) {
      this$TwitterRoute.prepareSave();
      return Unit;
    };
  }
  function TwitterRoute$onRender$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function TwitterRoute$onRender$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function TwitterRoute$onRender$lambda$lambda_0($receiver) {
    div_0($receiver, 'tracked-twitter-accounts', TwitterRoute$onRender$lambda$lambda$lambda);
    hr_0($receiver, void 0, TwitterRoute$onRender$lambda$lambda$lambda_0);
    return Unit;
  }
  function TwitterRoute$onRender$lambda$lambda_1(closure$guild, this$TwitterRoute) {
    return function (it) {
      this$TwitterRoute.editTrackedTwitterAccount_0(closure$guild, null, new ServerConfig$TrackedTwitterAccount(L_1, L_1, '{link}'));
      return Unit;
    };
  }
  function Coroutine$TwitterRoute$onRender$lambda(closure$call_0, this$TwitterRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$call = closure$call_0;
    this.local$this$TwitterRoute = this$TwitterRoute_0;
  }
  Coroutine$TwitterRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TwitterRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TwitterRoute$onRender$lambda.prototype.constructor = Coroutine$TwitterRoute$onRender$lambda;
  Coroutine$TwitterRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = DashboardUtils_getInstance().retrieveGuildConfiguration_61zpoe$(ensureNotNull(this.local$closure$call.parameters.get_11rb$('guildid')), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var guild = this.result_0;
            DashboardUtils_getInstance().switchContentAndFixLeftSidebarScroll_dh735h$(this.local$this$TwitterRoute, this.local$closure$call);
            var tmp$;
            onClick((tmp$ = document.querySelector('#save-button')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE(), TwitterRoute$onRender$lambda$lambda(this.local$this$TwitterRoute));
            var tmp$_0;
            var stuff = (tmp$_0 = document.querySelector('#level-stuff')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            append(stuff, TwitterRoute$onRender$lambda$lambda_0);
            var tmp$_1;
            var addEntryButton = (tmp$_1 = document.querySelector('#add-new-entry')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
            onClick(addEntryButton, TwitterRoute$onRender$lambda$lambda_1(guild, this.local$this$TwitterRoute));
            addAll_0(this.local$this$TwitterRoute.trackedTwitterAccounts, guild.trackedTwitterAccounts);
            return this.local$this$TwitterRoute.updateTrackedTwitterAccountsList_0(guild), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TwitterRoute$onRender$lambda(closure$call_0, this$TwitterRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$TwitterRoute$onRender$lambda(closure$call_0, this$TwitterRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TwitterRoute.prototype.onRender_hjvrm5$ = function (call) {
    DashboardUtils_getInstance().launchWithLoadingScreenAndFixContent_wmzl2u$(this, call, TwitterRoute$onRender$lambda(call, this));
  };
  function TwitterRoute$updateTrackedTwitterAccountsList$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 20%; filter: grayscale(100%);');
    return Unit;
  }
  function TwitterRoute$updateTrackedTwitterAccountsList$lambda$lambda$lambda($receiver) {
    img($receiver, void 0, 'https://loritta.website/assets/img/blog/lori_calca.gif', void 0, TwitterRoute$updateTrackedTwitterAccountsList$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function TwitterRoute$updateTrackedTwitterAccountsList$lambda$lambda($receiver) {
    set_style($receiver, 'text-align: center;font-size: 2em;opacity: 0.7;');
    div($receiver, void 0, TwitterRoute$updateTrackedTwitterAccountsList$lambda$lambda$lambda);
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('website.empty', []) + random(get_locale_0().getList_61zpoe$('website.funnyEmpty'), Random.Default));
    return Unit;
  }
  function TwitterRoute$updateTrackedTwitterAccountsList$lambda(this$TwitterRoute, closure$guild) {
    return function ($receiver) {
      var tmp$;
      if (this$TwitterRoute.trackedTwitterAccounts.isEmpty()) {
        div_0($receiver, void 0, TwitterRoute$updateTrackedTwitterAccountsList$lambda$lambda);
      }
       else {
        tmp$ = this$TwitterRoute.trackedTwitterAccounts.iterator();
        while (tmp$.hasNext()) {
          var account = tmp$.next();
          this$TwitterRoute.createTrackedTwitterAccountEntry_n1sl$($receiver, closure$guild, account);
        }
      }
      return Unit;
    };
  }
  TwitterRoute.prototype.updateTrackedTwitterAccountsList_0 = function (guild) {
    var tmp$;
    var trackedDiv = (tmp$ = document.querySelector('.tracked-twitter-accounts')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(trackedDiv);
    append(trackedDiv, TwitterRoute$updateTrackedTwitterAccountsList$lambda(this, guild));
  };
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda($receiver) {
    set_style($receiver, 'width: 6%; height: auto; border-radius: 999999px; float: left; position: relative; bottom: 8px;');
    return Unit;
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'font-family: Whitney,Helvetica Neue,Helvetica,Arial,sans-serif;');
    $receiver.unaryPlus_pdl1vz$('...');
    return Unit;
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('...');
    return Unit;
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'margin-left: 10px; margin-right: 10;');
    div($receiver, 'amino-title entry-title', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda);
    div($receiver, 'amino-title toggleSubText', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda($receiver) {
    div($receiver, void 0, TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda_1(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild) {
    return function (it) {
      this$TwitterRoute.trackedTwitterAccounts.remove_11rb$(closure$trackedTwitterAccount);
      this$TwitterRoute.updateTrackedTwitterAccountsList_0(closure$guild);
      return Unit;
    };
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda_0(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild) {
    return function ($receiver) {
      set_style($receiver, 'margin-right: 8px; min-width: 0px;');
      set_onClickFunction($receiver, TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda_1(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild));
      i($receiver, 'fas fa-trash', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda$lambda_2);
      return Unit;
    };
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Editar');
    return Unit;
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda_0(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild) {
    return function ($receiver) {
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-edit pure-button delete-button', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda_0(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild));
      button($receiver, void 0, void 0, void 0, void 0, 'button-discord button-discord-edit pure-button edit-button', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda$lambda_1);
      return Unit;
    };
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda_0(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild) {
    return function ($receiver) {
      div($receiver, 'pure-u-1 pure-u-md-18-24', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda);
      div($receiver, 'pure-u-1 pure-u-md-6-24 vertically-centered-content', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda$lambda_0(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild));
      return Unit;
    };
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda(closure$trackedTwitterAccount, this$TwitterRoute, closure$guild) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var key = 'data-twitter-account';
      var value = closure$trackedTwitterAccount.twitterAccountId.toString();
      $receiver_0.put_xwzc9p$(key, value);
      img($receiver, void 0, void 0, 'amino-small-image', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda);
      div($receiver, 'pure-g', TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda_0(this$TwitterRoute, closure$trackedTwitterAccount, closure$guild));
      return Unit;
    };
  }
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda_1(closure$guild, closure$accountInfo, closure$trackedTwitterAccount, this$TwitterRoute) {
    return function (it) {
      this$TwitterRoute.editTrackedTwitterAccount_0(closure$guild, closure$accountInfo, closure$trackedTwitterAccount);
      return Unit;
    };
  }
  function Coroutine$TwitterRoute$createTrackedTwitterAccountEntry$lambda(closure$trackedTwitterAccount_0, this$TwitterRoute_0, closure$guild_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$trackedTwitterAccount = closure$trackedTwitterAccount_0;
    this.local$this$TwitterRoute = this$TwitterRoute_0;
    this.local$closure$guild = closure$guild_0;
  }
  Coroutine$TwitterRoute$createTrackedTwitterAccountEntry$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TwitterRoute$createTrackedTwitterAccountEntry$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TwitterRoute$createTrackedTwitterAccountEntry$lambda.prototype.constructor = Coroutine$TwitterRoute$createTrackedTwitterAccountEntry$lambda;
  Coroutine$TwitterRoute$createTrackedTwitterAccountEntry$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = this.local$this$TwitterRoute.loadAccountInfoFromUserId_0(this.local$closure$trackedTwitterAccount.twitterAccountId, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var accountInfo = this.result_0;
            this.local$this$TwitterRoute.info_yhszz7$(['Loading info for account ' + this.local$closure$trackedTwitterAccount.twitterAccountId.toString() + '...']);
            var tmp$_0;
            var trackedDiv = (tmp$_0 = document.querySelector("[data-twitter-account='" + this.local$closure$trackedTwitterAccount.twitterAccountId.toString() + "']")) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            if (accountInfo == null) {
              this.local$this$TwitterRoute.trackedTwitterAccounts.remove_11rb$(this.local$closure$trackedTwitterAccount);
              return this.local$this$TwitterRoute.updateTrackedTwitterAccountsList_0(this.local$closure$guild), Unit;
            }
             else {
              var $receiver = this.local$closure$guild.textChannels;
              var firstOrNull$result;
              firstOrNull$break: do {
                var tmp$_1;
                for (tmp$_1 = 0; tmp$_1 !== $receiver.length; ++tmp$_1) {
                  var element = $receiver[tmp$_1];
                  if (equals(element.id, this.local$closure$trackedTwitterAccount.channelId.toString())) {
                    firstOrNull$result = element;
                    break firstOrNull$break;
                  }
                }
                firstOrNull$result = null;
              }
               while (false);
              var currentChannel = firstOrNull$result;
              var channelName = (tmp$ = currentChannel != null ? '#' + currentChannel.name : null) != null ? tmp$ : '???';
              var tmp$_2;
              ((tmp$_2 = trackedDiv.querySelector('.amino-small-image')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE()).src = accountInfo.avatarUrl;
              var tmp$_3;
              ((tmp$_3 = trackedDiv.querySelector('.entry-title')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE()).innerText = accountInfo.name + ' (@' + accountInfo.screenName + ')';
              var tmp$_4;
              ((tmp$_4 = trackedDiv.querySelector('.toggleSubText')) == null || Kotlin.isType(tmp$_4, Any) ? tmp$_4 : throwCCE()).innerText = channelName;
              var tmp$_5;
              onClick((tmp$_5 = trackedDiv.querySelector('.edit-button')) == null || Kotlin.isType(tmp$_5, Any) ? tmp$_5 : throwCCE(), TwitterRoute$createTrackedTwitterAccountEntry$lambda$lambda_1(this.local$closure$guild, accountInfo, this.local$closure$trackedTwitterAccount, this.local$this$TwitterRoute));
              return this.local$this$TwitterRoute.info_yhszz7$(['yey']), Unit;
            }

          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TwitterRoute$createTrackedTwitterAccountEntry$lambda_0(closure$trackedTwitterAccount_0, this$TwitterRoute_0, closure$guild_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$TwitterRoute$createTrackedTwitterAccountEntry$lambda(closure$trackedTwitterAccount_0, this$TwitterRoute_0, closure$guild_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TwitterRoute.prototype.createTrackedTwitterAccountEntry_n1sl$ = function ($receiver, guild, trackedTwitterAccount) {
    div_0($receiver, 'discord-generic-entry timer-entry', TwitterRoute$createTrackedTwitterAccountEntry$lambda(trackedTwitterAccount, this, guild));
    this.m.launch_3q5nlj$(TwitterRoute$createTrackedTwitterAccountEntry$lambda_0(trackedTwitterAccount, this, guild));
  };
  function TwitterRoute$editTrackedTwitterAccount$lambda(this$TwitterRoute, closure$trackedTwitterAccount, closure$modal, closure$guild) {
    return function () {
      var tmp$, tmp$_0;
      var position = this$TwitterRoute.trackedTwitterAccounts.size;
      if (this$TwitterRoute.trackedTwitterAccounts.contains_11rb$(closure$trackedTwitterAccount)) {
        position = this$TwitterRoute.trackedTwitterAccounts.indexOf_11rb$(closure$trackedTwitterAccount);
        if (position === -1)
          position = this$TwitterRoute.trackedTwitterAccounts.size;
        this$TwitterRoute.trackedTwitterAccounts.remove_11rb$(closure$trackedTwitterAccount);
      }
      var tmp$_1;
      var channelId = ((tmp$_1 = get_visibleModal().querySelector('.choose-channel')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()).value;
      var tmp$_2;
      var text = ((tmp$_2 = get_visibleModal().querySelector('.choose-text')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE()).value;
      this$TwitterRoute.debug_yhszz7$(['Adding ' + toString(get_visibleModal().getAttribute('data-twitter-account-id')) + ' account to the tracked twitter accounts list...']);
      ServerConfig_getInstance();
      var account = new ServerConfig$TrackedTwitterAccount(toLong(channelId), (tmp$_0 = (tmp$ = get_visibleModal().getAttribute('data-twitter-account-id')) != null ? toLong(tmp$) : null) != null ? tmp$_0 : L0, text);
      this$TwitterRoute.trackedTwitterAccounts.add_wxm5ur$(position, account);
      closure$modal.close();
      this$TwitterRoute.updateTrackedTwitterAccountsList_0(closure$guild);
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda_0(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Conta do Twitter');
    return Unit;
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 100%; height: auto; float: left; border-radius: 999999px;');
    $receiver.src = 'https://i.imgur.com/s4dTtBy.jpg';
    return Unit;
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'flex: 0 1 25%;');
    img($receiver, void 0, void 0, 'account-icon', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.twitter.userName', []));
    return Unit;
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda_1(closure$accountInfo) {
    return function ($receiver) {
      if (closure$accountInfo != null) {
        $receiver.value = '@' + closure$accountInfo.screenName;
        $receiver.placeholder = '@LorittaBot';
      }
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.twitter.channel', []));
    return Unit;
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda$lambda(closure$channel, closure$trackedTwitterAccount) {
    return function ($receiver) {
      $receiver.value = closure$channel.id;
      if (equals(closure$channel.id, closure$trackedTwitterAccount.channelId.toString())) {
        $receiver.selected = true;
      }
      $receiver.unaryPlus_pdl1vz$('#' + closure$channel.name);
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda_0(closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      set_style($receiver, 'box-sizing: border-box !important; width: 100%;');
      tmp$ = closure$guild.textChannels;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var channel = tmp$[tmp$_0];
        option($receiver, void 0, TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda$lambda(channel, closure$trackedTwitterAccount));
      }
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale_0().get_25kzsl$('modules.twitter.theMessage', []));
    return Unit;
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda_2(closure$trackedTwitterAccount) {
    return function ($receiver) {
      set_style($receiver, 'box-sizing: border-box !important; width: 100%;');
      $receiver.unaryPlus_pdl1vz$(closure$trackedTwitterAccount.message);
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda_2(closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      h5($receiver, 'section-title', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda);
      select($receiver, 'choose-channel', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda_0(closure$guild, closure$trackedTwitterAccount));
      h5($receiver, 'section-title', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda_1);
      textArea($receiver, void 0, void 0, void 0, 'choose-text', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda$lambda_2(closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda_0(closure$accountInfo, closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      set_style($receiver, 'flex-grow: 1; margin: 0.25em;');
      h5($receiver, 'section-title', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda_0);
      input_0($receiver, void 0, void 0, void 0, void 0, 'twitter-account', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda_1(closure$accountInfo));
      div($receiver, 'account-config blurSection', TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda$lambda_2(closure$guild, closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda_0(closure$accountInfo, closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      set_style($receiver, 'display: flex;');
      div($receiver, void 0, TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda);
      div($receiver, void 0, TwitterRoute$editTrackedTwitterAccount$lambda$lambda$lambda_0(closure$accountInfo, closure$guild, closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda_1(closure$accountInfo, closure$guild, closure$trackedTwitterAccount) {
    return function ($receiver) {
      div($receiver, 'category-name', TwitterRoute$editTrackedTwitterAccount$lambda$lambda);
      div($receiver, void 0, TwitterRoute$editTrackedTwitterAccount$lambda$lambda_0(closure$accountInfo, closure$guild, closure$trackedTwitterAccount));
      return Unit;
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$processAccountInfo(accountInfo) {
    var tmp$;
    removeClass((tmp$ = get_visibleModal().querySelector('.account-config')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE(), ['blurSection']);
    var tmp$_0;
    ((tmp$_0 = get_visibleModal().querySelector('.category-name')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).innerText = accountInfo.name;
    var tmp$_1;
    ((tmp$_1 = get_visibleModal().querySelector('.account-icon')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()).src = replace(accountInfo.avatarUrl, '_normal', '_400x400');
    var tmp$_2;
    ((tmp$_2 = get_visibleModal().querySelector('.category-name')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE()).innerText = accountInfo.name;
    get_visibleModal().setAttribute('data-twitter-account-id', accountInfo.id.toString());
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda_2(this$TwitterRoute) {
    return function () {
      this$TwitterRoute.info_yhszz7$(['Writing something, blurring content...']);
      var tmp$;
      addClass((tmp$ = get_visibleModal().querySelector('.account-config')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE(), ['blurSection']);
      return Unit;
    };
  }
  function Coroutine$TwitterRoute$editTrackedTwitterAccount$lambda$lambda(closure$screenName_0, this$TwitterRoute_0, closure$processAccountInfo_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$screenName = closure$screenName_0;
    this.local$this$TwitterRoute = this$TwitterRoute_0;
    this.local$closure$processAccountInfo = closure$processAccountInfo_0;
  }
  Coroutine$TwitterRoute$editTrackedTwitterAccount$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TwitterRoute$editTrackedTwitterAccount$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TwitterRoute$editTrackedTwitterAccount$lambda$lambda.prototype.constructor = Coroutine$TwitterRoute$editTrackedTwitterAccount$lambda$lambda;
  Coroutine$TwitterRoute$editTrackedTwitterAccount$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$TwitterRoute.loadAccountInfoFromScreenName_0(this.local$closure$screenName, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var accountInfo = this.result_0;
            if (accountInfo == null) {
              var tmp$;
              return addClass((tmp$ = get_visibleModal().querySelector('.account-config')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE(), ['blurSection']);
            }
             else {
              return this.local$closure$processAccountInfo(accountInfo), Unit;
            }

          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TwitterRoute$editTrackedTwitterAccount$lambda$lambda_1(closure$screenName_0, this$TwitterRoute_0, closure$processAccountInfo_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$TwitterRoute$editTrackedTwitterAccount$lambda$lambda(closure$screenName_0, this$TwitterRoute_0, closure$processAccountInfo_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function TwitterRoute$editTrackedTwitterAccount$lambda_3(this$TwitterRoute, closure$twitterAccountInput, closure$processAccountInfo) {
    return function () {
      this$TwitterRoute.info_yhszz7$(['Finished typing! Loading data...']);
      var screenName = removeSuffix(removePrefix(removePrefix(removePrefix(closure$twitterAccountInput.value, 'https://twitter.com/'), 'http://twitter.com/'), '@'), '/');
      this$TwitterRoute.m.launch_3q5nlj$(TwitterRoute$editTrackedTwitterAccount$lambda$lambda_1(screenName, this$TwitterRoute, closure$processAccountInfo));
      return Unit;
    };
  }
  TwitterRoute.prototype.editTrackedTwitterAccount_0 = function (guild, accountInfo, trackedTwitterAccount) {
    var tmp$, tmp$_0;
    var modal = new TingleModal(new TingleOptions(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
    modal.addFooterBtn('Salvar', 'button-discord button-discord-info pure-button button-discord-modal', TwitterRoute$editTrackedTwitterAccount$lambda(this, trackedTwitterAccount, modal, guild));
    modal.addFooterBtn('Cancelar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', TwitterRoute$editTrackedTwitterAccount$lambda_0(modal));
    modal.setContent(div_0(createHTML(), void 0, TwitterRoute$editTrackedTwitterAccount$lambda_1(accountInfo, guild, trackedTwitterAccount)));
    modal.open();
    this.trackOverflowChanges_rvobah$(modal, this.m);
    var processAccountInfo = TwitterRoute$editTrackedTwitterAccount$processAccountInfo;
    var tmp$_1;
    var twitterAccountInput = (tmp$_1 = get_visibleModal().querySelector('.twitter-account')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    delayedTyping(twitterAccountInput, this.m, L2500, TwitterRoute$editTrackedTwitterAccount$lambda_2(this), TwitterRoute$editTrackedTwitterAccount$lambda_3(this, twitterAccountInput, processAccountInfo));
    if (accountInfo != null)
      processAccountInfo(accountInfo);
    tmp$_0 = LoriDashboard_getInstance();
    tmp$ = jq('.tingle-modal--visible .choose-text');
    var $receiver = toMutableMap(Placeholders_getInstance().DEFAULT_PLACEHOLDERS);
    $receiver.put_xwzc9p$('link', 'Link do Tweet');
    tmp$_0.configureTextArea_qx4uyf$(tmp$, true, null, false, null, true, $receiver, false, void 0, mapOf_0(to('link', 'https://twitter.com/LorittaBot/status/1112093554174763008')));
  };
  function TwitterRoute$loadAccountInfoFromUserId$lambda(closure$userId) {
    return function ($receiver) {
      parameter($receiver, 'userId', closure$userId);
      return Unit;
    };
  }
  function Coroutine$loadAccountInfoFromUserId_0($this, userId_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$response = void 0;
    this.local$userId = userId_0;
  }
  Coroutine$loadAccountInfoFromUserId_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadAccountInfoFromUserId_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadAccountInfoFromUserId_0.prototype.constructor = Coroutine$loadAccountInfoFromUserId_0;
  Coroutine$loadAccountInfoFromUserId_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.info_yhszz7$(['Loading info for account ' + this.local$userId.toString() + '...']);
            if (this.$this.cachedUsersById.containsKey_11rb$(this.local$userId)) {
              return this.$this.cachedUsersById.get_11rb$(this.local$userId);
            }
             else {
              this.state_0 = 1;
              continue;
            }

          case 1:
            var $receiver_0 = http;
            var urlString = window.location.origin + '/api/v1/twitter/users/show';
            var host_0;
            var body_0;
            host_0 = 'localhost';
            body_0 = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host_0, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body_0;
            takeFrom($receiver_1.url, urlString);
            TwitterRoute$loadAccountInfoFromUserId$lambda(this.local$userId)($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(getKClass(HttpResponse), [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = Kotlin.isType(tmp$_4 = $this_0, HttpResponse) ? tmp$_4 : throwCCE();
              this.state_0 = 10;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 8;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 2;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 2:
            this.local$response = this.result_0;
            this.exceptionState_0 = 5;
            var tmp$_6;
            this.state_0 = 3;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(getKClass(HttpResponse), call.JsType, createKType(getKClass(HttpResponse), [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.result_0 = Kotlin.isType(tmp$_6 = this.result_0, HttpResponse) ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [4];
            this.state_0 = 6;
            continue;
          case 4:
            this.state_0 = 9;
            continue;
          case 5:
            this.finallyPath_0 = [7];
            this.state_0 = 6;
            continue;
          case 6:
            this.exceptionState_0 = 7;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
          case 8:
            this.result_0 = Kotlin.isType(tmp$_5 = this.result_0, HttpResponse) ? tmp$_5 : throwCCE();
            this.state_0 = 9;
            continue;
          case 9:
            this.state_0 = 10;
            continue;
          case 10:
            this.result_0;
            var response = this.result_0;
            var statusCode = response.status;
            if (!(statusCode != null ? statusCode.equals(HttpStatusCode.Companion.OK) : null)) {
              this.$this.warn_yhszz7$(['Status Code is ' + statusCode + ', oof']);
              return null;
            }
             else {
              this.state_0 = 11;
              this.result_0 = readText(response, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 11:
            var text = this.result_0;
            var accountInfo = this.$this.parseAccountInfo_0(text);
            this.$this.cachedUsersById.put_xwzc9p$(this.local$userId, accountInfo);
            var $receiver = this.$this.cachedUsersByScreenName;
            var key = accountInfo.screenName;
            $receiver.put_xwzc9p$(key, accountInfo);
            return accountInfo;
          case 12:
            return;
          default:this.state_0 = 7;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TwitterRoute.prototype.loadAccountInfoFromUserId_0 = function (userId_0, continuation_0, suspended) {
    var instance = new Coroutine$loadAccountInfoFromUserId_0(this, userId_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function TwitterRoute$loadAccountInfoFromScreenName$lambda(closure$screenName) {
    return function ($receiver) {
      parameter($receiver, 'screenName', closure$screenName);
      return Unit;
    };
  }
  function Coroutine$loadAccountInfoFromScreenName_0($this, screenName_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 7;
    this.$this = $this;
    this.local$response = void 0;
    this.local$screenName = screenName_0;
  }
  Coroutine$loadAccountInfoFromScreenName_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadAccountInfoFromScreenName_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadAccountInfoFromScreenName_0.prototype.constructor = Coroutine$loadAccountInfoFromScreenName_0;
  Coroutine$loadAccountInfoFromScreenName_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.$this.info_yhszz7$(['Loading info for account @' + this.local$screenName + '...']);
            if (this.$this.cachedUsersByScreenName.containsKey_11rb$(this.local$screenName)) {
              return this.$this.cachedUsersByScreenName.get_11rb$(this.local$screenName);
            }
             else {
              this.state_0 = 1;
              continue;
            }

          case 1:
            var $receiver_0 = http;
            var urlString = window.location.origin + '/api/v1/twitter/users/show';
            var host_0;
            var body_0;
            host_0 = 'localhost';
            body_0 = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host_0, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body_0;
            takeFrom($receiver_1.url, urlString);
            TwitterRoute$loadAccountInfoFromScreenName$lambda(this.local$screenName)($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(getKClass(HttpResponse), [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = Kotlin.isType(tmp$_4 = $this_0, HttpResponse) ? tmp$_4 : throwCCE();
              this.state_0 = 10;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 8;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 2;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 2:
            this.local$response = this.result_0;
            this.exceptionState_0 = 5;
            var tmp$_6;
            this.state_0 = 3;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(getKClass(HttpResponse), call.JsType, createKType(getKClass(HttpResponse), [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.result_0 = Kotlin.isType(tmp$_6 = this.result_0, HttpResponse) ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 7;
            this.finallyPath_0 = [4];
            this.state_0 = 6;
            continue;
          case 4:
            this.state_0 = 9;
            continue;
          case 5:
            this.finallyPath_0 = [7];
            this.state_0 = 6;
            continue;
          case 6:
            this.exceptionState_0 = 7;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 7:
            throw this.exception_0;
          case 8:
            this.result_0 = Kotlin.isType(tmp$_5 = this.result_0, HttpResponse) ? tmp$_5 : throwCCE();
            this.state_0 = 9;
            continue;
          case 9:
            this.state_0 = 10;
            continue;
          case 10:
            this.result_0;
            var response = this.result_0;
            var statusCode = response.status;
            if (!(statusCode != null ? statusCode.equals(HttpStatusCode.Companion.OK) : null)) {
              this.$this.warn_yhszz7$(['Status Code is ' + statusCode + ', oof']);
              return null;
            }
             else {
              this.state_0 = 11;
              this.result_0 = readText(response, void 0, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }

          case 11:
            var text = this.result_0;
            var accountInfo = this.$this.parseAccountInfo_0(text);
            var $receiver = this.$this.cachedUsersById;
            var key = accountInfo.id;
            $receiver.put_xwzc9p$(key, accountInfo);
            this.$this.cachedUsersByScreenName.put_xwzc9p$(this.local$screenName, accountInfo);
            return accountInfo;
          case 12:
            return;
          default:this.state_0 = 7;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 7) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  TwitterRoute.prototype.loadAccountInfoFromScreenName_0 = function (screenName_0, continuation_0, suspended) {
    var instance = new Coroutine$loadAccountInfoFromScreenName_0(this, screenName_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  TwitterRoute.prototype.parseAccountInfo_0 = function (payload) {
    var $receiver = JSON_0.Companion.nonstrict;
    return $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(TwitterRoute$TwitterAccountInfo)), payload);
  };
  function TwitterRoute$TwitterAccountInfo(id, name, screenName, avatarUrl) {
    TwitterRoute$TwitterAccountInfo$Companion_getInstance();
    this.id = id;
    this.name = name;
    this.screenName = screenName;
    this.avatarUrl = avatarUrl;
  }
  function TwitterRoute$TwitterAccountInfo$Companion() {
    TwitterRoute$TwitterAccountInfo$Companion_instance = this;
  }
  TwitterRoute$TwitterAccountInfo$Companion.prototype.serializer = function () {
    return TwitterRoute$TwitterAccountInfo$$serializer_getInstance();
  };
  TwitterRoute$TwitterAccountInfo$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TwitterRoute$TwitterAccountInfo$Companion_instance = null;
  function TwitterRoute$TwitterAccountInfo$Companion_getInstance() {
    if (TwitterRoute$TwitterAccountInfo$Companion_instance === null) {
      new TwitterRoute$TwitterAccountInfo$Companion();
    }
    return TwitterRoute$TwitterAccountInfo$Companion_instance;
  }
  function TwitterRoute$TwitterAccountInfo$$serializer() {
    this.descriptor_jev85g$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.routes.guilds.dashboard.TwitterRoute.TwitterAccountInfo', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('screenName', false);
    this.descriptor.addElement_ivxn3r$('avatarUrl', false);
    TwitterRoute$TwitterAccountInfo$$serializer_instance = this;
  }
  Object.defineProperty(TwitterRoute$TwitterAccountInfo$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_jev85g$_0;
    }
  });
  TwitterRoute$TwitterAccountInfo$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeLongElement_a3zgoj$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.name);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.screenName);
    output.encodeStringElement_bgm7zs$(this.descriptor, 3, obj.avatarUrl);
    output.endStructure_qatsm0$(this.descriptor);
  };
  TwitterRoute$TwitterAccountInfo$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeLongElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeStringElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return TwitterRoute$TwitterRoute$TwitterAccountInfo_init(bitMask0, local0, local1, local2, local3, null);
  };
  TwitterRoute$TwitterAccountInfo$$serializer.prototype.childSerializers = function () {
    return [internal.LongSerializer, internal.StringSerializer, internal.StringSerializer, internal.StringSerializer];
  };
  TwitterRoute$TwitterAccountInfo$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var TwitterRoute$TwitterAccountInfo$$serializer_instance = null;
  function TwitterRoute$TwitterAccountInfo$$serializer_getInstance() {
    if (TwitterRoute$TwitterAccountInfo$$serializer_instance === null) {
      new TwitterRoute$TwitterAccountInfo$$serializer();
    }
    return TwitterRoute$TwitterAccountInfo$$serializer_instance;
  }
  function TwitterRoute$TwitterRoute$TwitterAccountInfo_init(seen1, id, name, screenName, avatarUrl, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(TwitterRoute$TwitterAccountInfo.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('screenName');
    else
      $this.screenName = screenName;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('avatarUrl');
    else
      $this.avatarUrl = avatarUrl;
    return $this;
  }
  TwitterRoute$TwitterAccountInfo.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TwitterAccountInfo',
    interfaces: []
  };
  function Coroutine$TwitterRoute$trackOverflowChanges$lambda(this$trackOverflowChanges_0, this$TwitterRoute_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$trackOverflowChanges = this$trackOverflowChanges_0;
    this.local$this$TwitterRoute = this$TwitterRoute_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$TwitterRoute$trackOverflowChanges$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TwitterRoute$trackOverflowChanges$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TwitterRoute$trackOverflowChanges$lambda.prototype.constructor = Coroutine$TwitterRoute$trackOverflowChanges$lambda;
  Coroutine$TwitterRoute$trackOverflowChanges$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!hasClass(get_visibleModal(), 'tingle-modal--visible')) {
              this.state_0 = 4;
              continue;
            }

            this.local$this$trackOverflowChanges.checkOverflow();
            this.state_0 = 3;
            this.result_0 = delay(L100, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          case 4:
            return this.local$this$TwitterRoute.debug_yhszz7$(['Modal ' + this.local$$receiver + ' was closed, we will stop tracking overflow changes...']), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TwitterRoute$trackOverflowChanges$lambda(this$trackOverflowChanges_0, this$TwitterRoute_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$TwitterRoute$trackOverflowChanges$lambda(this$trackOverflowChanges_0, this$TwitterRoute_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TwitterRoute.prototype.trackOverflowChanges_rvobah$ = function ($receiver, m) {
    this.debug_yhszz7$(['Tracking ' + $receiver + ' overflow changes...']);
    m.launch_3q5nlj$(TwitterRoute$trackOverflowChanges$lambda($receiver, this));
  };
  function TwitterRoute$prepareSave$lambda(this$TwitterRoute) {
    return function (it) {
      var tmp$;
      var accounts = ArrayList_init();
      tmp$ = this$TwitterRoute.trackedTwitterAccounts.iterator();
      while (tmp$.hasNext()) {
        var tracked = tmp$.next();
        accounts.add_11rb$(json([to('channel', tracked.channelId.toString()), to('twitterAccountId', tracked.twitterAccountId.toString()), to('message', tracked.message)]));
      }
      it['accounts'] = accounts;
      return Unit;
    };
  }
  TwitterRoute.prototype.prepareSave = function () {
    SaveUtils_getInstance().prepareSave_feck85$('twitter', TwitterRoute$prepareSave$lambda(this));
  };
  TwitterRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TwitterRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function HomeRoute() {
    BaseRoute.call(this, '/');
  }
  function Coroutine$HomeRoute$onRender$lambda($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$HomeRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HomeRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HomeRoute$onRender$lambda.prototype.constructor = Coroutine$HomeRoute$onRender$lambda;
  Coroutine$HomeRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var part0 = (tmp$ = document.querySelector('.right-side-text .introduction .my-name-is')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
            addClass(part0, ['animated', 'fade-in-right', 'one-second']);
            removeClass(part0, ['invisible']);
            this.state_0 = 2;
            this.result_0 = delay(L900, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var tmp$_0;
            var part1 = (tmp$_0 = document.querySelector('.right-side-text .introduction .loritta')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            addClass(part1, ['animated', 'fade-in-right', 'one-second']);
            removeClass(part1, ['invisible']);
            this.state_0 = 3;
            this.result_0 = delay(L900, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            var tmp$_1;
            var part2 = (tmp$_1 = document.querySelector('.right-side-text .introduction .tagline')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
            addClass(part2, ['animated', 'fade-in-right', 'one-second']);
            return removeClass(part2, ['invisible']);
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HomeRoute$onRender$lambda($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$HomeRoute$onRender$lambda($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function Coroutine$HomeRoute$onRender$lambda_0(closure$blinkingPose_0, closure$blushingPose_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$blinkingPose = closure$blinkingPose_0;
    this.local$closure$blushingPose = closure$blushingPose_0;
  }
  Coroutine$HomeRoute$onRender$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$HomeRoute$onRender$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$HomeRoute$onRender$lambda_0.prototype.constructor = Coroutine$HomeRoute$onRender$lambda_0;
  Coroutine$HomeRoute$onRender$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$closure$blinkingPose.style.visibility = '';
            this.state_0 = 3;
            this.result_0 = delay(L7000, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.local$closure$blushingPose.style.visibility = '';
            this.local$closure$blinkingPose.style.visibility = 'visible';
            this.state_0 = 4;
            this.result_0 = delay(L140, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.state_0 = 2;
            continue;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function HomeRoute$onRender$lambda_0(closure$blinkingPose_0, closure$blushingPose_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$HomeRoute$onRender$lambda_0(closure$blinkingPose_0, closure$blushingPose_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function HomeRoute$onRender$lambda_1(closure$selfie, closure$blushingPose, this$HomeRoute) {
    return function (it) {
      var offset_0 = offset(closure$selfie);
      var x = (it.pageX - offset_0.left) / closure$blushingPose.offsetWidth;
      var y = (it.pageY - offset_0.top) / closure$selfie.offsetHeight;
      this$HomeRoute.debug_yhszz7$(['x: ' + x.toString() + '; y: ' + y.toString()]);
      if (rangeTo(0.22, 0.32).contains_mef7kx$(x) && rangeTo(0.29, 0.39).contains_mef7kx$(y)) {
        closure$blushingPose.style.visibility = 'visible';
      }
      return Unit;
    };
  }
  HomeRoute.prototype.onRender_hjvrm5$ = function (call) {
    BaseRoute.prototype.onRender_hjvrm5$.call(this, call);
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(HomeRoute$onRender$lambda);
    var tmp$;
    var blinkingPose = (tmp$ = document.querySelector('.blinking-pose')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var tmp$_0;
    var blushingPose = (tmp$_0 = document.querySelector('.blushing-pose')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(HomeRoute$onRender$lambda_0(blinkingPose, blushingPose));
    var tmp$_1;
    var selfie = (tmp$_1 = document.querySelector('#loritta-selfie')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    var tmp$_2;
    onClick((tmp$_2 = document.querySelector('#loritta-selfie')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE(), HomeRoute$onRender$lambda_1(selfie, blushingPose, this));
  };
  HomeRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HomeRoute',
    interfaces: [BaseRoute]
  };
  function leftSidebarForProfileDashboard$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Servidores');
    return Unit;
  }
  function leftSidebarForProfileDashboard$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Coisa #2');
    return Unit;
  }
  function leftSidebarForProfileDashboard$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Coisa #3');
    return Unit;
  }
  function leftSidebarForProfileDashboard($receiver) {
    div($receiver, 'entry', leftSidebarForProfileDashboard$lambda);
    div($receiver, 'entry', leftSidebarForProfileDashboard$lambda_0);
    div($receiver, 'entry', leftSidebarForProfileDashboard$lambda_1);
  }
  function get$lambda_6($receiver) {
    return Unit;
  }
  function TranslateRoute(m) {
    UpdateNavbarSizePostRender.call(this, '/translate');
    this.m = m;
    this.filterOnlyMissing = false;
    this.changedOnThisSessionKeys = LinkedHashSet_init();
  }
  Object.defineProperty(TranslateRoute.prototype, 'keepLoadingScreen', {
    get: function () {
      return true;
    }
  });
  function TranslateRoute$onRender$lambda$lambda(closure$editLocaleId) {
    return function ($receiver) {
      url($receiver, window.location.origin + '/api/v1/loritta/locale/' + toString(closure$editLocaleId));
      return Unit;
    };
  }
  function TranslateRoute$onRender$lambda$lambda_0(closure$localeToBeTranslated) {
    return function ($receiver) {
      url($receiver, window.location.origin + '/api/v1/loritta/locale/' + closure$localeToBeTranslated.get_25kzsl$('loritta.inheritsFromLanguageId', []));
      return Unit;
    };
  }
  function TranslateRoute$onRender$lambda$lambda_1(this$TranslateRoute, closure$originalLocale, closure$localeToBeTranslated) {
    return function (it) {
      this$TranslateRoute.filterOnlyMissing = !this$TranslateRoute.filterOnlyMissing;
      this$TranslateRoute.redrawLocaleEntriesSidebar_8x7h70$(closure$originalLocale, closure$localeToBeTranslated);
      return Unit;
    };
  }
  function TranslateRoute$onRender$lambda$lambda$ObjectLiteral() {
  }
  TranslateRoute$onRender$lambda$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function TranslateRoute$onRender$lambda$lambda_2(closure$localeToBeTranslated, closure$originalLocale) {
    return function (it) {
      var tmp$;
      var json = new TranslateRoute$onRender$lambda$lambda$ObjectLiteral();
      var $receiver = closure$localeToBeTranslated.localeEntries;
      var tmp$_0;
      tmp$_0 = $receiver.entries.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        var closure$originalLocale_0 = closure$originalLocale;
        var closure$localeToBeTranslated_0 = closure$localeToBeTranslated;
        var key = element.key;
        var value = element.value;
        if (!equals(value, closure$originalLocale_0.get_25kzsl$(key, []))) {
          if (startsWith(value, 'list::')) {
            json[key] = closure$localeToBeTranslated_0.getList_61zpoe$(key);
          }
           else {
            json[key] = value;
          }
        }
      }
      console.log(json);
      var asJson = JSON.stringify(json, void 0, 4);
      println(asJson);
      var a = Kotlin.isType(tmp$ = window.document.createElement('a'), HTMLAnchorElement) ? tmp$ : throwCCE();
      var tmp$_1 = [asJson];
      var type = 'text/json';
      var o = {};
      o['type'] = type;
      a.href = URL.createObjectURL(new Blob(tmp$_1, o));
      a.download = closure$localeToBeTranslated.id + '.json';
      ensureNotNull(document.body).appendChild(a);
      a.click();
      ensureNotNull(document.body).removeChild(a);
      return Unit;
    };
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda($receiver) {
    set_id($receiver, 'entries-sidebar');
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_id($receiver, 'original-locale-key');
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    set_id($receiver, 'edited-locale');
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Preview');
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    b($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3($receiver) {
    set_id($receiver, 'markdown-locale');
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_4($receiver) {
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Original');
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_5($receiver) {
    b($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_6($receiver) {
    set_id($receiver, 'original-locale');
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'padding: 7px;');
    div($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda);
    textArea($receiver, void 0, void 0, void 0, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_0);
    hr($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_1);
    p($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_2);
    div($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_3);
    hr($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_4);
    p($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_5);
    div($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda$lambda_6);
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda$lambda_0($receiver) {
    set_id($receiver, 'edit-sidebar');
    div($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function TranslateRoute$onRender$lambda$lambda$lambda(closure$navbarHeight) {
    return function ($receiver) {
      set_style($receiver, 'display: flex; flex-direction: row; height: calc(100vh - ' + closure$navbarHeight + 'px);');
      div($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda);
      div($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda$lambda_0);
      return Unit;
    };
  }
  function TranslateRoute$onRender$lambda$lambda_3(closure$navbarHeight) {
    return function ($receiver) {
      div_0($receiver, void 0, TranslateRoute$onRender$lambda$lambda$lambda(closure$navbarHeight));
      return Unit;
    };
  }
  function Coroutine$TranslateRoute$onRender$lambda(closure$editLocaleId_0, this$TranslateRoute_0, closure$navbarHeight_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 14;
    this.local$closure$editLocaleId = closure$editLocaleId_0;
    this.local$this$TranslateRoute = this$TranslateRoute_0;
    this.local$closure$navbarHeight = closure$navbarHeight_0;
    this.local$response = void 0;
    this.local$localeToBeTranslated = void 0;
    this.local$response_0 = void 0;
  }
  Coroutine$TranslateRoute$onRender$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TranslateRoute$onRender$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TranslateRoute$onRender$lambda.prototype.constructor = Coroutine$TranslateRoute$onRender$lambda;
  Coroutine$TranslateRoute$onRender$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var block = TranslateRoute$onRender$lambda$lambda(this.local$closure$editLocaleId);
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            block($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 8;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 6;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 14;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 7;
            continue;
          case 4:
            this.finallyPath_0 = [14];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 14;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 7;
            continue;
          case 7:
            this.state_0 = 8;
            continue;
          case 8:
            this.result_0;
            var localeToBeTranslatedPayload = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            this.local$localeToBeTranslated = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(BaseLocale)), localeToBeTranslatedPayload);
            var $receiver_0_0 = http;
            var host_0;
            var body_0;
            host_0 = 'localhost';
            body_0 = utils.EmptyContent;
            var $receiver_1_0 = new HttpRequestBuilder_init();
            url_0($receiver_1_0, 'http', host_0, 0, '/');
            $receiver_1_0.method = HttpMethod.Companion.Get;
            $receiver_1_0.body = body_0;
            TranslateRoute$onRender$lambda$lambda_0(this.local$localeToBeTranslated)($receiver_1_0);
            var $this_0_0 = new HttpStatement_init($receiver_1_0, $receiver_0_0);
            var tmp$_3_0, tmp$_4_0, tmp$_5_0;
            tmp$_3_0 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3_0, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4_0 = $this_0_0) === 'string' ? tmp$_4_0 : throwCCE();
              this.state_0 = 17;
              continue;
            }
             else {
              if (equals(tmp$_3_0, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 15;
                this.result_0 = $this_0_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 9;
                this.result_0 = $this_0_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 9:
            this.local$response_0 = this.result_0;
            this.exceptionState_0 = 12;
            var tmp$_6_0;
            this.state_0 = 10;
            this.result_0 = this.local$response_0.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            this.result_0 = typeof (tmp$_6_0 = this.result_0) === 'string' ? tmp$_6_0 : throwCCE();
            this.exceptionState_0 = 14;
            this.finallyPath_0 = [11];
            this.state_0 = 13;
            continue;
          case 11:
            this.state_0 = 16;
            continue;
          case 12:
            this.finallyPath_0 = [14];
            this.state_0 = 13;
            continue;
          case 13:
            this.exceptionState_0 = 14;
            complete(this.local$response_0);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 14:
            throw this.exception_0;
          case 15:
            this.result_0 = typeof (tmp$_5_0 = this.result_0) === 'string' ? tmp$_5_0 : throwCCE();
            this.state_0 = 16;
            continue;
          case 16:
            this.state_0 = 17;
            continue;
          case 17:
            this.result_0;
            var originalLocalePayload = this.result_0;
            var $receiver_2 = JSON_0.Companion.nonstrict;
            var originalLocale = $receiver_2.parse_awif5v$(getOrDefault($receiver_2.context, getKClass(BaseLocale)), originalLocalePayload);
            var tmp$;
            var content = (tmp$ = document.querySelector('#content')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
            var tmp$_0;
            var filterMissing = (tmp$_0 = document.querySelector('#filter-missing')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
            onClick(filterMissing, TranslateRoute$onRender$lambda$lambda_1(this.local$this$TranslateRoute, originalLocale, this.local$localeToBeTranslated));
            var tmp$_1;
            var downloadJson = (tmp$_1 = document.querySelector('#download-json')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
            onClick(downloadJson, TranslateRoute$onRender$lambda$lambda_2(this.local$localeToBeTranslated, originalLocale));
            append(content, TranslateRoute$onRender$lambda$lambda_3(this.local$closure$navbarHeight));
            this.local$this$TranslateRoute.redrawLocaleEntriesSidebar_8x7h70$(originalLocale, this.local$localeToBeTranslated);
            return this.local$this$TranslateRoute.m.hideLoadingScreen(), Unit;
          default:this.state_0 = 14;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 14) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TranslateRoute$onRender$lambda(closure$editLocaleId_0, this$TranslateRoute_0, closure$navbarHeight_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$TranslateRoute$onRender$lambda(closure$editLocaleId_0, this$TranslateRoute_0, closure$navbarHeight_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  TranslateRoute.prototype.onRender_hjvrm5$ = function (call) {
    UpdateNavbarSizePostRender.prototype.onRender_hjvrm5$.call(this, call);
    var tmp$;
    var navbarHeight = ((tmp$ = document.querySelector('#navigation-bar')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).clientHeight.toString();
    var editLocaleId = window.prompt('Locale ID for output (default, en-us, etc)');
    this.m.launch_3q5nlj$(TranslateRoute$onRender$lambda(editLocaleId, this, navbarHeight));
  };
  function TranslateRoute$redrawLocaleEntriesSidebar$lambda$lambda$lambda$lambda(closure$converter, closure$markdownLocaleDiv, closure$isList, closure$localeToBeTranslated, closure$key, this$TranslateRoute, closure$originalLocale, this$) {
    return function (it) {
      var tmp$;
      var localeValue = ((tmp$ = document.querySelector('#edited-locale')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).value;
      closure$markdownLocaleDiv.innerHTML = closure$converter.makeHtml(replace(localeValue, '-----[list]-----', '\n\n'));
      if (closure$isList)
        localeValue = 'list::' + replace(localeValue, '\n-----[list]-----\n', '\n');
      var $receiver = closure$localeToBeTranslated.localeEntries;
      var key = closure$key;
      var value = localeValue;
      $receiver.put_xwzc9p$(key, value);
      this$TranslateRoute.changedOnThisSessionKeys.add_11rb$(closure$key);
      this$TranslateRoute.redrawLocaleEntriesSidebar_8x7h70$(closure$originalLocale, closure$localeToBeTranslated);
      return this$;
    };
  }
  function TranslateRoute$redrawLocaleEntriesSidebar$lambda$lambda$lambda(closure$key, closure$localeToBeTranslated, closure$value, this$TranslateRoute, closure$originalLocale, this$) {
    return function (it) {
      var tmp$;
      var tmp$_0;
      var originalLocaleKeyDiv = (tmp$_0 = document.querySelector('#original-locale-key')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
      var tmp$_1;
      var editedLocaleTextArea = (tmp$_1 = document.querySelector('#edited-locale')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
      var tmp$_2;
      var markdownLocaleDiv = (tmp$_2 = document.querySelector('#markdown-locale')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
      var tmp$_3;
      var originalLocaleDiv = (tmp$_3 = document.querySelector('#original-locale')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE();
      originalLocaleKeyDiv.innerText = closure$key;
      var toBeTranslated = typeof (tmp$ = closure$localeToBeTranslated.localeEntries.get_11rb$(closure$key)) === 'string' ? tmp$ : throwCCE();
      var isList = startsWith(toBeTranslated, 'list::');
      if (isList) {
        toBeTranslated = joinToString_0(split(removePrefix(toBeTranslated, 'list::'), ['\n']), '\n-----[list]-----\n');
      }
      editedLocaleTextArea.value = toBeTranslated;
      originalLocaleDiv.innerText = closure$value;
      var converter = new ShowdownConverter();
      markdownLocaleDiv.innerHTML = converter.makeHtml(replace(toBeTranslated, '-----[list]-----', '\n\n'));
      editedLocaleTextArea.oninput = TranslateRoute$redrawLocaleEntriesSidebar$lambda$lambda$lambda$lambda(converter, markdownLocaleDiv, isList, closure$localeToBeTranslated, closure$key, this$TranslateRoute, closure$originalLocale, this$);
      return Unit;
    };
  }
  function TranslateRoute$redrawLocaleEntriesSidebar$lambda$lambda(closure$value, closure$key, closure$localeToBeTranslated, this$TranslateRoute, closure$originalLocale) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$value);
      set_onClickFunction($receiver, TranslateRoute$redrawLocaleEntriesSidebar$lambda$lambda$lambda(closure$key, closure$localeToBeTranslated, closure$value, this$TranslateRoute, closure$originalLocale, $receiver));
      return Unit;
    };
  }
  function TranslateRoute$redrawLocaleEntriesSidebar$lambda(closure$originalLocale, closure$localeToBeTranslated, this$TranslateRoute) {
    return function ($receiver) {
      var tmp$;
      tmp$ = closure$originalLocale.localeEntries.entries.iterator();
      while (tmp$.hasNext()) {
        var tmp$_0 = tmp$.next();
        var key = tmp$_0.key;
        var value = tmp$_0.value;
        var translatedEntry = closure$localeToBeTranslated.get_25kzsl$(key, []);
        var classes = 'locale-entry';
        if (this$TranslateRoute.changedOnThisSessionKeys.contains_11rb$(key)) {
          classes += ' edited-on-this-session';
        }
         else if (equals(translatedEntry, value)) {
          classes += ' not-edited';
        }
         else if (this$TranslateRoute.changedOnThisSessionKeys.contains_11rb$(key)) {
          classes += ' edited-on-this-session';
        }
         else if (this$TranslateRoute.filterOnlyMissing) {
          continue;
        }
        div_0($receiver, classes, TranslateRoute$redrawLocaleEntriesSidebar$lambda$lambda(value, key, closure$localeToBeTranslated, this$TranslateRoute, closure$originalLocale));
      }
      return Unit;
    };
  }
  TranslateRoute.prototype.redrawLocaleEntriesSidebar_8x7h70$ = function (originalLocale, localeToBeTranslated) {
    var tmp$;
    var entriesSidebar = (tmp$ = document.querySelector('#entries-sidebar')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    clear(entriesSidebar);
    append(entriesSidebar, TranslateRoute$redrawLocaleEntriesSidebar$lambda(originalLocale, localeToBeTranslated, this));
  };
  TranslateRoute.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TranslateRoute',
    interfaces: [UpdateNavbarSizePostRender]
  };
  function UpdateNavbarSizePostRender(path) {
    BaseRoute.call(this, path);
  }
  UpdateNavbarSizePostRender.prototype.onRender_hjvrm5$ = function (call) {
    BaseRoute.prototype.onRender_hjvrm5$.call(this, call);
    this.fixDummyNavbarHeight_hjvrm5$(call);
  };
  UpdateNavbarSizePostRender.prototype.fixDummyNavbarHeight_hjvrm5$ = function (call) {
    var tmp$, tmp$_0;
    var tmp$_1;
    var navbarHeight = ((tmp$_1 = document.querySelector('#navigation-bar')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()).clientHeight.toString();
    this.debug_yhszz7$(['Navbar height is ' + navbarHeight + ', fixing dummy navbar']);
    var tmp$_2;
    ((tmp$_2 = document.querySelector('#dummy-navbar')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE()).style.height = navbarHeight + 'px';
    var tmp$_3;
    (tmp$_0 = (tmp$ = (tmp$_3 = document.querySelector('#sidebar-wrapper')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE()) != null ? tmp$.style : null) != null ? (tmp$_0.height = 'calc(100% - ' + navbarHeight + 'px);') : null;
  };
  UpdateNavbarSizePostRender.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UpdateNavbarSizePostRender',
    interfaces: [BaseRoute]
  };
  function get$lambda_7($receiver) {
    return Unit;
  }
  function get$lambda_8($receiver) {
    return Unit;
  }
  var switchPageStart;
  var pageCache;
  var ignoreCacheRequests;
  var navbarIsSetup;
  function http$lambda($receiver) {
    $receiver.expectSuccess = false;
    return Unit;
  }
  var http;
  var locale_0;
  function get_locale_0() {
    if (locale_0 == null)
      return throwUPAE('locale');
    return locale_0;
  }
  function set_locale_0(locale) {
    locale_0 = locale;
  }
  function SpicyMorenitta() {
    SpicyMorenitta$Companion_getInstance();
    this.pageLoadLock = Mutex();
    this.wsCommands = mutableListOf([new PingCommand()]);
    this.routes = mutableListOf([new HomeRoute(), new DiscordBotBrasileiroRoute(), new FanArtsRoute(this), new GeneralDashboardRoute(this), new UpdateNavbarSizePostRender('/support'), new UpdateNavbarSizePostRender('/blog'), new UpdateNavbarSizePostRender('/extended'), new AuditLogRoute(this), new LevelUpRoute(this), new TwitterRoute(this), new RssFeedsRoute(this), new CommandsRoute(this), new TranslateRoute(this), new GeneralConfigRoute(this), new BadgeRoute(this), new DailyMultiplierRoute(this), new LevelUpRoute(this), new PremiumKeyRoute(this), new RssFeedsRoute(this), new TwitterRoute(this)]);
    this.validWebsiteLocaleIds = mutableListOf(['br', 'us', 'es', 'pt-furry', 'en-furry', 'br-debug', 'en-debug']);
    this.websiteLocaleIdToLocaleId = mutableMapOf([to('br', 'default'), to('us', 'en-us'), to('es', 'es-es'), to('pt-furry', 'pt-furry'), to('en-furry', 'en-furry'), to('br-debug', 'pt-debug'), to('en-debug', 'en-debug')]);
    this.socket_uaj0ez$_0 = this.socket_uaj0ez$_0;
    this.currentRoute = null;
    this.userIdentification = null;
    this.pageSpecificTasks = ArrayList_init();
    this.currentPath = null;
  }
  function SpicyMorenitta$Companion() {
    SpicyMorenitta$Companion_instance = this;
    this.KEEP_ALIVE_DELAY = L10000;
    this.CACHE_ON_HOVER_DELAY = L125;
    this.INSTANCE_jmikan$_0 = this.INSTANCE_jmikan$_0;
  }
  Object.defineProperty(SpicyMorenitta$Companion.prototype, 'INSTANCE', {
    get: function () {
      if (this.INSTANCE_jmikan$_0 == null)
        return throwUPAE('INSTANCE');
      return this.INSTANCE_jmikan$_0;
    },
    set: function (INSTANCE) {
      this.INSTANCE_jmikan$_0 = INSTANCE;
    }
  });
  SpicyMorenitta$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var SpicyMorenitta$Companion_instance = null;
  function SpicyMorenitta$Companion_getInstance() {
    if (SpicyMorenitta$Companion_instance === null) {
      new SpicyMorenitta$Companion();
    }
    return SpicyMorenitta$Companion_instance;
  }
  Object.defineProperty(SpicyMorenitta.prototype, 'socket', {
    get: function () {
      if (this.socket_uaj0ez$_0 == null)
        return throwUPAE('socket');
      return this.socket_uaj0ez$_0;
    },
    set: function (socket) {
      this.socket_uaj0ez$_0 = socket;
    }
  });
  Object.defineProperty(SpicyMorenitta.prototype, 'localeId', {
    get: function () {
      var tmp$;
      return (tmp$ = this.websiteLocaleIdToLocaleId.get_11rb$(this.websiteLocaleId)) != null ? tmp$ : 'default';
    }
  });
  Object.defineProperty(SpicyMorenitta.prototype, 'websiteLocaleId', {
    get: function () {
      var localeIdFromPath = WebsiteUtils_getInstance().getWebsiteLocaleIdViaPath();
      this.debug_yhszz7$(['Locale ID from Path is ' + localeIdFromPath]);
      return this.validWebsiteLocaleIds.contains_11rb$(localeIdFromPath) ? localeIdFromPath : 'us';
    }
  });
  function SpicyMorenitta$start$lambda$lambda$ObjectLiteral() {
  }
  SpicyMorenitta$start$lambda$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function Coroutine$SpicyMorenitta$start$lambda$lambda(this$SpicyMorenitta_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$SpicyMorenitta = this$SpicyMorenitta_0;
  }
  Coroutine$SpicyMorenitta$start$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SpicyMorenitta$start$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SpicyMorenitta$start$lambda$lambda.prototype.constructor = Coroutine$SpicyMorenitta$start$lambda$lambda;
  Coroutine$SpicyMorenitta$start$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var obj = new SpicyMorenitta$start$lambda$lambda$ObjectLiteral();
            obj['type'] = 'ping';
            this.local$this$SpicyMorenitta.socket.send(JSON.stringify(obj));
            this.state_0 = 3;
            this.result_0 = delay(SpicyMorenitta$Companion_getInstance().KEEP_ALIVE_DELAY, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 3:
            this.state_0 = 2;
            continue;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SpicyMorenitta$start$lambda$lambda(this$SpicyMorenitta_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SpicyMorenitta$start$lambda$lambda(this$SpicyMorenitta_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function SpicyMorenitta$start$lambda(this$SpicyMorenitta) {
    return function (it) {
      this$SpicyMorenitta.success_yhszz7$(['Socket opened! Setting up keep alive (10000ms)']);
      return launch(coroutines.GlobalScope, void 0, void 0, SpicyMorenitta$start$lambda$lambda(this$SpicyMorenitta));
    };
  }
  function SpicyMorenitta$start$lambda_0(this$SpicyMorenitta) {
    return function (it) {
      this$SpicyMorenitta.warn_yhszz7$(['Socket closed!']);
      return Unit;
    };
  }
  function SpicyMorenitta$start$lambda_1(this$SpicyMorenitta) {
    return function (it) {
      this$SpicyMorenitta.error_yhszz7$(['Socket error! Oh no... :(']);
      return Unit;
    };
  }
  function SpicyMorenitta$start$lambda_2(this$SpicyMorenitta) {
    return function (it) {
      var data = it.data;
      var d = data.toString();
      if (startsWith(d, '{')) {
        var raw = JSON.parse(d);
        var type = toString(raw['type']);
        var $receiver = this$SpicyMorenitta.wsCommands;
        var firstOrNull$result;
        firstOrNull$break: do {
          var tmp$;
          tmp$ = $receiver.iterator();
          while (tmp$.hasNext()) {
            var element = tmp$.next();
            if (equals(element.name, type)) {
              firstOrNull$result = element;
              break firstOrNull$break;
            }
          }
          firstOrNull$result = null;
        }
         while (false);
        var command = firstOrNull$result;
        if (command == null) {
          this$SpicyMorenitta.error_yhszz7$(['Received payload ' + raw + ' (type: ' + type + ") but I don't know how to handle it!"]);
        }
         else {
          command.process_z9o90e$(this$SpicyMorenitta.socket, raw);
        }
      }
      return Unit;
    };
  }
  function Coroutine$SpicyMorenitta$start$lambda$lambda$lambda(this$SpicyMorenitta_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$SpicyMorenitta = this$SpicyMorenitta_0;
  }
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda.prototype.constructor = Coroutine$SpicyMorenitta$start$lambda$lambda$lambda;
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SpicyMorenitta.loadLocale(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SpicyMorenitta$start$lambda$lambda$lambda(this$SpicyMorenitta_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SpicyMorenitta$start$lambda$lambda$lambda(this$SpicyMorenitta_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SpicyMorenitta$start$lambda$lambda$lambda_0(this$SpicyMorenitta_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$SpicyMorenitta = this$SpicyMorenitta_0;
  }
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda_0.prototype.constructor = Coroutine$SpicyMorenitta$start$lambda$lambda$lambda_0;
  Coroutine$SpicyMorenitta$start$lambda$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SpicyMorenitta.loadLoggedInUser(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SpicyMorenitta$start$lambda$lambda$lambda_0(this$SpicyMorenitta_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SpicyMorenitta$start$lambda$lambda$lambda_0(this$SpicyMorenitta_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function Coroutine$SpicyMorenitta$start$lambda$lambda_0(this$SpicyMorenitta_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$SpicyMorenitta = this$SpicyMorenitta_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$SpicyMorenitta$start$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SpicyMorenitta$start$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SpicyMorenitta$start$lambda$lambda_0.prototype.constructor = Coroutine$SpicyMorenitta$start$lambda$lambda_0;
  Coroutine$SpicyMorenitta$start$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var deferred = listOf_0([async(this.local$$receiver, void 0, void 0, SpicyMorenitta$start$lambda$lambda$lambda(this.local$this$SpicyMorenitta)), async(this.local$$receiver, void 0, void 0, SpicyMorenitta$start$lambda$lambda$lambda_0(this.local$this$SpicyMorenitta))]);
            this.state_0 = 2;
            this.result_0 = joinAll(deferred, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$this$SpicyMorenitta.debug_yhszz7$(['Locale test: ' + get_locale_0().get_25kzsl$('commands.images.drawnword.description', [])]);
            this.local$this$SpicyMorenitta.debug_yhszz7$(['Locale test: ' + get_locale_0().get_25kzsl$('commands.fun.ship.bribeLove', [':3'])]);
            return this.local$this$SpicyMorenitta.onPageChange_co5kb4$(this.local$this$SpicyMorenitta.socket, window.location.pathname, null), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SpicyMorenitta$start$lambda$lambda_0(this$SpicyMorenitta_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SpicyMorenitta$start$lambda$lambda_0(this$SpicyMorenitta_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function SpicyMorenitta$start$lambda_3(this$SpicyMorenitta) {
    return function (it) {
      this$SpicyMorenitta.debug_yhszz7$(['DOM is ready!']);
      this$SpicyMorenitta.debug_yhszz7$([window.location.pathname + ' - ' + WebsiteUtils_getInstance().getPathWithoutLocale()]);
      GoogleAdSense_getInstance().renderAds();
      AdvertisementUtils_getInstance().checkIfUserIsBlockingAds();
      this$SpicyMorenitta.launch_3q5nlj$(SpicyMorenitta$start$lambda$lambda_0(this$SpicyMorenitta));
      return Unit;
    };
  }
  function Coroutine$SpicyMorenitta$start$lambda$lambda_1(this$SpicyMorenitta_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$SpicyMorenitta = this$SpicyMorenitta_0;
  }
  Coroutine$SpicyMorenitta$start$lambda$lambda_1.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SpicyMorenitta$start$lambda$lambda_1.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SpicyMorenitta$start$lambda$lambda_1.prototype.constructor = Coroutine$SpicyMorenitta$start$lambda$lambda_1;
  Coroutine$SpicyMorenitta$start$lambda$lambda_1.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SpicyMorenitta.sendSwitchPageRequest_yw3f44$(this.local$this$SpicyMorenitta.socket, window.location.pathname, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SpicyMorenitta$start$lambda$lambda_1(this$SpicyMorenitta_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SpicyMorenitta$start$lambda$lambda_1(this$SpicyMorenitta_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function SpicyMorenitta$start$lambda_4(this$SpicyMorenitta) {
    return function (it) {
      if (equals(this$SpicyMorenitta.currentPath, window.location.pathname)) {
        return this$SpicyMorenitta.debug_yhszz7$(['History changed but seems to be a hash change (maybe?), ignoring onpopstate event...']), Unit;
      }
       else {
        this$SpicyMorenitta.debug_yhszz7$(['History changed! Trying to load the new page... New pathname is ' + window.location.pathname]);
        this$SpicyMorenitta.currentPath = window.location.pathname;
        return this$SpicyMorenitta.launch_3q5nlj$(SpicyMorenitta$start$lambda$lambda_1(this$SpicyMorenitta));
      }
    };
  }
  SpicyMorenitta.prototype.start = function () {
    var tmp$, tmp$_0;
    SpicyMorenitta$Companion_getInstance().INSTANCE = this;
    DoNotRemoveDeadCodeWorkaround_getInstance().methodRefs;
    this.info_yhszz7$(['SpicyMorenitta :3']);
    this.info_yhszz7$(['Howdy, my name is Loritta!']);
    this.info_yhszz7$(['I want to make the world a better place... making people happier and helping other people... changing their lives...']);
    this.info_yhszz7$(['I hope I succeed...']);
    console.log('%c       ', 'font-size: 64px; background: url(https://loritta.website/assets/img/fanarts/l8.png) no-repeat; background-size: 64px 64px;');
    if (equals(window.location.pathname, '/auth')) {
      AuthUtils_getInstance().handlePopup();
      return;
    }
    if (false) {
      TrunfoGame_getInstance().start();
      return;
    }
    oldMain([]);
    var darkThemeCookie = CookiesUtils_getInstance().readCookie_61zpoe$('darkTheme');
    if ((darkThemeCookie != null ? toBoolean(darkThemeCookie) : null) === true)
      WebsiteThemeUtils_getInstance().changeWebsiteThemeTo_4heyup$(WebsiteThemeUtils$WebsiteTheme$DARK_THEME_getInstance(), true);
    if (false) {
      var userThemeCookie = CookiesUtils_getInstance().readCookie_61zpoe$('userTheme');
      if (userThemeCookie != null) {
        tmp$_0 = WebsiteThemeUtils_getInstance();
        try {
          tmp$ = WebsiteThemeUtils$WebsiteTheme$valueOf(userThemeCookie);
        }
         catch (e) {
          if (Kotlin.isType(e, IllegalArgumentException)) {
            tmp$ = WebsiteThemeUtils$WebsiteTheme$DEFAULT_getInstance();
          }
           else
            throw e;
        }
        tmp$_0.changeWebsiteThemeTo_4heyup$(tmp$, true);
      }
    }
    this.debug_yhszz7$(['Is using http? ' + equals(window.location.protocol, 'http:')]);
    var url = equals(window.location.protocol, 'http:') ? 'ws://' + last(split(window.location.origin, ['//'])) + '/ws' : 'wss://' + last(split(window.location.origin, ['//'])) + '/ws';
    this.debug_yhszz7$(['Using protocol ' + window.location.protocol + ' - WebSocket URL is ' + url]);
    this.socket = new WebSocket(url);
    this.socket.onopen = SpicyMorenitta$start$lambda(this);
    this.socket.onclose = SpicyMorenitta$start$lambda_0(this);
    this.socket.onerror = SpicyMorenitta$start$lambda_1(this);
    this.socket.onmessage = SpicyMorenitta$start$lambda_2(this);
    onDOMReady(document, SpicyMorenitta$start$lambda_3(this));
    this.currentPath = window.location.pathname;
    window.onpopstate = SpicyMorenitta$start$lambda_4(this);
  };
  function Coroutine$loadLocale($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$response = void 0;
  }
  Coroutine$loadLocale.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadLocale.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadLocale.prototype.constructor = Coroutine$loadLocale;
  Coroutine$loadLocale.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var urlString = window.location.origin + '/api/v1/loritta/locale/' + this.$this.localeId;
            var host_0;
            var body_0;
            host_0 = 'localhost';
            body_0 = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host_0, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body_0;
            takeFrom($receiver_1.url, urlString);
            get$lambda_7($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var payload = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            set_locale_0($receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(BaseLocale)), payload));
            return;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SpicyMorenitta.prototype.loadLocale = function (continuation_0, suspended) {
    var instance = new Coroutine$loadLocale(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function Coroutine$loadLoggedInUser($this, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$response = void 0;
    this.local$httpResponse = void 0;
  }
  Coroutine$loadLoggedInUser.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$loadLoggedInUser.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$loadLoggedInUser.prototype.constructor = Coroutine$loadLoggedInUser;
  Coroutine$loadLoggedInUser.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var $receiver_0 = http;
            var urlString = window.location.origin + '/api/v1/users/@me';
            var host_0;
            var body_0;
            host_0 = 'localhost';
            body_0 = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host_0, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body_0;
            takeFrom($receiver_1.url, urlString);
            get$lambda_7($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(getKClass(HttpResponse), [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = Kotlin.isType(tmp$_4 = $this_0, HttpResponse) ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(getKClass(HttpResponse), call.JsType, createKType(getKClass(HttpResponse), [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = Kotlin.isType(tmp$_6 = this.result_0, HttpResponse) ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = Kotlin.isType(tmp$_5 = this.result_0, HttpResponse) ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            this.local$httpResponse = this.result_0;
            this.state_0 = 10;
            this.result_0 = readText(this.local$httpResponse, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            var payload = this.result_0;
            var jsonPayload = JSON.parse(payload);
            if (!((tmp$ = this.local$httpResponse.status) != null ? tmp$.equals(HttpStatusCode.Companion.OK) : null)) {
              this.$this.debug_yhszz7$(['Get User Request failed - ' + toString(jsonPayload['code'])]);
            }
             else {
              var $receiver = JSON_0.Companion.nonstrict;
              var userIdentification = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(UserIdentification)), payload);
              this.$this.debug_yhszz7$(['Get User Request success! - ' + userIdentification.username + ' (' + userIdentification.id + ')']);
              SpicyMorenitta$Companion_getInstance().INSTANCE.updateLoggedInUser_brvwnn$(userIdentification);
            }

            return;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SpicyMorenitta.prototype.loadLoggedInUser = function (continuation_0, suspended) {
    var instance = new Coroutine$loadLoggedInUser(this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function SpicyMorenitta$updateLoggedInUser$lambda$lambda($receiver) {
    set_style($receiver, '    font-size: 0px;\n    line-height: 0px;\n    width: 40px;\n    height: 40px;\n    position: absolute;\n    top: 3px;\n    border-radius: 100%;');
    return Unit;
  }
  function SpicyMorenitta$updateLoggedInUser$lambda$lambda_0($receiver) {
    set_style($receiver, '    font-size: 0px;\n    line-height: 0px;\n    width: 40px;\n    visibility: hidden;\n    height: 0px;\n    display: inline-block;');
    return Unit;
  }
  function SpicyMorenitta$updateLoggedInUser$lambda$lambda_1(closure$newUser) {
    return function ($receiver) {
      set_style($receiver, 'padding-left: 4px;');
      $receiver.unaryPlus_pdl1vz$(closure$newUser.username);
      return Unit;
    };
  }
  function SpicyMorenitta$updateLoggedInUser$lambda(closure$newUser, closure$extension) {
    return function ($receiver) {
      img_1($receiver, void 0, 'https://cdn.discordapp.com/avatars/' + closure$newUser.id + '/' + toString(closure$newUser.avatar) + '.' + closure$extension + '?size=256', void 0, SpicyMorenitta$updateLoggedInUser$lambda$lambda);
      div_0($receiver, void 0, SpicyMorenitta$updateLoggedInUser$lambda$lambda_0);
      span_0($receiver, void 0, SpicyMorenitta$updateLoggedInUser$lambda$lambda_1(closure$newUser));
      return Unit;
    };
  }
  SpicyMorenitta.prototype.updateLoggedInUser_brvwnn$ = function (newUser) {
    var tmp$, tmp$_0, tmp$_1;
    this.userIdentification = newUser;
    this.debug_yhszz7$(['New user is ' + newUser]);
    var tmp$_2;
    var loginButton = (tmp$_2 = document.querySelector('#login-button')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
    var cloned = loginButton.cloneNode(true);
    Kotlin.isType(tmp$ = cloned, Element) ? tmp$ : throwCCE();
    loginButton.replaceWith(cloned);
    clear(cloned);
    cloned.setAttribute('href', '/br/dashboard');
    this.setUpPageSwitcher_t9mn69$(cloned, '/br/dashboard');
    if (((tmp$_0 = newUser.avatar) != null ? startsWith(tmp$_0, 'a_') : null) === true) {
      tmp$_1 = 'gif';
    }
     else {
      tmp$_1 = 'png';
    }
    var extension = tmp$_1;
    append(cloned, SpicyMorenitta$updateLoggedInUser$lambda(newUser, extension));
  };
  SpicyMorenitta.prototype.onPageChange_co5kb4$ = function (socket, path, content) {
    var tmp$;
    if (!navbarIsSetup) {
      this.addNavbarOptions_vkwai2$(socket);
      navbarIsSetup = true;
    }
    this.debug_yhszz7$(['Current path is ' + path]);
    this.debug_yhszz7$(['Path without locale is ' + WebsiteUtils_getInstance().getPathWithoutLocale()]);
    var $receiver = this.routes;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$_0;
      tmp$_0 = $receiver.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (element.matches_61zpoe$(WebsiteUtils_getInstance().getPathWithoutLocale())) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    var route = firstOrNull$result;
    if (route == null) {
      this.warn_yhszz7$(['No route for ' + WebsiteUtils_getInstance().getPathWithoutLocale() + ' found! Bug? Defaulting to UpdateNavbarSizerPostRender!']);
      route = new UpdateNavbarSizePostRender(WebsiteUtils_getInstance().getPathWithoutLocale());
    }
    var params = route.getPathParameters_61zpoe$(WebsiteUtils_getInstance().getPathWithoutLocale());
    this.debug_yhszz7$(['Parameters: ' + params.entries]);
    var call = new ApplicationCall(params, content);
    if (!route.keepLoadingScreen)
      this.hideLoadingScreen();
    (tmp$ = this.currentRoute) != null ? (tmp$.onUnload(), Unit) : null;
    this.currentRoute = route;
    route.onRender_hjvrm5$(call);
  };
  function Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda(this$SpicyMorenitta_0, closure$path_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$SpicyMorenitta = this$SpicyMorenitta_0;
    this.local$closure$path = closure$path_0;
  }
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda.prototype.constructor = Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda;
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = this.local$this$SpicyMorenitta.sendSwitchPageRequest_yw3f44$(this.local$this$SpicyMorenitta.socket, this.local$closure$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SpicyMorenitta$setUpPageSwitcher$lambda$lambda(this$SpicyMorenitta_0, closure$path_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda(this$SpicyMorenitta_0, closure$path_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function SpicyMorenitta$setUpPageSwitcher$lambda(this$SpicyMorenitta, closure$path) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1;
      if ((typeof (tmp$ = it.ctrlKey) === 'boolean' ? tmp$ : throwCCE()) || (typeof (tmp$_0 = it.metaKey) === 'boolean' ? tmp$_0 : throwCCE()) || (typeof (tmp$_1 = it.shiftKey) === 'boolean' ? tmp$_1 : throwCCE()))
        return;
      it.preventDefault();
      this$SpicyMorenitta.launch_3q5nlj$(SpicyMorenitta$setUpPageSwitcher$lambda$lambda(this$SpicyMorenitta, closure$path));
      return Unit;
    };
  }
  function Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0(closure$startedAt_0, closure$path_0, this$SpicyMorenitta_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$startedAt = closure$startedAt_0;
    this.local$closure$path = closure$path_0;
    this.local$this$SpicyMorenitta = this$SpicyMorenitta_0;
  }
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0.prototype.constructor = Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0;
  Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delay(SpicyMorenitta$Companion_getInstance().CACHE_ON_HOVER_DELAY, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var diff = (new Date()).getTime() - this.local$closure$startedAt.v;
            if (diff >= SpicyMorenitta$Companion_getInstance().CACHE_ON_HOVER_DELAY.toNumber()) {
              this.local$this$SpicyMorenitta.debug_yhszz7$(['Pre caching page (path: ' + this.local$closure$path + ')!']);
              this.state_0 = 3;
              this.result_0 = this.local$this$SpicyMorenitta.cachePageRequest_61zpoe$(this.local$closure$path, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 3:
            return Unit;
          case 4:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0(closure$startedAt_0, closure$path_0, this$SpicyMorenitta_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0(closure$startedAt_0, closure$path_0, this$SpicyMorenitta_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function SpicyMorenitta$setUpPageSwitcher$lambda_0(this$SpicyMorenitta, closure$startedAt, closure$path) {
    return function (it) {
      if (ignoreCacheRequests)
        return;
      it.stopPropagation();
      this$SpicyMorenitta.debug_yhszz7$(['Hovering the button!']);
      closure$startedAt.v = (new Date()).getTime();
      this$SpicyMorenitta.launch_3q5nlj$(SpicyMorenitta$setUpPageSwitcher$lambda$lambda_0(closure$startedAt, closure$path, this$SpicyMorenitta));
      return Unit;
    };
  }
  function SpicyMorenitta$setUpPageSwitcher$lambda_1(closure$startedAt, closure$path, this$SpicyMorenitta) {
    return function (it) {
      it.stopPropagation();
      var diff = (new Date()).getTime() - closure$startedAt.v;
      if (pageCache.containsKey_11rb$(closure$path)) {
        this$SpicyMorenitta.debug_yhszz7$(['Not hovering the button anymore! Hovered for ' + diff + ' & Dropping page cache for ' + closure$path]);
        pageCache.remove_11rb$(closure$path);
      }
      return Unit;
    };
  }
  SpicyMorenitta.prototype.setUpPageSwitcher_t9mn69$ = function (element, path) {
    element.setAttribute('data-preload-activated', 'true');
    onClick(element, SpicyMorenitta$setUpPageSwitcher$lambda(this, path));
    var startedAt = {v: 0.0};
    onMouseEnter(element, SpicyMorenitta$setUpPageSwitcher$lambda_0(this, startedAt, path));
    onMouseLeave(element, SpicyMorenitta$setUpPageSwitcher$lambda_1(startedAt, path, this));
  };
  function SpicyMorenitta$addNavbarOptions$lambda(this$SpicyMorenitta) {
    return function (it) {
      if (true) {
        window.location.href = window.location.origin + '/dashboard';
      }
       else {
        if (this$SpicyMorenitta.userIdentification == null) {
          var popup = window.open(window.location.origin + '/auth', 'popup', 'height=700,width=400');
        }
      }
      return Unit;
    };
  }
  function SpicyMorenitta$addNavbarOptions$lambda_0(it) {
    var body = ensureNotNull(document.body);
    if (hasClass(body, 'dark')) {
      WebsiteThemeUtils_getInstance().changeWebsiteThemeTo_4heyup$(WebsiteThemeUtils$WebsiteTheme$DEFAULT_getInstance(), false);
    }
     else {
      WebsiteThemeUtils_getInstance().changeWebsiteThemeTo_4heyup$(WebsiteThemeUtils$WebsiteTheme$DARK_THEME_getInstance(), false);
    }
    return Unit;
  }
  function SpicyMorenitta$addNavbarOptions$lambda_1(this$SpicyMorenitta, closure$navbar) {
    return function (it) {
      this$SpicyMorenitta.debug_yhszz7$(['Clicked on the hamburger button!']);
      if (hasClass(closure$navbar, 'expanded')) {
        removeClass(closure$navbar, ['expanded']);
        ensureNotNull(document.body).style.overflowY = '';
      }
       else {
        addClass(closure$navbar, ['expanded']);
        ensureNotNull(document.body).style.overflowY = 'hidden';
      }
      return Unit;
    };
  }
  SpicyMorenitta.prototype.addNavbarOptions_vkwai2$ = function (socket) {
    this.debug_yhszz7$(['Adding navbar options!']);
    var tmp$;
    var navbar = (tmp$ = document.querySelector('#navigation-bar')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var tmp$_0;
    var loginButton = (tmp$_0 = document.querySelector('#login-button')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    loginButton != null ? (onClick(loginButton, SpicyMorenitta$addNavbarOptions$lambda(this)), Unit) : null;
    var tmp$_1;
    var themeChangerButton = (tmp$_1 = document.querySelector('#theme-changer-button')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE();
    themeChangerButton != null ? (onClick(themeChangerButton, SpicyMorenitta$addNavbarOptions$lambda_0), Unit) : null;
    var tmp$_2;
    var hamburgerButton = (tmp$_2 = document.querySelector('#hamburger-menu-button')) == null || Kotlin.isType(tmp$_2, Any) ? tmp$_2 : throwCCE();
    hamburgerButton != null ? (onClick(hamburgerButton, SpicyMorenitta$addNavbarOptions$lambda_1(this, navbar)), Unit) : null;
    this.setUpLinkPreloader();
    this.setUpLazyLoad();
    this.debug_yhszz7$(['Redirect buttons added!']);
  };
  SpicyMorenitta.prototype.setUpLinkPreloader = function () {
    var tmp$;
    tmp$ = asList(document.querySelectorAll('a[data-enable-link-preload="true"]:not([data-preload-activated="true"])')).iterator();
    loop_label: while (tmp$.hasNext()) {
      var element = tmp$.next();
      action$break: do {
        var tmp$_0;
        if (Kotlin.isType(element, Element)) {
          this.debug_yhszz7$(['Setting up page switcher for ' + element]);
          var pageUrl = ensureNotNull(element.getAttribute('href'));
          if (startsWith(pageUrl, 'http')) {
            if (!startsWith(pageUrl, window.location.origin))
              break action$break;
            var location = Kotlin.isType(tmp$_0 = document.createElement('a'), HTMLAnchorElement) ? tmp$_0 : throwCCE();
            location.href = pageUrl;
            pageUrl = location.pathname;
          }
          this.setUpPageSwitcher_t9mn69$(element, pageUrl);
        }
      }
       while (false);
    }
  };
  function SpicyMorenitta$setUpLazyLoad$lambda$lambda(closure$el, this$SpicyMorenitta) {
    return function () {
      var diffBetweenElementAndCurrentYPosition = closure$el.getBoundingClientRect().top - window.innerHeight;
      if (0 >= diffBetweenElementAndCurrentYPosition) {
        if (!closure$el.hasAttribute('lazy-load-url'))
          return;
        this$SpicyMorenitta.debug_yhszz7$(['iFrame is going to be displayed on screen! Loading...']);
        var lazyLoadUrl = toString(closure$el.getAttribute('lazy-load-url'));
        closure$el.removeAttribute('lazy-load-url');
        closure$el.setAttribute('src', lazyLoadUrl);
      }
      return Unit;
    };
  }
  function SpicyMorenitta$setUpLazyLoad$lambda$lambda_0(closure$callback) {
    return function (it) {
      closure$callback();
      return Unit;
    };
  }
  function SpicyMorenitta$setUpLazyLoad$lambda$lambda_1(closure$callback) {
    return function (it) {
      closure$callback();
      return Unit;
    };
  }
  function SpicyMorenitta$setUpLazyLoad$lambda$lambda_2(closure$el, this$SpicyMorenitta) {
    return function () {
      var diffBetweenElementAndCurrentYPosition = closure$el.getBoundingClientRect().top - window.innerHeight;
      if (0 >= diffBetweenElementAndCurrentYPosition) {
        if (!closure$el.hasAttribute('lazy-load-url'))
          return;
        this$SpicyMorenitta.debug_yhszz7$(['Image is going to be displayed on screen! Loading...']);
        var lazyLoadUrl = toString(closure$el.getAttribute('lazy-load-url'));
        closure$el.removeAttribute('lazy-load-url');
        closure$el.setAttribute('src', lazyLoadUrl);
      }
      return Unit;
    };
  }
  function SpicyMorenitta$setUpLazyLoad$lambda$lambda_3(closure$callback) {
    return function (it) {
      closure$callback();
      return Unit;
    };
  }
  function SpicyMorenitta$setUpLazyLoad$lambda$lambda_4(closure$callback) {
    return function (it) {
      closure$callback();
      return Unit;
    };
  }
  SpicyMorenitta.prototype.setUpLazyLoad = function () {
    var tmp$;
    tmp$ = asList(document.querySelectorAll('iframe[lazy-load-url]:not([lazy-load-activated="true"])')).iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      var tmp$_0;
      this.debug_yhszz7$(['Setting up iFrame lazy load for ' + element]);
      var el = Kotlin.isType(tmp$_0 = element, Element) ? tmp$_0 : throwCCE();
      el.setAttribute('lazy-load-activated', 'true');
      var callback = SpicyMorenitta$setUpLazyLoad$lambda$lambda(el, this);
      var applyScrollOn = el;
      do {
        applyScrollOn = applyScrollOn != null ? applyScrollOn.parentElement : null;
      }
       while (applyScrollOn != null && !applyScrollOn.hasAttribute('create-scroll-lazy-load-here'));
      if (applyScrollOn != null) {
        onScroll_0(applyScrollOn, SpicyMorenitta$setUpLazyLoad$lambda$lambda_0(callback));
      }
       else {
        onScroll(window, SpicyMorenitta$setUpLazyLoad$lambda$lambda_1(callback));
      }
      callback();
    }
    var tmp$_1;
    tmp$_1 = asList(document.querySelectorAll('img[lazy-load-url]:not([lazy-load-activated="true"]')).iterator();
    while (tmp$_1.hasNext()) {
      var element_0 = tmp$_1.next();
      var tmp$_2;
      this.debug_yhszz7$(['Setting up image lazy load for ' + element_0]);
      var el_0 = Kotlin.isType(tmp$_2 = element_0, Element) ? tmp$_2 : throwCCE();
      el_0.setAttribute('lazy-load-activated', 'true');
      var callback_0 = SpicyMorenitta$setUpLazyLoad$lambda$lambda_2(el_0, this);
      var applyScrollOn2 = el_0;
      do {
        applyScrollOn2 = applyScrollOn2 != null ? applyScrollOn2.parentElement : null;
      }
       while (applyScrollOn2 != null && !applyScrollOn2.hasAttribute('create-scroll-lazy-load-here'));
      if (applyScrollOn2 != null) {
        onScroll_0(applyScrollOn2, SpicyMorenitta$setUpLazyLoad$lambda$lambda_3(callback_0));
      }
       else {
        onScroll(window, SpicyMorenitta$setUpLazyLoad$lambda$lambda_4(callback_0));
      }
      callback_0();
    }
  };
  function Coroutine$sendSwitchPageRequest_yw3f44$($this, socket_0, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 10;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$path = path_0;
  }
  Coroutine$sendSwitchPageRequest_yw3f44$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$sendSwitchPageRequest_yw3f44$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$sendSwitchPageRequest_yw3f44$.prototype.constructor = Coroutine$sendSwitchPageRequest_yw3f44$;
  Coroutine$sendSwitchPageRequest_yw3f44$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            if (this.$this.pageLoadLock.isLocked)
              this.$this.showLoadingScreen_61zpoe$();
            this.local$$receiver = this.$this.pageLoadLock;
            this.state_0 = 1;
            this.result_0 = this.local$$receiver.lock_s8jyv4$(null, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 8;
            if (pageCache.get_11rb$(this.local$path) != null) {
              var result = ensureNotNull(pageCache.get_11rb$(this.local$path));
              pageCache.remove_11rb$(this.local$path);
              ignoreCacheRequests = true;
              this.$this.debug_yhszz7$(['Path ' + this.local$path + " is already cached! Let's use it :3"]);
              this.state_0 = 2;
              this.result_0 = this.$this.switchPage_puj7f4$(this.local$path, result, this);
              if (this.result_0 === COROUTINE_SUSPENDED)
                return COROUTINE_SUSPENDED;
              continue;
            }
             else {
              this.state_0 = 4;
              continue;
            }

          case 2:
            ignoreCacheRequests = false;
            this.exceptionState_0 = 10;
            this.finallyPath_0 = [3];
            this.state_0 = 9;
            continue;
          case 3:
            return;
          case 4:
            this.$this.debug_yhszz7$(['Sending switch page request to ' + this.local$path]);
            switchPageStart = (new Date()).getTime();
            this.$this.showLoadingScreen_61zpoe$();
            this.state_0 = 5;
            this.result_0 = this.$this.getPageContent_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 5:
            var result_0 = this.result_0;
            this.state_0 = 6;
            this.result_0 = this.$this.switchPage_puj7f4$(this.local$path, result_0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 6:
            this.result_0 = Unit;
            this.exceptionState_0 = 10;
            this.finallyPath_0 = [7];
            this.state_0 = 9;
            continue;
          case 7:
            return;
          case 8:
            this.finallyPath_0 = [10];
            this.state_0 = 9;
            continue;
          case 9:
            this.exceptionState_0 = 10;
            this.local$$receiver.unlock_s8jyv4$(null);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 10:
            throw this.exception_0;
          default:this.state_0 = 10;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 10) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SpicyMorenitta.prototype.sendSwitchPageRequest_yw3f44$ = function (socket_0, path_0, continuation_0, suspended) {
    var instance = new Coroutine$sendSwitchPageRequest_yw3f44$(this, socket_0, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  SpicyMorenitta.prototype.switchPage_puj7f4$ = function (path, content, continuation) {
    var tmp$;
    var $receiver = document.createElement('html');
    $receiver.innerHTML = content;
    var temporary = $receiver;
    var tmp$_0;
    var temporaryBody = (tmp$_0 = temporary.querySelector('#content')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    var tmp$_1;
    var title = (tmp$ = (tmp$_1 = temporary.querySelector('title')) == null || Kotlin.isType(tmp$_1, Any) ? tmp$_1 : throwCCE()) != null ? tmp$.innerHTML : null;
    this.debug_yhszz7$(['New title is ' + toString(title)]);
    if (title != null)
      document.title = title;
    this.currentPath = path;
    window.history.pushState(null, '', path);
    this.onPageChange_co5kb4$(this.socket, path, temporaryBody);
    var end = (new Date()).getTime();
    this.info_yhszz7$([(end - switchPageStart).toString() + 'ms - Page: ' + path]);
  };
  function Coroutine$cachePageRequest_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$$receiver = void 0;
    this.local$path = path_0;
  }
  Coroutine$cachePageRequest_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$cachePageRequest_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$cachePageRequest_61zpoe$.prototype.constructor = Coroutine$cachePageRequest_61zpoe$;
  Coroutine$cachePageRequest_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.local$$receiver = this.$this.pageLoadLock;
            this.state_0 = 1;
            this.result_0 = this.local$$receiver.lock_s8jyv4$(null, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            this.exceptionState_0 = 4;
            this.$this.debug_yhszz7$(['Sending cache page request to ' + this.local$path]);
            switchPageStart = (new Date()).getTime();
            this.state_0 = 2;
            this.result_0 = this.$this.getPageContent_61zpoe$(this.local$path, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            var result = this.result_0;
            pageCache.put_xwzc9p$(this.local$path, result);
            this.result_0 = Unit;
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            return;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            this.local$$receiver.unlock_s8jyv4$(null);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SpicyMorenitta.prototype.cachePageRequest_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$cachePageRequest_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function SpicyMorenitta$getPageContent$lambda(closure$path) {
    return function ($receiver) {
      url($receiver, window.location.origin + closure$path);
      header($receiver, 'Preloading-Page', true);
      return Unit;
    };
  }
  function Coroutine$getPageContent_61zpoe$($this, path_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$response = void 0;
    this.local$path = path_0;
  }
  Coroutine$getPageContent_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$getPageContent_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$getPageContent_61zpoe$.prototype.constructor = Coroutine$getPageContent_61zpoe$;
  Coroutine$getPageContent_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            SpicyMorenitta$getPageContent$lambda(this.local$path)($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            return result;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  SpicyMorenitta.prototype.getPageContent_61zpoe$ = function (path_0, continuation_0, suspended) {
    var instance = new Coroutine$getPageContent_61zpoe$(this, path_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  SpicyMorenitta.prototype.showLoadingScreen_61zpoe$ = function (text) {
    if (text === void 0)
      text = get_locale_0().get_25kzsl$('loritta.loading', []) + '...';
    var tmp$;
    var $receiver = (tmp$ = document.querySelector('#loading-screen')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var tmp$_0;
    ((tmp$_0 = $receiver.querySelector('.loading-text')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).textContent = text;
    $receiver.style.opacity = '1';
  };
  SpicyMorenitta.prototype.hideLoadingScreen = function () {
    var tmp$;
    ((tmp$ = document.querySelector('#loading-screen')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).style.opacity = '0';
  };
  SpicyMorenitta.prototype.launch_3q5nlj$ = function (block) {
    var job = launch(coroutines.GlobalScope, void 0, void 0, block);
    this.pageSpecificTasks.add_11rb$(job);
    return job;
  };
  SpicyMorenitta.prototype.fixLeftSidebarScroll_o14v8n$ = function (call) {
    var tmp$;
    var leftSidebar = (tmp$ = document.querySelector('#left-sidebar')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    var oldScroll = leftSidebar.scrollTop;
    call();
    var tmp$_0;
    var newLeftSidebar = (tmp$_0 = document.querySelector('#left-sidebar')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
    newLeftSidebar.scrollTop = oldScroll;
  };
  SpicyMorenitta.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SpicyMorenitta',
    interfaces: [Logging]
  };
  function main(args) {
    var spicyMorenitta = new SpicyMorenitta();
    spicyMorenitta.start();
  }
  function Trunfo() {
    Trunfo_instance = this;
    this.currentStatus = 'UNKNOWN';
    this.ws_ia9zq7$_0 = this.ws_ia9zq7$_0;
    this.currentPopup = null;
    this.player1Name = '???';
    this.player1Avatar = '???';
    this.player2Name = '???';
    this.player2Avatar = '???';
    this.isMyTurn = false;
    this.errou_fgio9g$_0 = lazy(Trunfo$errou$lambda);
    this.dogResidue_lfo2ni$_0 = lazy(Trunfo$dogResidue$lambda);
  }
  Object.defineProperty(Trunfo.prototype, 'ws', {
    get: function () {
      if (this.ws_ia9zq7$_0 == null)
        return throwUPAE('ws');
      return this.ws_ia9zq7$_0;
    },
    set: function (ws) {
      this.ws_ia9zq7$_0 = ws;
    }
  });
  Object.defineProperty(Trunfo.prototype, 'errou', {
    get: function () {
      return this.errou_fgio9g$_0.value;
    }
  });
  Object.defineProperty(Trunfo.prototype, 'dogResidue', {
    get: function () {
      return this.dogResidue_lfo2ni$_0.value;
    }
  });
  function Trunfo$connectToServer$lambda$lambda($receiver) {
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Conectando ao Matchmaking...');
    return Unit;
  }
  function Trunfo$connectToServer$lambda($receiver) {
    img($receiver, void 0, 'https://cdn.discordapp.com/emojis/621886615899471891.gif?v=1', void 0, Trunfo$connectToServer$lambda$lambda);
    div($receiver, void 0, Trunfo$connectToServer$lambda$lambda_0);
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Autenticando...');
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda_1($receiver) {
    img($receiver, void 0, 'https://cdn.discordapp.com/emojis/621886615899471891.gif?v=1', void 0, Trunfo$connectToServer$lambda$lambda$lambda);
    div($receiver, void 0, Trunfo$connectToServer$lambda$lambda$lambda_0);
    return Unit;
  }
  function Trunfo$connectToServer$lambda$ObjectLiteral() {
    this.status = 'JOIN_MATCHMAKING';
  }
  Trunfo$connectToServer$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function Trunfo$connectToServer$lambda_0(this$Trunfo) {
    return function (it) {
      var tmp$;
      (tmp$ = this$Trunfo.currentPopup) != null ? (tmp$.remove(), Unit) : null;
      this$Trunfo.currentPopup = TrunfoGame_getInstance().openPopup_q7bkhe$(Trunfo$connectToServer$lambda$lambda_1);
      this$Trunfo.ws.send(JSON.stringify(new Trunfo$connectToServer$lambda$ObjectLiteral()));
      return Unit;
    };
  }
  function Trunfo$connectToServer$lambda$ObjectLiteral_0() {
    this.status = 'PONG';
  }
  Trunfo$connectToServer$lambda$ObjectLiteral_0.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function Trunfo$connectToServer$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('N\xE3o autorizado, redirecionando...');
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda_2($receiver) {
    div($receiver, void 0, Trunfo$connectToServer$lambda$lambda$lambda_1);
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda$lambda_2($receiver) {
    $receiver.unaryPlus_pdl1vz$('Sala fechada, talvez o seu amiguchx tenha saido da sala...');
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda_3($receiver) {
    div($receiver, void 0, Trunfo$connectToServer$lambda$lambda$lambda_2);
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda$lambda_3($receiver) {
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda$lambda_4($receiver) {
    $receiver.unaryPlus_pdl1vz$('Esperando por jogadores...');
    return Unit;
  }
  function Trunfo$connectToServer$lambda$lambda_4($receiver) {
    img($receiver, void 0, 'https://cdn.discordapp.com/emojis/621886615899471891.gif?v=1', void 0, Trunfo$connectToServer$lambda$lambda$lambda_3);
    div($receiver, void 0, Trunfo$connectToServer$lambda$lambda$lambda_4);
    return Unit;
  }
  function Trunfo$connectToServer$lambda_1(this$Trunfo) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8, tmp$_9, tmp$_10, tmp$_11, tmp$_12, tmp$_13;
      var payload = typeof (tmp$ = it.data) === 'string' ? tmp$ : throwCCE();
      this$Trunfo.debug_yhszz7$([payload]);
      var json = JSON.parse(payload);
      var _currentStatus = (tmp$_0 = json['status']) == null || typeof tmp$_0 === 'string' ? tmp$_0 : throwCCE();
      if (_currentStatus != null) {
        this$Trunfo.currentStatus = _currentStatus;
      }
      if (equals(this$Trunfo.currentStatus, 'PING')) {
        this$Trunfo.debug_yhszz7$(['Ping received... pong!']);
        this$Trunfo.ws.send(JSON.stringify(new Trunfo$connectToServer$lambda$ObjectLiteral_0()));
      }
       else if (equals(this$Trunfo.currentStatus, 'UNAUTHORIZED')) {
        (tmp$_1 = this$Trunfo.currentPopup) != null ? (tmp$_1.remove(), Unit) : null;
        this$Trunfo.currentPopup = TrunfoGame_getInstance().openPopup_q7bkhe$(Trunfo$connectToServer$lambda$lambda_2);
        window.location.replace('https://discordapp.com/oauth2/authorize?client_id=297153970613387264&scope=identify+guilds+email+guilds.join&permissions=2080374975&response_type=code&redirect_uri=https://loritta.website/dashboard&state=eyJyZWRpcmVjdFVybCI6Imh0dHBzOi8vdHJ1bmZvLmxvcml0dGEud2Vic2l0ZS9pbmRleF9rb3RsaW4uaHRtbCJ9');
      }
       else if (equals(this$Trunfo.currentStatus, 'CLOSED')) {
        (tmp$_2 = this$Trunfo.currentPopup) != null ? (tmp$_2.remove(), Unit) : null;
        this$Trunfo.currentPopup = TrunfoGame_getInstance().openPopup_q7bkhe$(Trunfo$connectToServer$lambda$lambda_3);
      }
       else if (equals(this$Trunfo.currentStatus, 'WAITING_FOR_PLAYERS')) {
        (tmp$_3 = this$Trunfo.currentPopup) != null ? (tmp$_3.remove(), Unit) : null;
        this$Trunfo.currentPopup = TrunfoGame_getInstance().openPopup_q7bkhe$(Trunfo$connectToServer$lambda$lambda_4);
      }
       else if (equals(this$Trunfo.currentStatus, 'YOU_WON')) {
        var tmp$_14;
        ((tmp$_14 = document.querySelector('#waiting-for-something')) == null || Kotlin.isType(tmp$_14, Any) ? tmp$_14 : throwCCE()).innerHTML = 'Voc\xEA venceu o jogo! Parab\xE9ns ^-^';
      }
       else if (equals(this$Trunfo.currentStatus, 'YOU_LOST')) {
        var tmp$_15;
        ((tmp$_15 = document.querySelector('#waiting-for-something')) == null || Kotlin.isType(tmp$_15, Any) ? tmp$_15 : throwCCE()).innerHTML = 'Voc\xEA perdeu o jogo... Mas obrigado por jogar! ;w;';
      }
       else if (equals(this$Trunfo.currentStatus, 'PLAYING')) {
        (tmp$_4 = this$Trunfo.currentPopup) != null ? (tmp$_4.remove(), Unit) : null;
        var tmp$_16;
        this$Trunfo.debug_yhszz7$([(tmp$_16 = document.querySelector('#game')) == null || Kotlin.isType(tmp$_16, Any) ? tmp$_16 : throwCCE()]);
        var tmp$_17;
        if (((tmp$_17 = document.querySelector('#game')) == null || Kotlin.isType(tmp$_17, Any) ? tmp$_17 : throwCCE()) == null)
          this$Trunfo.buildStage();
        var tmp$_18;
        addClass((tmp$_18 = document.querySelector('#opponent-card')) == null || Kotlin.isType(tmp$_18, Any) ? tmp$_18 : throwCCE(), ['blurred']);
        var tmp$_19;
        removeClass((tmp$_19 = document.querySelector('#your-card .age-entry')) == null || Kotlin.isType(tmp$_19, Any) ? tmp$_19 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_20;
        removeClass((tmp$_20 = document.querySelector('#opponent-card .age-entry')) == null || Kotlin.isType(tmp$_20, Any) ? tmp$_20 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_21;
        removeClass((tmp$_21 = document.querySelector('#your-card .height-entry')) == null || Kotlin.isType(tmp$_21, Any) ? tmp$_21 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_22;
        removeClass((tmp$_22 = document.querySelector('#opponent-card .height-entry')) == null || Kotlin.isType(tmp$_22, Any) ? tmp$_22 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_23;
        removeClass((tmp$_23 = document.querySelector('#your-card .weight-entry')) == null || Kotlin.isType(tmp$_23, Any) ? tmp$_23 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_24;
        removeClass((tmp$_24 = document.querySelector('#opponent-card .weight-entry')) == null || Kotlin.isType(tmp$_24, Any) ? tmp$_24 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_25;
        removeClass((tmp$_25 = document.querySelector('#your-card .power-entry')) == null || Kotlin.isType(tmp$_25, Any) ? tmp$_25 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_26;
        removeClass((tmp$_26 = document.querySelector('#opponent-card .power-entry')) == null || Kotlin.isType(tmp$_26, Any) ? tmp$_26 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_27;
        removeClass((tmp$_27 = document.querySelector('#your-card .fame-entry')) == null || Kotlin.isType(tmp$_27, Any) ? tmp$_27 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_28;
        removeClass((tmp$_28 = document.querySelector('#opponent-card .fame-entry')) == null || Kotlin.isType(tmp$_28, Any) ? tmp$_28 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_29;
        removeClass((tmp$_29 = document.querySelector('#your-card .intelligence-entry')) == null || Kotlin.isType(tmp$_29, Any) ? tmp$_29 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_30;
        removeClass((tmp$_30 = document.querySelector('#opponent-card .intelligence-entry')) == null || Kotlin.isType(tmp$_30, Any) ? tmp$_30 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_31;
        removeClass((tmp$_31 = document.querySelector('#your-card .cuteness-entry')) == null || Kotlin.isType(tmp$_31, Any) ? tmp$_31 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_32;
        removeClass((tmp$_32 = document.querySelector('#opponent-card .cuteness-entry')) == null || Kotlin.isType(tmp$_32, Any) ? tmp$_32 : throwCCE(), ['pop-out', 'green', 'red']);
        var tmp$_33;
        ((tmp$_33 = document.querySelector('#waiting-for-something')) == null || Kotlin.isType(tmp$_33, Any) ? tmp$_33 : throwCCE()).innerHTML = 'Esperando...';
        var isMyTurn = json['isMyTurn'];
        var howManyCards = json['howManyCards'];
        var howManyOpponentCards = json['howManyOpponentCards'];
        var tmp$_34;
        ((tmp$_34 = document.querySelector('#player-1-card-count')) == null || Kotlin.isType(tmp$_34, Any) ? tmp$_34 : throwCCE()).innerHTML = toString(howManyCards);
        var tmp$_35;
        ((tmp$_35 = document.querySelector('#player-2-card-count')) == null || Kotlin.isType(tmp$_35, Any) ? tmp$_35 : throwCCE()).innerHTML = toString(howManyOpponentCards);
        var card = Kotlin.isType(tmp$_5 = json['currentCard'], Object) ? tmp$_5 : throwCCE();
        var tmp$_36;
        this$Trunfo.fillCardInfo_3o3rwt$(card, (tmp$_36 = document.querySelector('#your-card')) == null || Kotlin.isType(tmp$_36, Any) ? tmp$_36 : throwCCE());
        var tmp$_37;
        ((tmp$_37 = document.querySelector('#opponent-card .header')) == null || Kotlin.isType(tmp$_37, Any) ? tmp$_37 : throwCCE()).style.backgroundImage = "url('https://via.placeholder.com/128')";
        var tmp$_38;
        ((tmp$_38 = document.querySelector('#opponent-card .card-name')) == null || Kotlin.isType(tmp$_38, Any) ? tmp$_38 : throwCCE()).innerHTML = 'Segredo uwu';
        var tmp$_39;
        ((tmp$_39 = document.querySelector('#opponent-card .age-card')) == null || Kotlin.isType(tmp$_39, Any) ? tmp$_39 : throwCCE()).innerHTML = '???';
        var tmp$_40;
        ((tmp$_40 = document.querySelector('#opponent-card .height-card')) == null || Kotlin.isType(tmp$_40, Any) ? tmp$_40 : throwCCE()).innerHTML = '???';
        var tmp$_41;
        ((tmp$_41 = document.querySelector('#opponent-card .weight-card')) == null || Kotlin.isType(tmp$_41, Any) ? tmp$_41 : throwCCE()).innerHTML = '???';
        var tmp$_42;
        ((tmp$_42 = document.querySelector('#opponent-card .power-card')) == null || Kotlin.isType(tmp$_42, Any) ? tmp$_42 : throwCCE()).innerHTML = '???';
        var tmp$_43;
        ((tmp$_43 = document.querySelector('#opponent-card .cuteness-card')) == null || Kotlin.isType(tmp$_43, Any) ? tmp$_43 : throwCCE()).innerHTML = '???';
        var tmp$_44;
        ((tmp$_44 = document.querySelector('#opponent-card .intelligence-card')) == null || Kotlin.isType(tmp$_44, Any) ? tmp$_44 : throwCCE()).innerHTML = '???';
        var tmp$_45;
        ((tmp$_45 = document.querySelector('#opponent-card .fame-card')) == null || Kotlin.isType(tmp$_45, Any) ? tmp$_45 : throwCCE()).innerHTML = '???';
        tmp$_7 = typeof (tmp$_6 = isMyTurn) === 'boolean' ? tmp$_6 : throwCCE();
        this$Trunfo.toggleDisabledStatus_6taknv$(tmp$_7);
      }
       else if (equals(this$Trunfo.currentStatus, 'SET_PLAYER_NAMES')) {
        this$Trunfo.player1Name = typeof (tmp$_8 = json['player1']) === 'string' ? tmp$_8 : throwCCE();
        this$Trunfo.player1Avatar = typeof (tmp$_9 = json['player1Avatar']) === 'string' ? tmp$_9 : throwCCE();
        this$Trunfo.player2Name = typeof (tmp$_10 = json['player2']) === 'string' ? tmp$_10 : throwCCE();
        this$Trunfo.player2Avatar = typeof (tmp$_11 = json['player2Avatar']) === 'string' ? tmp$_11 : throwCCE();
      }
       else if (equals(this$Trunfo.currentStatus, 'SEND_ROUND_STATS')) {
        var whatHappened = json['whatHappened'];
        if (equals(whatHappened, 'TIE')) {
          var tmp$_46;
          ((tmp$_46 = document.querySelector('#waiting-for-something')) == null || Kotlin.isType(tmp$_46, Any) ? tmp$_46 : throwCCE()).innerHTML = 'Empate...';
        }
        if (equals(whatHappened, 'YOU_WON')) {
          var tmp$_47;
          ((tmp$_47 = document.querySelector('#waiting-for-something')) == null || Kotlin.isType(tmp$_47, Any) ? tmp$_47 : throwCCE()).innerHTML = 'Voc\xEA ganhou a rodada!';
          var card_0 = Kotlin.isType(tmp$_12 = json['opponentCard'], Object) ? tmp$_12 : throwCCE();
          var tmp$_48;
          this$Trunfo.fillCardInfo_3o3rwt$(card_0, (tmp$_48 = document.querySelector('#opponent-card')) == null || Kotlin.isType(tmp$_48, Any) ? tmp$_48 : throwCCE());
          var withWhatStats = json['withWhatStats'];
          console.log(withWhatStats);
          var tmp$_49;
          addClass((tmp$_49 = document.querySelector('#opponent-card .' + toString(withWhatStats) + '-entry')) == null || Kotlin.isType(tmp$_49, Any) ? tmp$_49 : throwCCE(), ['pop-out green']);
          var tmp$_50;
          addClass((tmp$_50 = document.querySelector('#your-card .' + toString(withWhatStats) + '-entry')) == null || Kotlin.isType(tmp$_50, Any) ? tmp$_50 : throwCCE(), ['pop-out green']);
          this$Trunfo.dogResidue.play();
          var tmp$_51;
          removeClass((tmp$_51 = document.querySelector('#opponent-card')) == null || Kotlin.isType(tmp$_51, Any) ? tmp$_51 : throwCCE(), ['blurred']);
        }
        if (equals(whatHappened, 'YOU_LOST')) {
          var tmp$_52;
          ((tmp$_52 = document.querySelector('#waiting-for-something')) == null || Kotlin.isType(tmp$_52, Any) ? tmp$_52 : throwCCE()).innerHTML = 'Voc\xEA perdeu a rodada...';
          var card_1 = Kotlin.isType(tmp$_13 = json['opponentCard'], Object) ? tmp$_13 : throwCCE();
          var tmp$_53;
          this$Trunfo.fillCardInfo_3o3rwt$(card_1, (tmp$_53 = document.querySelector('#opponent-card')) == null || Kotlin.isType(tmp$_53, Any) ? tmp$_53 : throwCCE());
          var withWhatStats_0 = json['withWhatStats'];
          console.log(withWhatStats_0);
          var tmp$_54;
          addClass((tmp$_54 = document.querySelector('#opponent-card .' + toString(withWhatStats_0) + '-entry')) == null || Kotlin.isType(tmp$_54, Any) ? tmp$_54 : throwCCE(), ['pop-out red']);
          var tmp$_55;
          addClass((tmp$_55 = document.querySelector('#your-card .' + toString(withWhatStats_0) + '-entry')) == null || Kotlin.isType(tmp$_55, Any) ? tmp$_55 : throwCCE(), ['pop-out red']);
          this$Trunfo.errou.play();
          var tmp$_56;
          removeClass((tmp$_56 = document.querySelector('#opponent-card')) == null || Kotlin.isType(tmp$_56, Any) ? tmp$_56 : throwCCE(), ['blurred']);
        }
      }
      return Unit;
    };
  }
  function Trunfo$connectToServer$lambda_2(it) {
    window.alert('Conex\xE3o perdida...');
    return Unit;
  }
  Trunfo.prototype.connectToServer = function () {
    var tmp$;
    (tmp$ = this.currentPopup) != null ? (tmp$.remove(), Unit) : null;
    this.currentPopup = TrunfoGame_getInstance().openPopup_q7bkhe$(Trunfo$connectToServer$lambda);
    this.ws = new WebSocket('wss://' + window.location.hostname + '/ws');
    this.ws.onopen = Trunfo$connectToServer$lambda_0(this);
    this.ws.onmessage = Trunfo$connectToServer$lambda_1(this);
    this.ws.onclose = Trunfo$connectToServer$lambda_2;
  };
  Trunfo.prototype.fillCardInfo_3o3rwt$ = function (json, element) {
    var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6;
    var tmp$_7;
    ((tmp$_7 = element.querySelector('.header')) == null || Kotlin.isType(tmp$_7, Any) ? tmp$_7 : throwCCE()).style.backgroundImage = "url('" + toString(json['imageUrl']) + "')";
    var tmp$_8;
    ((tmp$_8 = element.querySelector('.card-name')) == null || Kotlin.isType(tmp$_8, Any) ? tmp$_8 : throwCCE()).innerHTML = typeof (tmp$ = json['name']) === 'string' ? tmp$ : throwCCE();
    var tmp$_9;
    ((tmp$_9 = element.querySelector('.age-card')) == null || Kotlin.isType(tmp$_9, Any) ? tmp$_9 : throwCCE()).innerHTML = (typeof (tmp$_0 = json['age']) === 'number' ? tmp$_0 : throwCCE()).toString();
    var tmp$_10;
    ((tmp$_10 = element.querySelector('.height-card')) == null || Kotlin.isType(tmp$_10, Any) ? tmp$_10 : throwCCE()).innerHTML = (typeof (tmp$_1 = json['height']) === 'number' ? tmp$_1 : throwCCE()).toString();
    var tmp$_11;
    ((tmp$_11 = element.querySelector('.weight-card')) == null || Kotlin.isType(tmp$_11, Any) ? tmp$_11 : throwCCE()).innerHTML = (typeof (tmp$_2 = json['weight']) === 'number' ? tmp$_2 : throwCCE()).toString();
    var tmp$_12;
    ((tmp$_12 = element.querySelector('.power-card')) == null || Kotlin.isType(tmp$_12, Any) ? tmp$_12 : throwCCE()).innerHTML = (typeof (tmp$_3 = json['power']) === 'number' ? tmp$_3 : throwCCE()).toString();
    var tmp$_13;
    ((tmp$_13 = element.querySelector('.cuteness-card')) == null || Kotlin.isType(tmp$_13, Any) ? tmp$_13 : throwCCE()).innerHTML = (typeof (tmp$_4 = json['cuteness']) === 'number' ? tmp$_4 : throwCCE()).toString();
    var tmp$_14;
    ((tmp$_14 = element.querySelector('.intelligence-card')) == null || Kotlin.isType(tmp$_14, Any) ? tmp$_14 : throwCCE()).innerHTML = (typeof (tmp$_5 = json['intelligence']) === 'number' ? tmp$_5 : throwCCE()).toString();
    var tmp$_15;
    ((tmp$_15 = element.querySelector('.fame-card')) == null || Kotlin.isType(tmp$_15, Any) ? tmp$_15 : throwCCE()).innerHTML = (typeof (tmp$_6 = json['fame']) === 'number' ? tmp$_6 : throwCCE()).toString();
  };
  Trunfo.prototype.toggleDisabledStatus_6taknv$ = function (isMyTurn) {
    this.isMyTurn = isMyTurn;
    if (isMyTurn) {
      var tmp$;
      ((tmp$ = document.querySelector('#is-what-now')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).innerHTML = 'Escolha um atributo que voc\xEA ache que seja maior que a carta do seu oponente!';
    }
     else {
      var tmp$_0;
      ((tmp$_0 = document.querySelector('#is-what-now')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE()).innerHTML = 'Agora \xE9 a vez do seu oponente... tor\xE7a que ele escolha um atributo que tenha um valor menor que o da sua carta!';
    }
  };
  function Trunfo$buildStage$lambda$lambda$lambda(this$Trunfo) {
    return function ($receiver) {
      set_id($receiver, 'top-bar');
      this$Trunfo.buildPlayerNavbar_4ygvh0$($receiver, '1');
      this$Trunfo.buildPlayerNavbar_4ygvh0$($receiver, '2');
      return Unit;
    };
  }
  function Trunfo$buildStage$lambda$lambda$lambda_0($receiver) {
    set_id($receiver, 'waiting-bar');
    return Unit;
  }
  function Trunfo$buildStage$lambda$lambda$lambda$lambda($receiver) {
    set_id($receiver, 'waiting-for-something');
    return Unit;
  }
  function Trunfo$buildStage$lambda$lambda$lambda$lambda_0($receiver) {
    set_id($receiver, 'is-what-now');
    return Unit;
  }
  function Trunfo$buildStage$lambda$lambda$lambda_1($receiver) {
    h3($receiver, void 0, Trunfo$buildStage$lambda$lambda$lambda$lambda);
    p($receiver, void 0, Trunfo$buildStage$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function Trunfo$buildStage$lambda$lambda$lambda_2(this$Trunfo) {
    return function ($receiver) {
      this$Trunfo.buildCard_zid4s3$($receiver, 'your-card', true);
      this$Trunfo.buildCard_zid4s3$($receiver, 'opponent-card', false);
      return Unit;
    };
  }
  function Trunfo$buildStage$lambda$lambda(this$Trunfo) {
    return function ($receiver) {
      set_id($receiver, 'game');
      div($receiver, void 0, Trunfo$buildStage$lambda$lambda$lambda(this$Trunfo));
      div($receiver, void 0, Trunfo$buildStage$lambda$lambda$lambda_0);
      div($receiver, 'game-info', Trunfo$buildStage$lambda$lambda$lambda_1);
      div($receiver, 'cards', Trunfo$buildStage$lambda$lambda$lambda_2(this$Trunfo));
      return Unit;
    };
  }
  function Trunfo$buildStage$lambda(this$Trunfo) {
    return function ($receiver) {
      div_0($receiver, void 0, Trunfo$buildStage$lambda$lambda(this$Trunfo));
      return Unit;
    };
  }
  Trunfo.prototype.buildStage = function () {
    append(ensureNotNull(document.body), Trunfo$buildStage$lambda(this));
  };
  function Trunfo$buildPlayerNavbar$lambda$lambda($receiver) {
    return Unit;
  }
  function Trunfo$buildPlayerNavbar$lambda$lambda$lambda(closure$playerCount, this$Trunfo) {
    return function ($receiver) {
      set_id($receiver, 'player-' + closure$playerCount + '-name');
      if (equals(closure$playerCount, '1')) {
        $receiver.unaryPlus_pdl1vz$(this$Trunfo.player1Name);
      }
       else {
        $receiver.unaryPlus_pdl1vz$(this$Trunfo.player2Name);
      }
      return Unit;
    };
  }
  function Trunfo$buildPlayerNavbar$lambda$lambda$lambda$lambda(closure$playerCount) {
    return function ($receiver) {
      set_id($receiver, 'player-' + closure$playerCount + '-card-count');
      $receiver.unaryPlus_pdl1vz$('X');
      return Unit;
    };
  }
  function Trunfo$buildPlayerNavbar$lambda$lambda$lambda_0(closure$playerCount) {
    return function ($receiver) {
      span($receiver, void 0, Trunfo$buildPlayerNavbar$lambda$lambda$lambda$lambda(closure$playerCount));
      $receiver.unaryPlus_pdl1vz$(' cartas');
      return Unit;
    };
  }
  function Trunfo$buildPlayerNavbar$lambda$lambda_0(closure$playerCount, this$Trunfo) {
    return function ($receiver) {
      div($receiver, 'bar-name', Trunfo$buildPlayerNavbar$lambda$lambda$lambda(closure$playerCount, this$Trunfo));
      div($receiver, 'bar-stats', Trunfo$buildPlayerNavbar$lambda$lambda$lambda_0(closure$playerCount));
      return Unit;
    };
  }
  function Trunfo$buildPlayerNavbar$lambda(closure$playerCount, this$Trunfo) {
    return function ($receiver) {
      img($receiver, void 0, equals(closure$playerCount, '1') ? this$Trunfo.player1Avatar : this$Trunfo.player2Avatar, 'bar-avatar', Trunfo$buildPlayerNavbar$lambda$lambda);
      div($receiver, 'bar-name-and-stats', Trunfo$buildPlayerNavbar$lambda$lambda_0(closure$playerCount, this$Trunfo));
      return Unit;
    };
  }
  Trunfo.prototype.buildPlayerNavbar_4ygvh0$ = function ($receiver, playerCount) {
    div($receiver, 'player-entry', Trunfo$buildPlayerNavbar$lambda(playerCount, this));
  };
  function Trunfo$buildCard$lambda$lambda($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Nome da Carta');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda(this$Trunfo) {
    return function (it) {
      if (this$Trunfo.isMyTurn)
        this$Trunfo.sendSelectionData('height');
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_0($receiver) {
    i($receiver, 'fas fa-sort-amount-up', Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda);
    $receiver.unaryPlus_pdl1vz$(' Altura');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('???');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      if (closure$setClick) {
        set_onClickFunction($receiver, Trunfo$buildCard$lambda$lambda$lambda$lambda(this$Trunfo));
      }
      div($receiver, 'name', Trunfo$buildCard$lambda$lambda$lambda$lambda_0);
      div($receiver, 'value height-card', Trunfo$buildCard$lambda$lambda$lambda$lambda_1);
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_2(this$Trunfo) {
    return function (it) {
      if (this$Trunfo.isMyTurn)
        this$Trunfo.sendSelectionData('age');
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_3($receiver) {
    i($receiver, 'fas fa-birthday-cake', Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_0);
    $receiver.unaryPlus_pdl1vz$(' Idade');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_4($receiver) {
    $receiver.unaryPlus_pdl1vz$('???');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda_0(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      if (closure$setClick) {
        set_onClickFunction($receiver, Trunfo$buildCard$lambda$lambda$lambda$lambda_2(this$Trunfo));
      }
      div($receiver, 'name', Trunfo$buildCard$lambda$lambda$lambda$lambda_3);
      div($receiver, 'value age-card', Trunfo$buildCard$lambda$lambda$lambda$lambda_4);
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_5(this$Trunfo) {
    return function (it) {
      if (this$Trunfo.isMyTurn)
        this$Trunfo.sendSelectionData('weight');
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_6($receiver) {
    i($receiver, 'fas fa-weight', Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_1);
    $receiver.unaryPlus_pdl1vz$(' Peso');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_7($receiver) {
    $receiver.unaryPlus_pdl1vz$('???');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda_1(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      if (closure$setClick) {
        set_onClickFunction($receiver, Trunfo$buildCard$lambda$lambda$lambda$lambda_5(this$Trunfo));
      }
      div($receiver, 'name', Trunfo$buildCard$lambda$lambda$lambda$lambda_6);
      div($receiver, 'value weight-card', Trunfo$buildCard$lambda$lambda$lambda$lambda_7);
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_8(this$Trunfo) {
    return function (it) {
      if (this$Trunfo.isMyTurn)
        this$Trunfo.sendSelectionData('power');
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_9($receiver) {
    i($receiver, 'fas fa-fist-raised', Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_2);
    $receiver.unaryPlus_pdl1vz$(' Poder');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_10($receiver) {
    $receiver.unaryPlus_pdl1vz$('???');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda_2(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      if (closure$setClick) {
        set_onClickFunction($receiver, Trunfo$buildCard$lambda$lambda$lambda$lambda_8(this$Trunfo));
      }
      div($receiver, 'name', Trunfo$buildCard$lambda$lambda$lambda$lambda_9);
      div($receiver, 'value power-card', Trunfo$buildCard$lambda$lambda$lambda$lambda_10);
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_11(this$Trunfo) {
    return function (it) {
      if (this$Trunfo.isMyTurn)
        this$Trunfo.sendSelectionData('cuteness');
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_3($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_12($receiver) {
    i($receiver, 'fas fa-heart', Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_3);
    $receiver.unaryPlus_pdl1vz$(' Fofura');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_13($receiver) {
    $receiver.unaryPlus_pdl1vz$('???');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda_3(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      if (closure$setClick) {
        set_onClickFunction($receiver, Trunfo$buildCard$lambda$lambda$lambda$lambda_11(this$Trunfo));
      }
      div($receiver, 'name', Trunfo$buildCard$lambda$lambda$lambda$lambda_12);
      div($receiver, 'value cuteness-card', Trunfo$buildCard$lambda$lambda$lambda$lambda_13);
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_14(this$Trunfo) {
    return function (it) {
      if (this$Trunfo.isMyTurn)
        this$Trunfo.sendSelectionData('intelligence');
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_4($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_15($receiver) {
    i($receiver, 'fas fa-brain', Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_4);
    $receiver.unaryPlus_pdl1vz$(' Intelig\xEAncia');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_16($receiver) {
    $receiver.unaryPlus_pdl1vz$('???');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda_4(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      if (closure$setClick) {
        set_onClickFunction($receiver, Trunfo$buildCard$lambda$lambda$lambda$lambda_14(this$Trunfo));
      }
      div($receiver, 'name', Trunfo$buildCard$lambda$lambda$lambda$lambda_15);
      div($receiver, 'value intelligence-card', Trunfo$buildCard$lambda$lambda$lambda$lambda_16);
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_17(this$Trunfo) {
    return function (it) {
      if (this$Trunfo.isMyTurn)
        this$Trunfo.sendSelectionData('fame');
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_5($receiver) {
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_18($receiver) {
    i($receiver, 'fas fa-star', Trunfo$buildCard$lambda$lambda$lambda$lambda$lambda_5);
    $receiver.unaryPlus_pdl1vz$(' Fama');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda$lambda_19($receiver) {
    $receiver.unaryPlus_pdl1vz$('???');
    return Unit;
  }
  function Trunfo$buildCard$lambda$lambda$lambda_5(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      if (closure$setClick) {
        set_onClickFunction($receiver, Trunfo$buildCard$lambda$lambda$lambda$lambda_17(this$Trunfo));
      }
      div($receiver, 'name', Trunfo$buildCard$lambda$lambda$lambda$lambda_18);
      div($receiver, 'value fame-card', Trunfo$buildCard$lambda$lambda$lambda$lambda_19);
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda$lambda_1(closure$setClick, this$Trunfo) {
    return function ($receiver) {
      div($receiver, 'entry height-entry', Trunfo$buildCard$lambda$lambda$lambda(closure$setClick, this$Trunfo));
      div($receiver, 'entry age-entry', Trunfo$buildCard$lambda$lambda$lambda_0(closure$setClick, this$Trunfo));
      div($receiver, 'entry weight-entry', Trunfo$buildCard$lambda$lambda$lambda_1(closure$setClick, this$Trunfo));
      div($receiver, 'entry power-entry', Trunfo$buildCard$lambda$lambda$lambda_2(closure$setClick, this$Trunfo));
      div($receiver, 'entry cuteness-entry', Trunfo$buildCard$lambda$lambda$lambda_3(closure$setClick, this$Trunfo));
      div($receiver, 'entry intelligence-entry', Trunfo$buildCard$lambda$lambda$lambda_4(closure$setClick, this$Trunfo));
      div($receiver, 'entry fame-entry', Trunfo$buildCard$lambda$lambda$lambda_5(closure$setClick, this$Trunfo));
      return Unit;
    };
  }
  function Trunfo$buildCard$lambda(closure$idName, closure$setClick, this$Trunfo) {
    return function ($receiver) {
      set_id($receiver, closure$idName);
      div($receiver, 'header', Trunfo$buildCard$lambda$lambda);
      div($receiver, 'card-name', Trunfo$buildCard$lambda$lambda_0);
      div($receiver, 'entries', Trunfo$buildCard$lambda$lambda_1(closure$setClick, this$Trunfo));
      return Unit;
    };
  }
  Trunfo.prototype.buildCard_zid4s3$ = function ($receiver, idName, setClick) {
    div($receiver, 'card', Trunfo$buildCard$lambda(idName, setClick, this));
  };
  function Trunfo$sendSelectionData$ObjectLiteral(closure$selectedEntry) {
    this.status = 'SELECTION';
    this.selected = closure$selectedEntry;
  }
  Trunfo$sendSelectionData$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  Trunfo.prototype.sendSelectionData = function (selectedEntry) {
    this.ws.send(JSON.stringify(new Trunfo$sendSelectionData$ObjectLiteral(selectedEntry)));
  };
  function Trunfo$errou$lambda() {
    return new Audio('faustao_errou.mp3');
  }
  function Trunfo$dogResidue$lambda() {
    return new Audio('dog_residue.mp3');
  }
  Trunfo.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Trunfo',
    interfaces: [Logging]
  };
  var Trunfo_instance = null;
  function Trunfo_getInstance() {
    if (Trunfo_instance === null) {
      new Trunfo();
    }
    return Trunfo_instance;
  }
  function TrunfoGame() {
    TrunfoGame_instance = this;
    this.nintendoWfc_dcxe06$_0 = lazy(TrunfoGame$nintendoWfc$lambda);
  }
  Object.defineProperty(TrunfoGame.prototype, 'nintendoWfc', {
    get: function () {
      return this.nintendoWfc_dcxe06$_0.value;
    }
  });
  function TrunfoGame$start$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$("Lori's Super Trunfo\u2122");
    return Unit;
  }
  function Coroutine$TrunfoGame$start$lambda$lambda$lambda$lambda$lambda($receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
  }
  Coroutine$TrunfoGame$start$lambda$lambda$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$TrunfoGame$start$lambda$lambda$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$TrunfoGame$start$lambda$lambda$lambda$lambda$lambda.prototype.constructor = Coroutine$TrunfoGame$start$lambda$lambda$lambda$lambda$lambda;
  Coroutine$TrunfoGame$start$lambda$lambda$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            return Trunfo_getInstance().connectToServer(), Unit;
          case 1:
            throw this.exception_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function TrunfoGame$start$lambda$lambda$lambda$lambda$lambda($receiver_0, continuation_0, suspended) {
    var instance = new Coroutine$TrunfoGame$start$lambda$lambda$lambda$lambda$lambda($receiver_0, this, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  }
  function TrunfoGame$start$lambda$lambda$lambda$lambda(this$TrunfoGame) {
    return function (it) {
      this$TrunfoGame.nintendoWfc.volume = 0.03;
      this$TrunfoGame.nintendoWfc.loop = true;
      this$TrunfoGame.nintendoWfc.play();
      launch(coroutines.GlobalScope, void 0, void 0, TrunfoGame$start$lambda$lambda$lambda$lambda$lambda);
      return Unit;
    };
  }
  function TrunfoGame$start$lambda$lambda$lambda_0(this$TrunfoGame) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Conectar em uma sala!');
      set_onClickFunction($receiver, TrunfoGame$start$lambda$lambda$lambda$lambda(this$TrunfoGame));
      return Unit;
    };
  }
  function TrunfoGame$start$lambda$lambda(this$TrunfoGame) {
    return function ($receiver) {
      h1($receiver, void 0, TrunfoGame$start$lambda$lambda$lambda);
      button($receiver, void 0, void 0, void 0, void 0, void 0, TrunfoGame$start$lambda$lambda$lambda_0(this$TrunfoGame));
      return Unit;
    };
  }
  function TrunfoGame$start$lambda(this$TrunfoGame) {
    return function (it) {
      Trunfo_getInstance().currentPopup = this$TrunfoGame.openPopup_q7bkhe$(TrunfoGame$start$lambda$lambda(this$TrunfoGame));
      return Unit;
    };
  }
  TrunfoGame.prototype.start = function () {
    onDOMReady(document, TrunfoGame$start$lambda(this));
  };
  function TrunfoGame$openPopup$lambda$lambda(closure$html) {
    return function ($receiver) {
      closure$html($receiver);
      return Unit;
    };
  }
  function TrunfoGame$openPopup$lambda(closure$html) {
    return function ($receiver) {
      div($receiver, 'popup', TrunfoGame$openPopup$lambda$lambda(closure$html));
      return Unit;
    };
  }
  TrunfoGame.prototype.openPopup_q7bkhe$ = function (html) {
    var div = div_0(get_create(document), 'popup-wrapper', TrunfoGame$openPopup$lambda(html));
    ensureNotNull(document.body).append(div);
    return div;
  };
  function TrunfoGame$nintendoWfc$lambda() {
    return new Audio('nintendo_wfc.mp3');
  }
  TrunfoGame.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'TrunfoGame',
    interfaces: []
  };
  var TrunfoGame_instance = null;
  function TrunfoGame_getInstance() {
    if (TrunfoGame_instance === null) {
      new TrunfoGame();
    }
    return TrunfoGame_instance;
  }
  function ActionType(name, ordinal, updateType, sectionName) {
    Enum.call(this);
    this.updateType = updateType;
    this.sectionName = sectionName;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ActionType_initFields() {
    ActionType_initFields = function () {
    };
    ActionType$UNKNOWN_instance = new ActionType('UNKNOWN', 0, 'generic', 'unknown');
    ActionType$UPDATE_GENERAL_instance = new ActionType('UPDATE_GENERAL', 1, 'updated', 'general');
    ActionType$UPDATE_MODERATION_instance = new ActionType('UPDATE_MODERATION', 2, 'updated', 'moderation');
    ActionType$UPDATE_COMMAND_LIST_instance = new ActionType('UPDATE_COMMAND_LIST', 3, 'updated', 'commands');
    ActionType$UPDATE_PERMISSIONS_instance = new ActionType('UPDATE_PERMISSIONS', 4, 'updated', 'permissions');
    ActionType$UPDATE_WELCOMER_instance = new ActionType('UPDATE_WELCOMER', 5, 'updated', 'welcomer');
    ActionType$UPDATE_EVENT_LOG_instance = new ActionType('UPDATE_EVENT_LOG', 6, 'updated', 'eventLog');
    ActionType$UPDATE_YOUTUBE_instance = new ActionType('UPDATE_YOUTUBE', 7, 'updated', 'unknown');
    ActionType$UPDATE_TWITCH_instance = new ActionType('UPDATE_TWITCH', 8, 'updated', 'unknown');
    ActionType$UPDATE_AUTOROLE_instance = new ActionType('UPDATE_AUTOROLE', 9, 'updated', 'autorole');
    ActionType$UPDATE_INVITE_BLOCK_instance = new ActionType('UPDATE_INVITE_BLOCK', 10, 'updated', 'inviteBlocker');
    ActionType$UPDATE_MUSIC_instance = new ActionType('UPDATE_MUSIC', 11, 'updated', 'music');
    ActionType$UPDATE_ECONOMY_instance = new ActionType('UPDATE_ECONOMY', 12, 'updated', 'economy');
    ActionType$UPDATE_TIMERS_instance = new ActionType('UPDATE_TIMERS', 13, 'updated', 'timers');
    ActionType$UPDATE_STARBOARD_instance = new ActionType('UPDATE_STARBOARD', 14, 'updated', 'starboard');
    ActionType$UPDATE_MISCELLANEOUS_instance = new ActionType('UPDATE_MISCELLANEOUS', 15, 'updated', 'miscellaneous');
    ActionType$UPDATE_CUSTOM_BADGE_instance = new ActionType('UPDATE_CUSTOM_BADGE', 16, 'updated', 'customBadge');
    ActionType$UPDATE_DAILY_MULTIPLIER_instance = new ActionType('UPDATE_DAILY_MULTIPLIER', 17, 'updated', 'dailyMultiplier');
    ActionType$UPDATE_CUSTOM_COMMANDS_instance = new ActionType('UPDATE_CUSTOM_COMMANDS', 18, 'updated', 'customCommands');
    ActionType$UPDATE_LEVEL_UP_instance = new ActionType('UPDATE_LEVEL_UP', 19, 'updated', 'levelUp');
    ActionType$UPDATE_TEXT_CHANNELS_instance = new ActionType('UPDATE_TEXT_CHANNELS', 20, 'updated', 'textChannels');
    ActionType$UPDATE_PREMIUM_instance = new ActionType('UPDATE_PREMIUM', 21, 'updated', 'premiumKeys');
    ActionType$UPDATE_TWITTER_instance = new ActionType('UPDATE_TWITTER', 22, 'updated', 'twitter');
    ActionType$UPDATE_RSS_FEEDS_instance = new ActionType('UPDATE_RSS_FEEDS', 23, 'rss_feeds', 'rssFeeds');
    ActionType$RESET_XP_instance = new ActionType('RESET_XP', 24, 'resetXp', 'unknown');
  }
  var ActionType$UNKNOWN_instance;
  function ActionType$UNKNOWN_getInstance() {
    ActionType_initFields();
    return ActionType$UNKNOWN_instance;
  }
  var ActionType$UPDATE_GENERAL_instance;
  function ActionType$UPDATE_GENERAL_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_GENERAL_instance;
  }
  var ActionType$UPDATE_MODERATION_instance;
  function ActionType$UPDATE_MODERATION_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_MODERATION_instance;
  }
  var ActionType$UPDATE_COMMAND_LIST_instance;
  function ActionType$UPDATE_COMMAND_LIST_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_COMMAND_LIST_instance;
  }
  var ActionType$UPDATE_PERMISSIONS_instance;
  function ActionType$UPDATE_PERMISSIONS_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_PERMISSIONS_instance;
  }
  var ActionType$UPDATE_WELCOMER_instance;
  function ActionType$UPDATE_WELCOMER_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_WELCOMER_instance;
  }
  var ActionType$UPDATE_EVENT_LOG_instance;
  function ActionType$UPDATE_EVENT_LOG_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_EVENT_LOG_instance;
  }
  var ActionType$UPDATE_YOUTUBE_instance;
  function ActionType$UPDATE_YOUTUBE_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_YOUTUBE_instance;
  }
  var ActionType$UPDATE_TWITCH_instance;
  function ActionType$UPDATE_TWITCH_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_TWITCH_instance;
  }
  var ActionType$UPDATE_AUTOROLE_instance;
  function ActionType$UPDATE_AUTOROLE_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_AUTOROLE_instance;
  }
  var ActionType$UPDATE_INVITE_BLOCK_instance;
  function ActionType$UPDATE_INVITE_BLOCK_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_INVITE_BLOCK_instance;
  }
  var ActionType$UPDATE_MUSIC_instance;
  function ActionType$UPDATE_MUSIC_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_MUSIC_instance;
  }
  var ActionType$UPDATE_ECONOMY_instance;
  function ActionType$UPDATE_ECONOMY_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_ECONOMY_instance;
  }
  var ActionType$UPDATE_TIMERS_instance;
  function ActionType$UPDATE_TIMERS_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_TIMERS_instance;
  }
  var ActionType$UPDATE_STARBOARD_instance;
  function ActionType$UPDATE_STARBOARD_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_STARBOARD_instance;
  }
  var ActionType$UPDATE_MISCELLANEOUS_instance;
  function ActionType$UPDATE_MISCELLANEOUS_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_MISCELLANEOUS_instance;
  }
  var ActionType$UPDATE_CUSTOM_BADGE_instance;
  function ActionType$UPDATE_CUSTOM_BADGE_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_CUSTOM_BADGE_instance;
  }
  var ActionType$UPDATE_DAILY_MULTIPLIER_instance;
  function ActionType$UPDATE_DAILY_MULTIPLIER_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_DAILY_MULTIPLIER_instance;
  }
  var ActionType$UPDATE_CUSTOM_COMMANDS_instance;
  function ActionType$UPDATE_CUSTOM_COMMANDS_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_CUSTOM_COMMANDS_instance;
  }
  var ActionType$UPDATE_LEVEL_UP_instance;
  function ActionType$UPDATE_LEVEL_UP_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_LEVEL_UP_instance;
  }
  var ActionType$UPDATE_TEXT_CHANNELS_instance;
  function ActionType$UPDATE_TEXT_CHANNELS_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_TEXT_CHANNELS_instance;
  }
  var ActionType$UPDATE_PREMIUM_instance;
  function ActionType$UPDATE_PREMIUM_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_PREMIUM_instance;
  }
  var ActionType$UPDATE_TWITTER_instance;
  function ActionType$UPDATE_TWITTER_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_TWITTER_instance;
  }
  var ActionType$UPDATE_RSS_FEEDS_instance;
  function ActionType$UPDATE_RSS_FEEDS_getInstance() {
    ActionType_initFields();
    return ActionType$UPDATE_RSS_FEEDS_instance;
  }
  var ActionType$RESET_XP_instance;
  function ActionType$RESET_XP_getInstance() {
    ActionType_initFields();
    return ActionType$RESET_XP_instance;
  }
  ActionType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ActionType',
    interfaces: [Enum]
  };
  function ActionType$values() {
    return [ActionType$UNKNOWN_getInstance(), ActionType$UPDATE_GENERAL_getInstance(), ActionType$UPDATE_MODERATION_getInstance(), ActionType$UPDATE_COMMAND_LIST_getInstance(), ActionType$UPDATE_PERMISSIONS_getInstance(), ActionType$UPDATE_WELCOMER_getInstance(), ActionType$UPDATE_EVENT_LOG_getInstance(), ActionType$UPDATE_YOUTUBE_getInstance(), ActionType$UPDATE_TWITCH_getInstance(), ActionType$UPDATE_AUTOROLE_getInstance(), ActionType$UPDATE_INVITE_BLOCK_getInstance(), ActionType$UPDATE_MUSIC_getInstance(), ActionType$UPDATE_ECONOMY_getInstance(), ActionType$UPDATE_TIMERS_getInstance(), ActionType$UPDATE_STARBOARD_getInstance(), ActionType$UPDATE_MISCELLANEOUS_getInstance(), ActionType$UPDATE_CUSTOM_BADGE_getInstance(), ActionType$UPDATE_DAILY_MULTIPLIER_getInstance(), ActionType$UPDATE_CUSTOM_COMMANDS_getInstance(), ActionType$UPDATE_LEVEL_UP_getInstance(), ActionType$UPDATE_TEXT_CHANNELS_getInstance(), ActionType$UPDATE_PREMIUM_getInstance(), ActionType$UPDATE_TWITTER_getInstance(), ActionType$UPDATE_RSS_FEEDS_getInstance(), ActionType$RESET_XP_getInstance()];
  }
  ActionType.values = ActionType$values;
  function ActionType$valueOf(name) {
    switch (name) {
      case 'UNKNOWN':
        return ActionType$UNKNOWN_getInstance();
      case 'UPDATE_GENERAL':
        return ActionType$UPDATE_GENERAL_getInstance();
      case 'UPDATE_MODERATION':
        return ActionType$UPDATE_MODERATION_getInstance();
      case 'UPDATE_COMMAND_LIST':
        return ActionType$UPDATE_COMMAND_LIST_getInstance();
      case 'UPDATE_PERMISSIONS':
        return ActionType$UPDATE_PERMISSIONS_getInstance();
      case 'UPDATE_WELCOMER':
        return ActionType$UPDATE_WELCOMER_getInstance();
      case 'UPDATE_EVENT_LOG':
        return ActionType$UPDATE_EVENT_LOG_getInstance();
      case 'UPDATE_YOUTUBE':
        return ActionType$UPDATE_YOUTUBE_getInstance();
      case 'UPDATE_TWITCH':
        return ActionType$UPDATE_TWITCH_getInstance();
      case 'UPDATE_AUTOROLE':
        return ActionType$UPDATE_AUTOROLE_getInstance();
      case 'UPDATE_INVITE_BLOCK':
        return ActionType$UPDATE_INVITE_BLOCK_getInstance();
      case 'UPDATE_MUSIC':
        return ActionType$UPDATE_MUSIC_getInstance();
      case 'UPDATE_ECONOMY':
        return ActionType$UPDATE_ECONOMY_getInstance();
      case 'UPDATE_TIMERS':
        return ActionType$UPDATE_TIMERS_getInstance();
      case 'UPDATE_STARBOARD':
        return ActionType$UPDATE_STARBOARD_getInstance();
      case 'UPDATE_MISCELLANEOUS':
        return ActionType$UPDATE_MISCELLANEOUS_getInstance();
      case 'UPDATE_CUSTOM_BADGE':
        return ActionType$UPDATE_CUSTOM_BADGE_getInstance();
      case 'UPDATE_DAILY_MULTIPLIER':
        return ActionType$UPDATE_DAILY_MULTIPLIER_getInstance();
      case 'UPDATE_CUSTOM_COMMANDS':
        return ActionType$UPDATE_CUSTOM_COMMANDS_getInstance();
      case 'UPDATE_LEVEL_UP':
        return ActionType$UPDATE_LEVEL_UP_getInstance();
      case 'UPDATE_TEXT_CHANNELS':
        return ActionType$UPDATE_TEXT_CHANNELS_getInstance();
      case 'UPDATE_PREMIUM':
        return ActionType$UPDATE_PREMIUM_getInstance();
      case 'UPDATE_TWITTER':
        return ActionType$UPDATE_TWITTER_getInstance();
      case 'UPDATE_RSS_FEEDS':
        return ActionType$UPDATE_RSS_FEEDS_getInstance();
      case 'RESET_XP':
        return ActionType$RESET_XP_getInstance();
      default:throwISE('No enum constant net.perfectdreams.spicymorenitta.utils.ActionType.' + name);
    }
  }
  ActionType.valueOf_61zpoe$ = ActionType$valueOf;
  function AdvertisementUtils() {
    AdvertisementUtils_instance = this;
  }
  Object.defineProperty(AdvertisementUtils.prototype, 'isUserBlockingAds', {
    get: function () {
      return window.canRunAds == undefined;
    }
  });
  function Coroutine$AdvertisementUtils$checkIfUserIsBlockingAds$lambda(this$AdvertisementUtils_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$this$AdvertisementUtils = this$AdvertisementUtils_0;
  }
  Coroutine$AdvertisementUtils$checkIfUserIsBlockingAds$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$AdvertisementUtils$checkIfUserIsBlockingAds$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$AdvertisementUtils$checkIfUserIsBlockingAds$lambda.prototype.constructor = Coroutine$AdvertisementUtils$checkIfUserIsBlockingAds$lambda;
  Coroutine$AdvertisementUtils$checkIfUserIsBlockingAds$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delay(L5000, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var tmp$ = this.local$this$AdvertisementUtils.replaceAllGoogleAdSenseAdsWithFakeAds_0();
            var adCount = tmp$.component1()
            , rand = tmp$.component2();
            var tmp$_0;
            var replacedAds = Kotlin.isType(tmp$_0 = asList(document.querySelectorAll('.lori' + rand.toString() + '-help-plz-banner')), List) ? tmp$_0 : throwCCE();
            this.local$this$AdvertisementUtils.debug_yhszz7$(['There are ' + replacedAds.size + ' replaced ads']);
            var any$result;
            any$break: do {
              var tmp$_1;
              if (Kotlin.isType(replacedAds, Collection) && replacedAds.isEmpty()) {
                any$result = false;
                break any$break;
              }
              tmp$_1 = replacedAds.iterator();
              while (tmp$_1.hasNext()) {
                var element = tmp$_1.next();
                if (equals(element.style.display, 'none')) {
                  any$result = true;
                  break any$break;
                }
              }
              any$result = false;
            }
             while (false);
            var hasAnyRemovedAds = any$result || adCount > replacedAds.size;
            if (hasAnyRemovedAds) {
              return this.local$this$AdvertisementUtils.forceUserToDisableAdBlock_0(), Unit;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function AdvertisementUtils$checkIfUserIsBlockingAds$lambda(this$AdvertisementUtils_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$AdvertisementUtils$checkIfUserIsBlockingAds$lambda(this$AdvertisementUtils_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  AdvertisementUtils.prototype.checkIfUserIsBlockingAds = function () {
    if (this.isUserBlockingAds) {
      this.debug_yhszz7$(['User is blocking ads... :(']);
      SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(AdvertisementUtils$checkIfUserIsBlockingAds$lambda(this));
    }
  };
  function AdvertisementUtils$replaceAllGoogleAdSenseAdsWithFakeAds$lambda$lambda(closure$rand) {
    return function ($receiver) {
      img_1($receiver, void 0, 'https://loritta.website/assets/img/lori_helpplz.png', 'lori' + closure$rand.toString() + '-help-plz-banner');
      return Unit;
    };
  }
  AdvertisementUtils.prototype.replaceAllGoogleAdSenseAdsWithFakeAds_0 = function () {
    var rand = Random_0(0).nextLong();
    var tmp$;
    var ads = Kotlin.isType(tmp$ = asList(document.querySelectorAll('.adsbygoogle')), List) ? tmp$ : throwCCE();
    var adCount = ads.size;
    this.debug_yhszz7$(['There are ' + adCount + ' Google AdSense ads']);
    var tmp$_0;
    tmp$_0 = ads.iterator();
    while (tmp$_0.hasNext()) {
      var element = tmp$_0.next();
      var parentElement = ensureNotNull(element.parentElement);
      append(parentElement, AdvertisementUtils$replaceAllGoogleAdSenseAdsWithFakeAds$lambda$lambda(rand));
    }
    return new AdvertisementUtils$AdSenseToFakeAdsResult(adCount, rand);
  };
  function AdvertisementUtils$forceUserToDisableAdBlock$lambda($receiver) {
    img_1($receiver, void 0, 'https://i.imgur.com/MZWtUzB.png');
    return Unit;
  }
  AdvertisementUtils.prototype.forceUserToDisableAdBlock_0 = function () {
    this.debug_yhszz7$(['Looks like the user removed some ads... whoopsie, I tripped on the cord! >:)']);
    var body = ensureNotNull(document.body);
    clear(body);
    append(body, AdvertisementUtils$forceUserToDisableAdBlock$lambda);
  };
  function AdvertisementUtils$AdSenseToFakeAdsResult(googleAdSenseAds, randomLong) {
    this.googleAdSenseAds = googleAdSenseAds;
    this.randomLong = randomLong;
  }
  AdvertisementUtils$AdSenseToFakeAdsResult.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AdSenseToFakeAdsResult',
    interfaces: []
  };
  AdvertisementUtils$AdSenseToFakeAdsResult.prototype.component1 = function () {
    return this.googleAdSenseAds;
  };
  AdvertisementUtils$AdSenseToFakeAdsResult.prototype.component2 = function () {
    return this.randomLong;
  };
  AdvertisementUtils$AdSenseToFakeAdsResult.prototype.copy_6svq3l$ = function (googleAdSenseAds, randomLong) {
    return new AdvertisementUtils$AdSenseToFakeAdsResult(googleAdSenseAds === void 0 ? this.googleAdSenseAds : googleAdSenseAds, randomLong === void 0 ? this.randomLong : randomLong);
  };
  AdvertisementUtils$AdSenseToFakeAdsResult.prototype.toString = function () {
    return 'AdSenseToFakeAdsResult(googleAdSenseAds=' + Kotlin.toString(this.googleAdSenseAds) + (', randomLong=' + Kotlin.toString(this.randomLong)) + ')';
  };
  AdvertisementUtils$AdSenseToFakeAdsResult.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.googleAdSenseAds) | 0;
    result = result * 31 + Kotlin.hashCode(this.randomLong) | 0;
    return result;
  };
  AdvertisementUtils$AdSenseToFakeAdsResult.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.googleAdSenseAds, other.googleAdSenseAds) && Kotlin.equals(this.randomLong, other.randomLong)))));
  };
  AdvertisementUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AdvertisementUtils',
    interfaces: [Logging]
  };
  var AdvertisementUtils_instance = null;
  function AdvertisementUtils_getInstance() {
    if (AdvertisementUtils_instance === null) {
      new AdvertisementUtils();
    }
    return AdvertisementUtils_instance;
  }
  function AuthUtils() {
    AuthUtils_instance = this;
  }
  function AuthUtils$handlePopup$lambda(it) {
    var tmp$;
    window.opener.authenticate(((tmp$ = document.querySelector('#hidden-auth-payload')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE()).innerHTML);
    window.close();
    return Unit;
  }
  AuthUtils.prototype.handlePopup = function () {
    if (!equals(window.opener, undefined) && window.opener !== window) {
      onDOMReady(document, AuthUtils$handlePopup$lambda);
    }
     else {
      window.location.href = window.location.origin;
    }
  };
  AuthUtils.prototype.handlePostAuth = function (payload) {
    var $receiver = JSON_0.Companion.nonstrict;
    var userIdentification = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(UserIdentification)), payload);
    SpicyMorenitta$Companion_getInstance().INSTANCE.updateLoggedInUser_brvwnn$(userIdentification);
  };
  AuthUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'AuthUtils',
    interfaces: []
  };
  var AuthUtils_instance = null;
  function AuthUtils_getInstance() {
    if (AuthUtils_instance === null) {
      new AuthUtils();
    }
    return AuthUtils_instance;
  }
  var page;
  function BetterDocument(document) {
    this.document = document;
  }
  BetterDocument.prototype.getElementById_61zpoe$ = function (name) {
    return ensureNotNull(this.document.getElementById(name));
  };
  BetterDocument.prototype.getElementByClass_61zpoe$ = function (name) {
    return ensureNotNull(this.document.getElementsByClassName(name)[0]);
  };
  BetterDocument.prototype.getElementById_ytbaoo$ = function (name) {
    var tmp$;
    return (tmp$ = ensureNotNull(this.document.getElementById(name))) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
  };
  BetterDocument.prototype.getElementByClass_ytbaoo$ = function (name) {
    var tmp$;
    return (tmp$ = ensureNotNull(this.document.getElementsByClassName(name)[0])) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
  };
  BetterDocument.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BetterDocument',
    interfaces: []
  };
  function appendBuilder($receiver, builder) {
    var elChild = document.createElement('div');
    elChild.innerHTML = builder.toString();
    $receiver.appendChild(elChild);
  }
  function get$lambda_9($receiver) {
    return Unit;
  }
  function DashboardUtils() {
    DashboardUtils_instance = this;
  }
  DashboardUtils.prototype.retrieveGuildConfiguration_s8cxhz$ = function (guildId, continuation) {
    return this.retrieveGuildConfiguration_61zpoe$(guildId.toString(), continuation);
  };
  function DashboardUtils$retrieveGuildConfiguration$lambda(closure$guildId) {
    return function ($receiver) {
      url($receiver, window.location.origin + '/api/v1/guild/' + closure$guildId + '/config');
      return Unit;
    };
  }
  function Coroutine$retrieveGuildConfiguration_61zpoe$($this, guildId_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 6;
    this.$this = $this;
    this.local$response = void 0;
    this.local$guildId = guildId_0;
  }
  Coroutine$retrieveGuildConfiguration_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$retrieveGuildConfiguration_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$retrieveGuildConfiguration_61zpoe$.prototype.constructor = Coroutine$retrieveGuildConfiguration_61zpoe$;
  Coroutine$retrieveGuildConfiguration_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var $receiver_0 = http;
            var host;
            var body;
            host = 'localhost';
            body = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Get;
            $receiver_1.body = body;
            DashboardUtils$retrieveGuildConfiguration$lambda(this.local$guildId)($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(PrimitiveClasses$stringClass, [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = typeof (tmp$_4 = $this_0) === 'string' ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(PrimitiveClasses$stringClass, call.JsType, createKType(PrimitiveClasses$stringClass, [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = typeof (tmp$_6 = this.result_0) === 'string' ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = typeof (tmp$_5 = this.result_0) === 'string' ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            var result = this.result_0;
            var $receiver = JSON_0.Companion.nonstrict;
            return $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(ServerConfig$Guild)), result);
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  DashboardUtils.prototype.retrieveGuildConfiguration_61zpoe$ = function (guildId_0, continuation_0, suspended) {
    var instance = new Coroutine$retrieveGuildConfiguration_61zpoe$(this, guildId_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function DashboardUtils$switchContentAndFixLeftSidebarScroll$lambda(closure$call, this$switchContentAndFixLeftSidebarScroll) {
    return function () {
      this$switchContentAndFixLeftSidebarScroll.switchContent_hjvrm5$(closure$call);
      return Unit;
    };
  }
  DashboardUtils.prototype.switchContentAndFixLeftSidebarScroll_dh735h$ = function ($receiver, call) {
    $receiver.fixDummyNavbarHeight_hjvrm5$(call);
    SpicyMorenitta$Companion_getInstance().INSTANCE.fixLeftSidebarScroll_o14v8n$(DashboardUtils$switchContentAndFixLeftSidebarScroll$lambda(call, $receiver));
  };
  function Coroutine$DashboardUtils$launchWithLoadingScreenAndFixContent$lambda(closure$callback_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$callback = closure$callback_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$DashboardUtils$launchWithLoadingScreenAndFixContent$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DashboardUtils$launchWithLoadingScreenAndFixContent$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DashboardUtils$launchWithLoadingScreenAndFixContent$lambda.prototype.constructor = Coroutine$DashboardUtils$launchWithLoadingScreenAndFixContent$lambda;
  Coroutine$DashboardUtils$launchWithLoadingScreenAndFixContent$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            SpicyMorenitta$Companion_getInstance().INSTANCE.showLoadingScreen_61zpoe$();
            this.state_0 = 2;
            this.result_0 = this.local$closure$callback(this.local$$receiver, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            return SpicyMorenitta$Companion_getInstance().INSTANCE.hideLoadingScreen(), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DashboardUtils$launchWithLoadingScreenAndFixContent$lambda(closure$callback_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$DashboardUtils$launchWithLoadingScreenAndFixContent$lambda(closure$callback_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  DashboardUtils.prototype.launchWithLoadingScreenAndFixContent_wmzl2u$ = function ($receiver, call, callback) {
    SpicyMorenitta$Companion_getInstance().INSTANCE.launch_3q5nlj$(DashboardUtils$launchWithLoadingScreenAndFixContent$lambda(callback));
  };
  DashboardUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DashboardUtils',
    interfaces: []
  };
  var DashboardUtils_instance = null;
  function DashboardUtils_getInstance() {
    if (DashboardUtils_instance === null) {
      new DashboardUtils();
    }
    return DashboardUtils_instance;
  }
  function DateSerializer() {
    this.descriptor_61wkuv$_0 = withName(internal.StringDescriptor, 'WithCustomDefault');
  }
  Object.defineProperty(DateSerializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_61wkuv$_0;
    }
  });
  DateSerializer.prototype.serialize_awe97i$ = function (output, obj) {
    throw new NotImplementedError_init('An operation is not implemented: ' + 'not implemented');
  };
  DateSerializer.prototype.deserialize_nts5qn$ = function (input) {
    var date = new Date(input.decodeString());
    return date;
  };
  DateSerializer.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DateSerializer',
    interfaces: [KSerializer]
  };
  function DateUtils() {
    DateUtils_instance = this;
  }
  DateUtils.prototype.formatDateDiff_lu1900$ = function (fromDate, toDate) {
    var diff = toDate - fromDate;
    var diffSeconds = numberToInt(diff / 1000 % 60);
    var diffMinutes = numberToInt(diff / 60000 % 60);
    var diffHours = numberToInt(diff / 3600000 % 24);
    var diffDays = numberToInt(diff / 86400000);
    return diffDays.toString() + ' dias, ' + diffHours + ' horas, ' + diffMinutes + ' minutos, ' + diffSeconds + ' segundos';
  };
  DateUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DateUtils',
    interfaces: []
  };
  var DateUtils_instance = null;
  function DateUtils_getInstance() {
    if (DateUtils_instance === null) {
      new DateUtils();
    }
    return DateUtils_instance;
  }
  var delayedTypingTask;
  function Coroutine$delayedTyping$lambda$lambda(closure$wait_0, closure$onTypingEnded_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$wait = closure$wait_0;
    this.local$closure$onTypingEnded = closure$onTypingEnded_0;
    this.local$$receiver = $receiver_0;
  }
  Coroutine$delayedTyping$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$delayedTyping$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$delayedTyping$lambda$lambda.prototype.constructor = Coroutine$delayedTyping$lambda$lambda;
  Coroutine$delayedTyping$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = delay(this.local$closure$wait, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!get_isActive(this.local$$receiver)) {
              return;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            return this.local$closure$onTypingEnded();
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function delayedTyping$lambda$lambda(closure$wait_0, closure$onTypingEnded_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$delayedTyping$lambda$lambda(closure$wait_0, closure$onTypingEnded_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function delayedTyping$lambda(closure$onTypingStarted, closure$m, closure$wait, closure$onTypingEnded, this$delayedTyping) {
    return function (it) {
      closure$onTypingStarted();
      delayedTypingTask != null ? (delayedTypingTask.cancel_m4sck1$(), Unit) : null;
      delayedTypingTask = closure$m.launch_3q5nlj$(delayedTyping$lambda$lambda(closure$wait, closure$onTypingEnded));
      return this$delayedTyping;
    };
  }
  function delayedTyping($receiver, m, wait, onTypingStarted, onTypingEnded) {
    $receiver.oninput = delayedTyping$lambda(onTypingStarted, m, wait, onTypingEnded, $receiver);
  }
  var select_0 = defineInlineFunction('SpicyMorenitta.net.perfectdreams.spicymorenitta.utils.select_hger2a$', wrapFunction(function () {
    var Any = Object;
    var throwCCE = Kotlin.throwCCE;
    return function ($receiver, query) {
      var tmp$;
      return (tmp$ = $receiver.querySelector(query)) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    };
  }));
  var selectAll = defineInlineFunction('SpicyMorenitta.net.perfectdreams.spicymorenitta.utils.selectAll_hger2a$', wrapFunction(function () {
    var asList = Kotlin.org.w3c.dom.asList_kt9thq$;
    var List = Kotlin.kotlin.collections.List;
    var throwCCE = Kotlin.throwCCE;
    return function ($receiver, query) {
      var tmp$;
      return Kotlin.isType(tmp$ = asList($receiver.querySelectorAll(query)), List) ? tmp$ : throwCCE();
    };
  }));
  function onDOMReady($receiver, callback) {
    $receiver.addEventListener('DOMContentLoaded', callback, false);
  }
  function onClick($receiver, callback) {
    $receiver.addEventListener('click', callback);
  }
  function onScroll($receiver, callback) {
    $receiver.addEventListener('scroll', callback);
  }
  function onScroll_0($receiver, callback) {
    $receiver.addEventListener('scroll', callback);
  }
  function onMouseOver($receiver, callback) {
    $receiver.addEventListener('mouseover', callback);
  }
  function onMouseOut($receiver, callback) {
    $receiver.addEventListener('mouseout', callback);
  }
  function onMouseEnter($receiver, callback) {
    $receiver.addEventListener('mouseenter', callback);
  }
  function onMouseLeave($receiver, callback) {
    $receiver.addEventListener('mouseleave', callback);
  }
  function offset($receiver) {
    var rect = $receiver.getBoundingClientRect();
    var scrollLeft = window.pageXOffset;
    var scrollTop = window.pageYOffset;
    return new Offset(rect.top + scrollTop, rect.left + scrollLeft);
  }
  function width($receiver) {
    return $receiver.getBoundingClientRect().width;
  }
  function Offset(top, left) {
    this.top = top;
    this.left = left;
  }
  Offset.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Offset',
    interfaces: []
  };
  Offset.prototype.component1 = function () {
    return this.top;
  };
  Offset.prototype.component2 = function () {
    return this.left;
  };
  Offset.prototype.copy_lu1900$ = function (top, left) {
    return new Offset(top === void 0 ? this.top : top, left === void 0 ? this.left : left);
  };
  Offset.prototype.toString = function () {
    return 'Offset(top=' + Kotlin.toString(this.top) + (', left=' + Kotlin.toString(this.left)) + ')';
  };
  Offset.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.top) | 0;
    result = result * 31 + Kotlin.hashCode(this.left) | 0;
    return result;
  };
  Offset.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.top, other.top) && Kotlin.equals(this.left, other.left)))));
  };
  function get_visibleModal() {
    return page.getElementByClass_61zpoe$('tingle-modal--visible');
  }
  function FanArt(fileName, createdAt, tags) {
    FanArt$Companion_getInstance();
    this.fileName = fileName;
    this.createdAt = createdAt;
    this.tags = tags;
  }
  function FanArt$Companion() {
    FanArt$Companion_instance = this;
  }
  FanArt$Companion.prototype.serializer = function () {
    return FanArt$$serializer_getInstance();
  };
  FanArt$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var FanArt$Companion_instance = null;
  function FanArt$Companion_getInstance() {
    if (FanArt$Companion_instance === null) {
      new FanArt$Companion();
    }
    return FanArt$Companion_instance;
  }
  function FanArt$$serializer() {
    this.descriptor_mx7sc1$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.FanArt', this);
    this.descriptor.addElement_ivxn3r$('fileName', false);
    this.descriptor.addElement_ivxn3r$('createdAt', false);
    this.descriptor.addElement_ivxn3r$('tags', false);
    FanArt$$serializer_instance = this;
  }
  Object.defineProperty(FanArt$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_mx7sc1$_0;
    }
  });
  FanArt$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.fileName);
    output.encodeSerializableElement_blecud$(this.descriptor, 1, new DateSerializer(), obj.createdAt);
    output.encodeSerializableElement_blecud$(this.descriptor, 2, new LinkedHashSetSerializer(internal.StringSerializer), obj.tags);
    output.endStructure_qatsm0$(this.descriptor);
  };
  FanArt$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 1, new DateSerializer()) : input.updateSerializableElement_ehubvl$(this.descriptor, 1, new DateSerializer(), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 2, new LinkedHashSetSerializer(internal.StringSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 2, new LinkedHashSetSerializer(internal.StringSerializer), local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return FanArt_init(bitMask0, local0, local1, local2, null);
  };
  FanArt$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, new DateSerializer(), new LinkedHashSetSerializer(internal.StringSerializer)];
  };
  FanArt$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var FanArt$$serializer_instance = null;
  function FanArt$$serializer_getInstance() {
    if (FanArt$$serializer_instance === null) {
      new FanArt$$serializer();
    }
    return FanArt$$serializer_instance;
  }
  function FanArt_init(seen1, fileName, createdAt, tags, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(FanArt.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('fileName');
    else
      $this.fileName = fileName;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('createdAt');
    else
      $this.createdAt = createdAt;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('tags');
    else
      $this.tags = tags;
    return $this;
  }
  FanArt.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FanArt',
    interfaces: []
  };
  FanArt.prototype.component1 = function () {
    return this.fileName;
  };
  FanArt.prototype.component2 = function () {
    return this.createdAt;
  };
  FanArt.prototype.component3 = function () {
    return this.tags;
  };
  FanArt.prototype.copy_f0jiwz$ = function (fileName, createdAt, tags) {
    return new FanArt(fileName === void 0 ? this.fileName : fileName, createdAt === void 0 ? this.createdAt : createdAt, tags === void 0 ? this.tags : tags);
  };
  FanArt.prototype.toString = function () {
    return 'FanArt(fileName=' + Kotlin.toString(this.fileName) + (', createdAt=' + Kotlin.toString(this.createdAt)) + (', tags=' + Kotlin.toString(this.tags)) + ')';
  };
  FanArt.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.fileName) | 0;
    result = result * 31 + Kotlin.hashCode(this.createdAt) | 0;
    result = result * 31 + Kotlin.hashCode(this.tags) | 0;
    return result;
  };
  FanArt.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.fileName, other.fileName) && Kotlin.equals(this.createdAt, other.createdAt) && Kotlin.equals(this.tags, other.tags)))));
  };
  function FanArtArtist(id, info, user, fanArts) {
    FanArtArtist$Companion_getInstance();
    if (user === void 0)
      user = null;
    this.id = id;
    this.info = info;
    this.user = user;
    this.fanArts = fanArts;
  }
  function FanArtArtist$Info(name, avatarUrl, override) {
    FanArtArtist$Info$Companion_getInstance();
    if (override === void 0)
      override = null;
    this.name = name;
    this.avatarUrl = avatarUrl;
    this.override = override;
  }
  function FanArtArtist$Info$Companion() {
    FanArtArtist$Info$Companion_instance = this;
  }
  FanArtArtist$Info$Companion.prototype.serializer = function () {
    return FanArtArtist$Info$$serializer_getInstance();
  };
  FanArtArtist$Info$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var FanArtArtist$Info$Companion_instance = null;
  function FanArtArtist$Info$Companion_getInstance() {
    if (FanArtArtist$Info$Companion_instance === null) {
      new FanArtArtist$Info$Companion();
    }
    return FanArtArtist$Info$Companion_instance;
  }
  function FanArtArtist$Info$$serializer() {
    this.descriptor_wu4ws0$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.FanArtArtist.Info', this);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('avatarUrl', false);
    this.descriptor.addElement_ivxn3r$('override', true);
    FanArtArtist$Info$$serializer_instance = this;
  }
  Object.defineProperty(FanArtArtist$Info$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_wu4ws0$_0;
    }
  });
  FanArtArtist$Info$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 0, internal.StringSerializer, obj.name);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 1, internal.StringSerializer, obj.avatarUrl);
    if (!equals(obj.override, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 2))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 2, FanArtArtist$Info$$serializer_getInstance(), obj.override);
    output.endStructure_qatsm0$(this.descriptor);
  };
  FanArtArtist$Info$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = (bitMask0 & 1) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 0, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 0, internal.StringSerializer, local0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 1, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 1, internal.StringSerializer, local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 2, FanArtArtist$Info$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 2, FanArtArtist$Info$$serializer_getInstance(), local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return FanArtArtist$FanArtArtist$Info_init(bitMask0, local0, local1, local2, null);
  };
  FanArtArtist$Info$$serializer.prototype.childSerializers = function () {
    return [new NullableSerializer(internal.StringSerializer), new NullableSerializer(internal.StringSerializer), new NullableSerializer(FanArtArtist$Info$$serializer_getInstance())];
  };
  FanArtArtist$Info$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var FanArtArtist$Info$$serializer_instance = null;
  function FanArtArtist$Info$$serializer_getInstance() {
    if (FanArtArtist$Info$$serializer_instance === null) {
      new FanArtArtist$Info$$serializer();
    }
    return FanArtArtist$Info$$serializer_instance;
  }
  function FanArtArtist$FanArtArtist$Info_init(seen1, name, avatarUrl, override, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(FanArtArtist$Info.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('avatarUrl');
    else
      $this.avatarUrl = avatarUrl;
    if ((seen1 & 4) === 0)
      $this.override = null;
    else
      $this.override = override;
    return $this;
  }
  FanArtArtist$Info.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Info',
    interfaces: []
  };
  FanArtArtist$Info.prototype.component1 = function () {
    return this.name;
  };
  FanArtArtist$Info.prototype.component2 = function () {
    return this.avatarUrl;
  };
  FanArtArtist$Info.prototype.component3 = function () {
    return this.override;
  };
  FanArtArtist$Info.prototype.copy_ddsfos$ = function (name, avatarUrl, override) {
    return new FanArtArtist$Info(name === void 0 ? this.name : name, avatarUrl === void 0 ? this.avatarUrl : avatarUrl, override === void 0 ? this.override : override);
  };
  FanArtArtist$Info.prototype.toString = function () {
    return 'Info(name=' + Kotlin.toString(this.name) + (', avatarUrl=' + Kotlin.toString(this.avatarUrl)) + (', override=' + Kotlin.toString(this.override)) + ')';
  };
  FanArtArtist$Info.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.avatarUrl) | 0;
    result = result * 31 + Kotlin.hashCode(this.override) | 0;
    return result;
  };
  FanArtArtist$Info.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.avatarUrl, other.avatarUrl) && Kotlin.equals(this.override, other.override)))));
  };
  function FanArtArtist$User(name, effectiveAvatarUrl) {
    FanArtArtist$User$Companion_getInstance();
    this.name = name;
    this.effectiveAvatarUrl = effectiveAvatarUrl;
  }
  function FanArtArtist$User$Companion() {
    FanArtArtist$User$Companion_instance = this;
  }
  FanArtArtist$User$Companion.prototype.serializer = function () {
    return FanArtArtist$User$$serializer_getInstance();
  };
  FanArtArtist$User$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var FanArtArtist$User$Companion_instance = null;
  function FanArtArtist$User$Companion_getInstance() {
    if (FanArtArtist$User$Companion_instance === null) {
      new FanArtArtist$User$Companion();
    }
    return FanArtArtist$User$Companion_instance;
  }
  function FanArtArtist$User$$serializer() {
    this.descriptor_t99nnx$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.FanArtArtist.User', this);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('effectiveAvatarUrl', false);
    FanArtArtist$User$$serializer_instance = this;
  }
  Object.defineProperty(FanArtArtist$User$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_t99nnx$_0;
    }
  });
  FanArtArtist$User$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.name);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.effectiveAvatarUrl);
    output.endStructure_qatsm0$(this.descriptor);
  };
  FanArtArtist$User$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return FanArtArtist$FanArtArtist$User_init(bitMask0, local0, local1, null);
  };
  FanArtArtist$User$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer];
  };
  FanArtArtist$User$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var FanArtArtist$User$$serializer_instance = null;
  function FanArtArtist$User$$serializer_getInstance() {
    if (FanArtArtist$User$$serializer_instance === null) {
      new FanArtArtist$User$$serializer();
    }
    return FanArtArtist$User$$serializer_instance;
  }
  function FanArtArtist$FanArtArtist$User_init(seen1, name, effectiveAvatarUrl, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(FanArtArtist$User.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('effectiveAvatarUrl');
    else
      $this.effectiveAvatarUrl = effectiveAvatarUrl;
    return $this;
  }
  FanArtArtist$User.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'User',
    interfaces: []
  };
  FanArtArtist$User.prototype.component1 = function () {
    return this.name;
  };
  FanArtArtist$User.prototype.component2 = function () {
    return this.effectiveAvatarUrl;
  };
  FanArtArtist$User.prototype.copy_puj7f4$ = function (name, effectiveAvatarUrl) {
    return new FanArtArtist$User(name === void 0 ? this.name : name, effectiveAvatarUrl === void 0 ? this.effectiveAvatarUrl : effectiveAvatarUrl);
  };
  FanArtArtist$User.prototype.toString = function () {
    return 'User(name=' + Kotlin.toString(this.name) + (', effectiveAvatarUrl=' + Kotlin.toString(this.effectiveAvatarUrl)) + ')';
  };
  FanArtArtist$User.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.effectiveAvatarUrl) | 0;
    return result;
  };
  FanArtArtist$User.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.effectiveAvatarUrl, other.effectiveAvatarUrl)))));
  };
  function FanArtArtist$Companion() {
    FanArtArtist$Companion_instance = this;
  }
  FanArtArtist$Companion.prototype.serializer = function () {
    return FanArtArtist$$serializer_getInstance();
  };
  FanArtArtist$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var FanArtArtist$Companion_instance = null;
  function FanArtArtist$Companion_getInstance() {
    if (FanArtArtist$Companion_instance === null) {
      new FanArtArtist$Companion();
    }
    return FanArtArtist$Companion_instance;
  }
  function FanArtArtist$$serializer() {
    this.descriptor_yp6atm$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.FanArtArtist', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('info', false);
    this.descriptor.addElement_ivxn3r$('user', true);
    this.descriptor.addElement_ivxn3r$('fanArts', false);
    FanArtArtist$$serializer_instance = this;
  }
  Object.defineProperty(FanArtArtist$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_yp6atm$_0;
    }
  });
  FanArtArtist$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeSerializableElement_blecud$(this.descriptor, 1, FanArtArtist$Info$$serializer_getInstance(), obj.info);
    if (!equals(obj.user, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 2))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 2, FanArtArtist$User$$serializer_getInstance(), obj.user);
    output.encodeSerializableElement_blecud$(this.descriptor, 3, new ArrayListSerializer(FanArt$$serializer_getInstance()), obj.fanArts);
    output.endStructure_qatsm0$(this.descriptor);
  };
  FanArtArtist$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 1, FanArtArtist$Info$$serializer_getInstance()) : input.updateSerializableElement_ehubvl$(this.descriptor, 1, FanArtArtist$Info$$serializer_getInstance(), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 2, FanArtArtist$User$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 2, FanArtArtist$User$$serializer_getInstance(), local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = (bitMask0 & 8) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 3, new ArrayListSerializer(FanArt$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 3, new ArrayListSerializer(FanArt$$serializer_getInstance()), local3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return FanArtArtist_init(bitMask0, local0, local1, local2, local3, null);
  };
  FanArtArtist$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, FanArtArtist$Info$$serializer_getInstance(), new NullableSerializer(FanArtArtist$User$$serializer_getInstance()), new ArrayListSerializer(FanArt$$serializer_getInstance())];
  };
  FanArtArtist$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var FanArtArtist$$serializer_instance = null;
  function FanArtArtist$$serializer_getInstance() {
    if (FanArtArtist$$serializer_instance === null) {
      new FanArtArtist$$serializer();
    }
    return FanArtArtist$$serializer_instance;
  }
  function FanArtArtist_init(seen1, id, info, user, fanArts, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(FanArtArtist.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('info');
    else
      $this.info = info;
    if ((seen1 & 4) === 0)
      $this.user = null;
    else
      $this.user = user;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('fanArts');
    else
      $this.fanArts = fanArts;
    return $this;
  }
  FanArtArtist.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FanArtArtist',
    interfaces: []
  };
  FanArtArtist.prototype.component1 = function () {
    return this.id;
  };
  FanArtArtist.prototype.component2 = function () {
    return this.info;
  };
  FanArtArtist.prototype.component3 = function () {
    return this.user;
  };
  FanArtArtist.prototype.component4 = function () {
    return this.fanArts;
  };
  FanArtArtist.prototype.copy_o1yj35$ = function (id, info, user, fanArts) {
    return new FanArtArtist(id === void 0 ? this.id : id, info === void 0 ? this.info : info, user === void 0 ? this.user : user, fanArts === void 0 ? this.fanArts : fanArts);
  };
  FanArtArtist.prototype.toString = function () {
    return 'FanArtArtist(id=' + Kotlin.toString(this.id) + (', info=' + Kotlin.toString(this.info)) + (', user=' + Kotlin.toString(this.user)) + (', fanArts=' + Kotlin.toString(this.fanArts)) + ')';
  };
  FanArtArtist.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.info) | 0;
    result = result * 31 + Kotlin.hashCode(this.user) | 0;
    result = result * 31 + Kotlin.hashCode(this.fanArts) | 0;
    return result;
  };
  FanArtArtist.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.info, other.info) && Kotlin.equals(this.user, other.user) && Kotlin.equals(this.fanArts, other.fanArts)))));
  };
  function GeneralConfig(commandPrefix) {
    GeneralConfig$Companion_getInstance();
    this.commandPrefix = commandPrefix;
  }
  function GeneralConfig$Companion() {
    GeneralConfig$Companion_instance = this;
  }
  GeneralConfig$Companion.prototype.serializer = function () {
    return GeneralConfig$$serializer_getInstance();
  };
  GeneralConfig$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var GeneralConfig$Companion_instance = null;
  function GeneralConfig$Companion_getInstance() {
    if (GeneralConfig$Companion_instance === null) {
      new GeneralConfig$Companion();
    }
    return GeneralConfig$Companion_instance;
  }
  function GeneralConfig$$serializer() {
    this.descriptor_sphaj9$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.GeneralConfig', this);
    this.descriptor.addElement_ivxn3r$('commandPrefix', false);
    GeneralConfig$$serializer_instance = this;
  }
  Object.defineProperty(GeneralConfig$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_sphaj9$_0;
    }
  });
  GeneralConfig$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.commandPrefix);
    output.endStructure_qatsm0$(this.descriptor);
  };
  GeneralConfig$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return GeneralConfig_init(bitMask0, local0, null);
  };
  GeneralConfig$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer];
  };
  GeneralConfig$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var GeneralConfig$$serializer_instance = null;
  function GeneralConfig$$serializer_getInstance() {
    if (GeneralConfig$$serializer_instance === null) {
      new GeneralConfig$$serializer();
    }
    return GeneralConfig$$serializer_instance;
  }
  function GeneralConfig_init(seen1, commandPrefix, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(GeneralConfig.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('commandPrefix');
    else
      $this.commandPrefix = commandPrefix;
    return $this;
  }
  GeneralConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GeneralConfig',
    interfaces: []
  };
  function GoogleAdSense() {
    GoogleAdSense_instance = this;
  }
  function GoogleAdSense$renderAds$lambda(this$GoogleAdSense, closure$serverConfiguration) {
    return function (array, obs) {
      this$GoogleAdSense.debug_yhszz7$(['Resetting server configuration height!']);
      closure$serverConfiguration.style.height = '';
      return Unit;
    };
  }
  GoogleAdSense.prototype.renderAds = function () {
    var tmp$;
    var serverConfiguration = (tmp$ = document.querySelector('#server-configuration')) == null || Kotlin.isType(tmp$, Any) ? tmp$ : throwCCE();
    if (serverConfiguration != null) {
      this.debug_yhszz7$(['Fixing server configuration height due to AdSense being dum dum...']);
      var observer = new MutationObserver(GoogleAdSense$renderAds$lambda(this, serverConfiguration));
      var attributeFilter = ['style'];
      var characterData;
      var attributeOldValue;
      var characterDataOldValue;
      characterData = undefined;
      attributeOldValue = undefined;
      characterDataOldValue = undefined;
      var o = {};
      o['childList'] = false;
      o['attributes'] = true;
      o['characterData'] = characterData;
      o['subtree'] = false;
      o['attributeOldValue'] = attributeOldValue;
      o['characterDataOldValue'] = characterDataOldValue;
      o['attributeFilter'] = attributeFilter;
      observer.observe(serverConfiguration, o);
    }
    var tmp$_0;
    var ads = Kotlin.isType(tmp$_0 = asList(document.querySelectorAll('.adsbygoogle')), List) ? tmp$_0 : throwCCE();
    this.debug_yhszz7$(['There are ' + ads.size + ' ads in the page...']);
    var tmp$_1;
    tmp$_1 = ads.iterator();
    while (tmp$_1.hasNext()) {
      var element = tmp$_1.next();
      if (!element.hasAttribute('data-adsbygoogle-status')) {
        try {
          console.log(element);
          (adsbygoogle = window.adsbygoogle || []).push({});
          this.debug_yhszz7$(['Yay!']);
        }
         catch (e) {
          if (!Kotlin.isType(e, Throwable))
            throw e;
        }
      }
    }
  };
  GoogleAdSense.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'GoogleAdSense',
    interfaces: [Logging]
  };
  var GoogleAdSense_instance = null;
  function GoogleAdSense_getInstance() {
    if (GoogleAdSense_instance === null) {
      new GoogleAdSense();
    }
    return GoogleAdSense_instance;
  }
  function GoogleRecaptchaUtils() {
    GoogleRecaptchaUtils_instance = this;
    this.isGoogleRecaptchaLoaded_0 = false;
    this.queuedRecaptchas_0 = ArrayList_init();
  }
  GoogleRecaptchaUtils.prototype.onRecaptchaLoadCallback = function () {
    this.isGoogleRecaptchaLoaded_0 = true;
    println('Google Recaptcha successfully loaded!');
    println('There are ' + this.queuedRecaptchas_0.size + ' recaptchas pending');
    var tmp$;
    tmp$ = this.queuedRecaptchas_0.iterator();
    while (tmp$.hasNext()) {
      var element = tmp$.next();
      grecaptcha.render(element.element, element.options);
    }
    this.queuedRecaptchas_0.clear();
  };
  GoogleRecaptchaUtils.prototype.render_78gno$ = function (element, options) {
    if (this.isGoogleRecaptchaLoaded_0) {
      println('Google Recaptcha is already loaded, rendering right now...');
      grecaptcha.render(element, options);
    }
     else {
      println("Google Recaptcha isn't loaded yet, rendering later,..");
      this.queuedRecaptchas_0.add_11rb$(new GoogleRecaptchaUtils$QueuedRecaptcha(element, options));
    }
  };
  function GoogleRecaptchaUtils$QueuedRecaptcha(element, options) {
    this.element = element;
    this.options = options;
  }
  GoogleRecaptchaUtils$QueuedRecaptcha.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'QueuedRecaptcha',
    interfaces: []
  };
  GoogleRecaptchaUtils$QueuedRecaptcha.prototype.component1 = function () {
    return this.element;
  };
  GoogleRecaptchaUtils$QueuedRecaptcha.prototype.component2 = function () {
    return this.options;
  };
  GoogleRecaptchaUtils$QueuedRecaptcha.prototype.copy_78gno$ = function (element, options) {
    return new GoogleRecaptchaUtils$QueuedRecaptcha(element === void 0 ? this.element : element, options === void 0 ? this.options : options);
  };
  GoogleRecaptchaUtils$QueuedRecaptcha.prototype.toString = function () {
    return 'QueuedRecaptcha(element=' + Kotlin.toString(this.element) + (', options=' + Kotlin.toString(this.options)) + ')';
  };
  GoogleRecaptchaUtils$QueuedRecaptcha.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.element) | 0;
    result = result * 31 + Kotlin.hashCode(this.options) | 0;
    return result;
  };
  GoogleRecaptchaUtils$QueuedRecaptcha.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.element, other.element) && Kotlin.equals(this.options, other.options)))));
  };
  GoogleRecaptchaUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'GoogleRecaptchaUtils',
    interfaces: []
  };
  var GoogleRecaptchaUtils_instance = null;
  function GoogleRecaptchaUtils_getInstance() {
    if (GoogleRecaptchaUtils_instance === null) {
      new GoogleRecaptchaUtils();
    }
    return GoogleRecaptchaUtils_instance;
  }
  function GuildConfig(general) {
    GuildConfig$Companion_getInstance();
    if (general === void 0)
      general = null;
    this.general = general;
  }
  function GuildConfig$Companion() {
    GuildConfig$Companion_instance = this;
  }
  GuildConfig$Companion.prototype.serializer = function () {
    return GuildConfig$$serializer_getInstance();
  };
  GuildConfig$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var GuildConfig$Companion_instance = null;
  function GuildConfig$Companion_getInstance() {
    if (GuildConfig$Companion_instance === null) {
      new GuildConfig$Companion();
    }
    return GuildConfig$Companion_instance;
  }
  function GuildConfig$$serializer() {
    this.descriptor_9gklwg$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.GuildConfig', this);
    this.descriptor.addElement_ivxn3r$('general', true);
    GuildConfig$$serializer_instance = this;
  }
  Object.defineProperty(GuildConfig$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_9gklwg$_0;
    }
  });
  GuildConfig$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    if (!equals(obj.general, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 0))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 0, GeneralConfig$$serializer_getInstance(), obj.general);
    output.endStructure_qatsm0$(this.descriptor);
  };
  GuildConfig$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = (bitMask0 & 1) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 0, GeneralConfig$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 0, GeneralConfig$$serializer_getInstance(), local0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return GuildConfig_init(bitMask0, local0, null);
  };
  GuildConfig$$serializer.prototype.childSerializers = function () {
    return [new NullableSerializer(GeneralConfig$$serializer_getInstance())];
  };
  GuildConfig$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var GuildConfig$$serializer_instance = null;
  function GuildConfig$$serializer_getInstance() {
    if (GuildConfig$$serializer_instance === null) {
      new GuildConfig$$serializer();
    }
    return GuildConfig$$serializer_instance;
  }
  function GuildConfig_init(seen1, general, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(GuildConfig.prototype);
    if ((seen1 & 1) === 0)
      $this.general = null;
    else
      $this.general = general;
    return $this;
  }
  GuildConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'GuildConfig',
    interfaces: []
  };
  GuildConfig.prototype.component1 = function () {
    return this.general;
  };
  GuildConfig.prototype.copy_nlj4y9$ = function (general) {
    return new GuildConfig(general === void 0 ? this.general : general);
  };
  GuildConfig.prototype.toString = function () {
    return 'GuildConfig(general=' + Kotlin.toString(this.general) + ')';
  };
  GuildConfig.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.general) | 0;
    return result;
  };
  GuildConfig.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && Kotlin.equals(this.general, other.general))));
  };
  function suspendCoroutine$lambda(closure$block) {
    return function (c) {
      var safe = SafeContinuation_init(intercepted(c));
      closure$block(safe);
      return safe.getOrThrow();
    };
  }
  function HttpRequest() {
    HttpRequest$Companion_getInstance();
  }
  function HttpRequest$Companion() {
    HttpRequest$Companion_instance = this;
  }
  function HttpRequest$Companion$get$lambda$lambda(closure$xmlHttp, closure$cont) {
    return function (it) {
      if (closure$xmlHttp.readyState === toShort(4)) {
        var $receiver = closure$cont;
        var value = new HttpResponse_0(closure$xmlHttp.status, closure$xmlHttp.responseText);
        $receiver.resumeWith_tl1gpc$(new Result(value));
      }
      return Unit;
    };
  }
  function HttpRequest$Companion$get$lambda(closure$xmlHttp) {
    return function (cont) {
      closure$xmlHttp.onreadystatechange = HttpRequest$Companion$get$lambda$lambda(closure$xmlHttp, cont);
      closure$xmlHttp.send(null);
      return Unit;
    };
  }
  function Coroutine$get_61zpoe$($this, url_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$url = url_0;
  }
  Coroutine$get_61zpoe$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$get_61zpoe$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$get_61zpoe$.prototype.constructor = Coroutine$get_61zpoe$;
  Coroutine$get_61zpoe$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open('GET', this.local$url, true);
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda(HttpRequest$Companion$get$lambda(xmlHttp))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpRequest$Companion.prototype.get_61zpoe$ = function (url_0, continuation_0, suspended) {
    var instance = new Coroutine$get_61zpoe$(this, url_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function HttpRequest$Companion$post$lambda$lambda(closure$xmlHttp, closure$cont) {
    return function (it) {
      if (closure$xmlHttp.readyState === toShort(4)) {
        var $receiver = closure$cont;
        var value = new HttpResponse_0(closure$xmlHttp.status, closure$xmlHttp.responseText);
        $receiver.resumeWith_tl1gpc$(new Result(value));
      }
      return Unit;
    };
  }
  function HttpRequest$Companion$post$lambda(closure$xmlHttp, closure$data) {
    return function (cont) {
      closure$xmlHttp.onreadystatechange = HttpRequest$Companion$post$lambda$lambda(closure$xmlHttp, cont);
      closure$xmlHttp.send(closure$data);
      return Unit;
    };
  }
  function Coroutine$post_puj7f4$($this, url_0, data_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$url = url_0;
    this.local$data = data_0;
  }
  Coroutine$post_puj7f4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$post_puj7f4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$post_puj7f4$.prototype.constructor = Coroutine$post_puj7f4$;
  Coroutine$post_puj7f4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open('POST', this.local$url, true);
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda(HttpRequest$Companion$post$lambda(xmlHttp, this.local$data))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpRequest$Companion.prototype.post_puj7f4$ = function (url_0, data_0, continuation_0, suspended) {
    var instance = new Coroutine$post_puj7f4$(this, url_0, data_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  function HttpRequest$Companion$patch$lambda$lambda(closure$xmlHttp, closure$cont) {
    return function (it) {
      if (closure$xmlHttp.readyState === toShort(4)) {
        var $receiver = closure$cont;
        var value = new HttpResponse_0(closure$xmlHttp.status, closure$xmlHttp.responseText);
        $receiver.resumeWith_tl1gpc$(new Result(value));
      }
      return Unit;
    };
  }
  function HttpRequest$Companion$patch$lambda(closure$xmlHttp, closure$data) {
    return function (cont) {
      closure$xmlHttp.onreadystatechange = HttpRequest$Companion$patch$lambda$lambda(closure$xmlHttp, cont);
      closure$xmlHttp.send(closure$data);
      return Unit;
    };
  }
  function Coroutine$patch_puj7f4$($this, url_0, data_0, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.exceptionState_0 = 1;
    this.$this = $this;
    this.local$url = url_0;
    this.local$data = data_0;
  }
  Coroutine$patch_puj7f4$.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$patch_puj7f4$.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$patch_puj7f4$.prototype.constructor = Coroutine$patch_puj7f4$;
  Coroutine$patch_puj7f4$.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.open('PATCH', this.local$url, true);
            this.state_0 = 2;
            this.result_0 = suspendCoroutine$lambda(HttpRequest$Companion$patch$lambda(xmlHttp, this.local$data))(this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.result_0;
            return this.result_0;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  HttpRequest$Companion.prototype.patch_puj7f4$ = function (url_0, data_0, continuation_0, suspended) {
    var instance = new Coroutine$patch_puj7f4$(this, url_0, data_0, continuation_0);
    if (suspended)
      return instance;
    else
      return instance.doResume(null);
  };
  HttpRequest$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var HttpRequest$Companion_instance = null;
  function HttpRequest$Companion_getInstance() {
    if (HttpRequest$Companion_instance === null) {
      new HttpRequest$Companion();
    }
    return HttpRequest$Companion_instance;
  }
  HttpRequest.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpRequest',
    interfaces: []
  };
  function HttpResponse_0(statusCode, body) {
    this.statusCode = statusCode;
    this.body = body;
  }
  HttpResponse_0.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'HttpResponse',
    interfaces: []
  };
  function JsonElement(backed) {
    this.backed = backed;
    this.long = toLong(toString(this.backed));
  }
  Object.defineProperty(JsonElement.prototype, 'string', {
    get: function () {
      return toString(this.backed);
    }
  });
  JsonElement.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JsonElement',
    interfaces: []
  };
  function JsonObject(backed) {
    JsonElement.call(this, backed);
  }
  JsonObject.prototype.get_61zpoe$ = function (s) {
    var tmp$;
    var json = Kotlin.isType(tmp$ = this.backed, Object) ? tmp$ : throwCCE();
    var result = this.backed[s];
    return new JsonElement(result);
  };
  JsonObject.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'JsonObject',
    interfaces: [JsonElement]
  };
  function LevelUpAnnouncementType(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LevelUpAnnouncementType_initFields() {
    LevelUpAnnouncementType_initFields = function () {
    };
    LevelUpAnnouncementType$DISABLED_instance = new LevelUpAnnouncementType('DISABLED', 0);
    LevelUpAnnouncementType$SAME_CHANNEL_instance = new LevelUpAnnouncementType('SAME_CHANNEL', 1);
    LevelUpAnnouncementType$DIRECT_MESSAGE_instance = new LevelUpAnnouncementType('DIRECT_MESSAGE', 2);
    LevelUpAnnouncementType$DIFFERENT_CHANNEL_instance = new LevelUpAnnouncementType('DIFFERENT_CHANNEL', 3);
  }
  var LevelUpAnnouncementType$DISABLED_instance;
  function LevelUpAnnouncementType$DISABLED_getInstance() {
    LevelUpAnnouncementType_initFields();
    return LevelUpAnnouncementType$DISABLED_instance;
  }
  var LevelUpAnnouncementType$SAME_CHANNEL_instance;
  function LevelUpAnnouncementType$SAME_CHANNEL_getInstance() {
    LevelUpAnnouncementType_initFields();
    return LevelUpAnnouncementType$SAME_CHANNEL_instance;
  }
  var LevelUpAnnouncementType$DIRECT_MESSAGE_instance;
  function LevelUpAnnouncementType$DIRECT_MESSAGE_getInstance() {
    LevelUpAnnouncementType_initFields();
    return LevelUpAnnouncementType$DIRECT_MESSAGE_instance;
  }
  var LevelUpAnnouncementType$DIFFERENT_CHANNEL_instance;
  function LevelUpAnnouncementType$DIFFERENT_CHANNEL_getInstance() {
    LevelUpAnnouncementType_initFields();
    return LevelUpAnnouncementType$DIFFERENT_CHANNEL_instance;
  }
  LevelUpAnnouncementType.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LevelUpAnnouncementType',
    interfaces: [Enum]
  };
  function LevelUpAnnouncementType$values() {
    return [LevelUpAnnouncementType$DISABLED_getInstance(), LevelUpAnnouncementType$SAME_CHANNEL_getInstance(), LevelUpAnnouncementType$DIRECT_MESSAGE_getInstance(), LevelUpAnnouncementType$DIFFERENT_CHANNEL_getInstance()];
  }
  LevelUpAnnouncementType.values = LevelUpAnnouncementType$values;
  function LevelUpAnnouncementType$valueOf(name) {
    switch (name) {
      case 'DISABLED':
        return LevelUpAnnouncementType$DISABLED_getInstance();
      case 'SAME_CHANNEL':
        return LevelUpAnnouncementType$SAME_CHANNEL_getInstance();
      case 'DIRECT_MESSAGE':
        return LevelUpAnnouncementType$DIRECT_MESSAGE_getInstance();
      case 'DIFFERENT_CHANNEL':
        return LevelUpAnnouncementType$DIFFERENT_CHANNEL_getInstance();
      default:throwISE('No enum constant net.perfectdreams.spicymorenitta.utils.levelup.LevelUpAnnouncementType.' + name);
    }
  }
  LevelUpAnnouncementType.valueOf_61zpoe$ = LevelUpAnnouncementType$valueOf;
  function BaseLocale(id, localeEntries) {
    BaseLocale$Companion_getInstance();
    this.id = id;
    this.localeEntries = localeEntries;
  }
  Object.defineProperty(BaseLocale.prototype, 'path', {
    get: function () {
      return this.get_25kzsl$('website.localePath', []);
    }
  });
  BaseLocale.prototype.get_25kzsl$ = function (key, arguments_0) {
    var tmp$;
    try {
      var result = this.f_aheo4u$(this.getWithType_ytbaoo$(key), arguments_0.slice());
      var builder = StringBuilder_init();
      var isQuotes = false;
      tmp$ = iterator(result);
      while (tmp$.hasNext()) {
        var ch = unboxChar(tmp$.next());
        if (ch === 39) {
          if (isQuotes) {
            builder.append_s8itvh$(39);
            isQuotes = false;
            continue;
          }
          isQuotes = true;
          continue;
        }
        isQuotes = false;
        builder.append_s8itvh$(ch);
      }
      return this.f_aheo4u$(builder.toString(), arguments_0.slice());
    }
     catch (e) {
      if (Kotlin.isType(e, RuntimeException)) {
        this.error_yhszz7$(['Error when trying to retrieve ' + key]);
      }
       else
        throw e;
    }
    return '!!{' + key + '}!!';
  };
  BaseLocale.prototype.getWithType_ytbaoo$ = function (key) {
    var tmp$, tmp$_0;
    tmp$ = this.localeEntries.get_11rb$(key);
    if (tmp$ == null) {
      throw RuntimeException_init('Key ' + key + " doesn't exist!");
    }
    var entry = tmp$;
    return (tmp$_0 = entry) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
  };
  BaseLocale.prototype.getList_61zpoe$ = function (key) {
    var entry = this.getWithType_ytbaoo$(key);
    if (startsWith(entry, 'list::')) {
      var list = ArrayList_init();
      list.addAll_brywnq$(split(replaceFirst(entry, 'list::', ''), ['\n']));
      return list;
    }
     else {
      this.error_yhszz7$(['Error when trying to retrieve list with ' + key + ', missing ' + '"' + 'list::' + '"' + '!']);
    }
    throw RuntimeException_init_0();
  };
  BaseLocale.prototype.msgFormat_aheo4u$ = function ($receiver, arguments_0) {
    var str = {v: $receiver};
    var tmp$, tmp$_0;
    var index = 0;
    for (tmp$ = 0; tmp$ !== arguments_0.length; ++tmp$) {
      var item = arguments_0[tmp$];
      str.v = replace(str.v, '{' + (tmp$_0 = index, index = tmp$_0 + 1 | 0, tmp$_0) + '}', toString(item));
    }
    return str.v;
  };
  BaseLocale.prototype.f_aheo4u$ = function ($receiver, arguments_0) {
    return this.msgFormat_aheo4u$($receiver, arguments_0.slice());
  };
  BaseLocale.prototype.buildAsHtml_yljpba$ = function (updateString, onControlChar, onStringBuild) {
    var tmp$;
    var isControl = false;
    var ignoreNext = false;
    var genericStringBuilder = StringBuilder_init();
    tmp$ = iterator(updateString);
    while (tmp$.hasNext()) {
      var ch = unboxChar(tmp$.next());
      if (ignoreNext) {
        ignoreNext = false;
        continue;
      }
      if (isControl) {
        ignoreNext = true;
        isControl = false;
        var num = toInt(String.fromCharCode(ch));
        if (genericStringBuilder.length > 0) {
          onStringBuild(genericStringBuilder.toString());
          genericStringBuilder.clear();
        }
        onControlChar(num);
        continue;
      }
      if (ch === 123) {
        isControl = true;
        continue;
      }
      genericStringBuilder.append_s8itvh$(ch);
    }
    onStringBuild(genericStringBuilder.toString());
  };
  function BaseLocale$Companion() {
    BaseLocale$Companion_instance = this;
  }
  BaseLocale$Companion.prototype.serializer = function () {
    return BaseLocale$$serializer_getInstance();
  };
  BaseLocale$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var BaseLocale$Companion_instance = null;
  function BaseLocale$Companion_getInstance() {
    if (BaseLocale$Companion_instance === null) {
      new BaseLocale$Companion();
    }
    return BaseLocale$Companion_instance;
  }
  function BaseLocale$$serializer() {
    this.descriptor_6cf9p2$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.locale.BaseLocale', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('localeEntries', false);
    BaseLocale$$serializer_instance = this;
  }
  Object.defineProperty(BaseLocale$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_6cf9p2$_0;
    }
  });
  BaseLocale$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeSerializableElement_blecud$(this.descriptor, 1, new LinkedHashMapSerializer(internal.StringSerializer, internal.StringSerializer), obj.localeEntries);
    output.endStructure_qatsm0$(this.descriptor);
  };
  BaseLocale$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 1, new LinkedHashMapSerializer(internal.StringSerializer, internal.StringSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 1, new LinkedHashMapSerializer(internal.StringSerializer, internal.StringSerializer), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return BaseLocale_init(bitMask0, local0, local1, null);
  };
  BaseLocale$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, new LinkedHashMapSerializer(internal.StringSerializer, internal.StringSerializer)];
  };
  BaseLocale$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var BaseLocale$$serializer_instance = null;
  function BaseLocale$$serializer_getInstance() {
    if (BaseLocale$$serializer_instance === null) {
      new BaseLocale$$serializer();
    }
    return BaseLocale$$serializer_instance;
  }
  function BaseLocale_init(seen1, id, localeEntries, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(BaseLocale.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('localeEntries');
    else
      $this.localeEntries = localeEntries;
    return $this;
  }
  BaseLocale.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'BaseLocale',
    interfaces: [Logging]
  };
  function Logging() {
  }
  Logging.prototype.success_yhszz7$ = function (o) {
    var tmp$;
    (tmp$ = console).log.apply(tmp$, ['%c[' + toString(Kotlin.getKClassFromExpression(this).simpleName) + '] [' + '\uD83D' + '\uDE0A' + ' success] ' + toString(first_0(o)), 'color: green;'].concat(copyToArray(drop(o, 1))));
  };
  Logging.prototype.info_yhszz7$ = function (o) {
    var tmp$;
    (tmp$ = console).log.apply(tmp$, ['%c[' + toString(Kotlin.getKClassFromExpression(this).simpleName) + '] [' + '\uD83E' + '\uDD14' + ' info] ' + toString(first_0(o)), 'color: blue;'].concat(copyToArray(drop(o, 1))));
  };
  Logging.prototype.warn_yhszz7$ = function (o) {
    var tmp$;
    (tmp$ = console).log.apply(tmp$, ['%c[' + toString(Kotlin.getKClassFromExpression(this).simpleName) + '] [' + '\uD83D' + '\uDE44' + ' warn] ' + toString(first_0(o)), 'color: pink;'].concat(copyToArray(drop(o, 1))));
  };
  Logging.prototype.error_yhszz7$ = function (o) {
    var tmp$;
    (tmp$ = console).log.apply(tmp$, ['%c[' + toString(Kotlin.getKClassFromExpression(this).simpleName) + '] [' + '\uD83D' + '\uDCA5' + ' error] ' + toString(first_0(o)), 'color: red;'].concat(copyToArray(drop(o, 1))));
  };
  Logging.prototype.debug_yhszz7$ = function (o) {
    var tmp$;
    (tmp$ = console).log.apply(tmp$, ['%c[' + toString(Kotlin.getKClassFromExpression(this).simpleName) + '] [' + '\uD83D' + '\uDC40' + ' debug] ' + toString(first_0(o)), 'color: gray;'].concat(copyToArray(drop(o, 1))));
  };
  Logging.$metadata$ = {
    kind: Kind_INTERFACE,
    simpleName: 'Logging',
    interfaces: []
  };
  function get_loriUrl_0() {
    return window.location.protocol + '//' + window.location.host + '/';
  }
  function Placeholders() {
    Placeholders_instance = this;
    this.DEFAULT_PLACEHOLDERS_uwh1k8$_0 = lazy(Placeholders$DEFAULT_PLACEHOLDERS$lambda);
  }
  Object.defineProperty(Placeholders.prototype, 'DEFAULT_PLACEHOLDERS', {
    get: function () {
      return this.DEFAULT_PLACEHOLDERS_uwh1k8$_0.value;
    }
  });
  function Placeholders$DEFAULT_PLACEHOLDERS$lambda() {
    return mutableMapOf([to('user', 'Mostra o nome do usu\xE1rio que provocou a a\xE7\xE3o'), to('@user', 'Menciona o usu\xE1rio que provocou a a\xE7\xE3o'), to('nickname', ' Mostra o nome do usu\xE1rio no servidor (caso ele tenha mudado o apelido dele no servidor, ir\xE1 aparecer o apelido dele, em vez do nome original)'), to('user-discriminator', 'Mostra o discriminator do usu\xE1rio que provocou a a\xE7\xE3o'), to('user-id', 'Mostra o ID do usu\xE1rio que provocou a a\xE7\xE3o'), to('user-avatar-url', 'Mostra a URL do avatar do usu\xE1rio'), to('guild', ' Mostra o nome do servidor'), to('guild-size', 'Mostra a quantidade de membros no servidor')]);
  }
  Placeholders.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Placeholders',
    interfaces: []
  };
  var Placeholders_instance = null;
  function Placeholders_getInstance() {
    if (Placeholders_instance === null) {
      new Placeholders();
    }
    return Placeholders_instance;
  }
  function patch$lambda($receiver) {
    return Unit;
  }
  function SaveUtils() {
    SaveUtils_instance = this;
  }
  function SaveUtils$prepareSave$lambda$lambda(closure$json) {
    return function ($receiver) {
      $receiver.body = JSON.stringify(closure$json);
      return Unit;
    };
  }
  function SaveUtils$prepareSave$lambda$lambda_0(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function SaveUtils$prepareSave$lambda$lambda_1(closure$response) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Oopsie Woopsie! ' + closure$response.status.value + ' ' + closure$response.status.description);
      return Unit;
    };
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 100%;');
    return Unit;
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'overflow: hidden;');
    img($receiver, 'Loritta Pobre', get_loriUrl_0() + 'assets/img/loritta_pobre.png', 'animated fadeInUp', SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Erro ao salvar configura\xE7\xE3o!');
    return Unit;
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$("Infelizmente ningu\xE9m \xE9 perfeito... e pelo visto voc\xEA encontrou um problema no meu website... Tente recarregar a p\xE1gina e veja se o problema persiste, caso persista, entre no meu <a href='" + get_loriUrl_0() + "support'>servidor de suporte<\/a> e envie o c\xF3digo abaixo junto com uma pequena explica\xE7\xE3o sobre o que voc\xEA estava tentando fazer no momento que deu o erro! As configura\xE7\xF5es possivelmente n\xE3o foram salvas, ent\xE3o salve tudo que voc\xEA modificou antes de sair da p\xE1gina!");
    return Unit;
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Desculpe pela inconveni\xEAncia...');
    return Unit;
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$body) {
    return function ($receiver) {
      set_style($receiver, 'word-wrap: break-word; white-space: pre-wrap;');
      $receiver.unaryPlus_pdl1vz$(closure$body.v);
      return Unit;
    };
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda_0(closure$body) {
    return function ($receiver) {
      h3($receiver, 'sectionHeader', SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda);
      p($receiver, void 0, SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda_0);
      p($receiver, void 0, SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda_1);
      pre($receiver, void 0, SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$body));
      return Unit;
    };
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda$lambda_0(closure$body) {
    return function ($receiver) {
      div($receiver, 'sectionText', SaveUtils$prepareSave$lambda$lambda$lambda$lambda$lambda_0(closure$body));
      return Unit;
    };
  }
  function SaveUtils$prepareSave$lambda$lambda$lambda(closure$body) {
    return function ($receiver) {
      set_style($receiver, 'text-align: left;');
      div($receiver, 'pure-u-1 pure-u-md-1-4', SaveUtils$prepareSave$lambda$lambda$lambda$lambda);
      div($receiver, 'pure-u-1 pure-u-md-3-4', SaveUtils$prepareSave$lambda$lambda$lambda$lambda_0(closure$body));
      return Unit;
    };
  }
  function SaveUtils$prepareSave$lambda$lambda_2(closure$body) {
    return function ($receiver) {
      div($receiver, 'pure-g vertically-centered-content', SaveUtils$prepareSave$lambda$lambda$lambda(closure$body));
      return Unit;
    };
  }
  function Coroutine$SaveUtils$prepareSave$lambda(closure$endpoint_0, closure$json_0, closure$onFinish_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$closure$endpoint = closure$endpoint_0;
    this.local$closure$json = closure$json_0;
    this.local$closure$onFinish = closure$onFinish_0;
    this.local$response = void 0;
    this.local$response_0 = void 0;
  }
  Coroutine$SaveUtils$prepareSave$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$SaveUtils$prepareSave$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$SaveUtils$prepareSave$lambda.prototype.constructor = Coroutine$SaveUtils$prepareSave$lambda;
  Coroutine$SaveUtils$prepareSave$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            var $receiver_0 = http;
            var urlString = this.local$closure$endpoint;
            var block = SaveUtils$prepareSave$lambda$lambda(this.local$closure$json);
            var host_0;
            var body_0;
            host_0 = 'localhost';
            body_0 = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host_0, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Patch;
            $receiver_1.body = body_0;
            takeFrom($receiver_1.url, urlString);
            block($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(getKClass(HttpResponse), [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = Kotlin.isType(tmp$_4 = $this_0, HttpResponse) ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(getKClass(HttpResponse), call.JsType, createKType(getKClass(HttpResponse), [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = Kotlin.isType(tmp$_6 = this.result_0, HttpResponse) ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = Kotlin.isType(tmp$_5 = this.result_0, HttpResponse) ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            this.local$response_0 = this.result_0;
            this.state_0 = 10;
            this.result_0 = readText(this.local$response_0, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            var body = {v: this.result_0};
            LoriDashboard_getInstance().hideLoadingBar();
            tmp$ = this.local$response_0.status.value;
            if (!(200 <= tmp$ && tmp$ <= 299)) {
              LoriDashboard_getInstance().configErrorSfx.play();
              var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
              modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', SaveUtils$prepareSave$lambda$lambda_0(modal));
              var stringBuilder = StringBuilder_init();
              div_0(appendHTML(div_0(appendHTML(stringBuilder, false), 'category-name', SaveUtils$prepareSave$lambda$lambda_1(this.local$response_0))), void 0, SaveUtils$prepareSave$lambda$lambda_2(body));
              modal.setContent(stringBuilder.toString());
              return modal.open(), Unit;
            }
             else {
              this.local$closure$onFinish != null ? this.local$closure$onFinish(new HttpResponse_0(this.local$response_0.status.value, body.v)) : null;
              return LoriDashboard_getInstance().configSavedSfx.play(), Unit;
            }

          case 11:
            return;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function SaveUtils$prepareSave$lambda(closure$endpoint_0, closure$json_0, closure$onFinish_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$SaveUtils$prepareSave$lambda(closure$endpoint_0, closure$json_0, closure$onFinish_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  SaveUtils.prototype.prepareSave_feck85$ = function (type, extras, showSaveScreen, onFinish, endpoint) {
    if (showSaveScreen === void 0)
      showSaveScreen = true;
    if (onFinish === void 0)
      onFinish = null;
    if (endpoint === void 0)
      endpoint = get_loriUrl_0() + 'api/v1/guild/' + guildId + '/config';
    println('Preparing saving stuff...');
    var json_0 = json([]);
    var config = json([]);
    json_0['type'] = type;
    extras(config);
    json_0['config'] = config;
    println('Sending save stuff... kthxbye!');
    println('Sending: ' + JSON.stringify(json_0));
    println('Endpoint: ' + endpoint);
    LoriDashboard_getInstance().showLoadingBar_pdl1vj$(get_locale().get_25kzsl$('loritta.saving', []) + '...');
    launch(coroutines.GlobalScope, void 0, void 0, SaveUtils$prepareSave$lambda(endpoint, json_0, onFinish));
  };
  SaveUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SaveUtils',
    interfaces: []
  };
  var SaveUtils_instance = null;
  function SaveUtils_getInstance() {
    if (SaveUtils_instance === null) {
      new SaveUtils();
    }
    return SaveUtils_instance;
  }
  function SpicyDashboard() {
    SpicyDashboard_instance = this;
  }
  SpicyDashboard.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SpicyDashboard',
    interfaces: []
  };
  var SpicyDashboard_instance = null;
  function SpicyDashboard_getInstance() {
    if (SpicyDashboard_instance === null) {
      new SpicyDashboard();
    }
    return SpicyDashboard_instance;
  }
  function TemmieDiscordGuild(id, name, icon, owner, permissions, joined) {
    TemmieDiscordGuild$Companion_getInstance();
    if (icon === void 0)
      icon = null;
    this.id = id;
    this.name = name;
    this.icon = icon;
    this.owner = owner;
    this.permissions = permissions;
    this.joined = joined;
  }
  function TemmieDiscordGuild$Companion() {
    TemmieDiscordGuild$Companion_instance = this;
  }
  TemmieDiscordGuild$Companion.prototype.serializer = function () {
    return TemmieDiscordGuild$$serializer_getInstance();
  };
  TemmieDiscordGuild$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var TemmieDiscordGuild$Companion_instance = null;
  function TemmieDiscordGuild$Companion_getInstance() {
    if (TemmieDiscordGuild$Companion_instance === null) {
      new TemmieDiscordGuild$Companion();
    }
    return TemmieDiscordGuild$Companion_instance;
  }
  function TemmieDiscordGuild$$serializer() {
    this.descriptor_f0ik1f$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.TemmieDiscordGuild', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('icon', true);
    this.descriptor.addElement_ivxn3r$('owner', false);
    this.descriptor.addElement_ivxn3r$('permissions', false);
    this.descriptor.addElement_ivxn3r$('joined', false);
    TemmieDiscordGuild$$serializer_instance = this;
  }
  Object.defineProperty(TemmieDiscordGuild$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_f0ik1f$_0;
    }
  });
  TemmieDiscordGuild$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.name);
    if (!equals(obj.icon, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 2))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 2, internal.StringSerializer, obj.icon);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 3, obj.owner);
    output.encodeIntElement_4wpqag$(this.descriptor, 4, obj.permissions);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 5, obj.joined);
    output.endStructure_qatsm0$(this.descriptor);
  };
  TemmieDiscordGuild$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4
    , local5;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 2, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 2, internal.StringSerializer, local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = input.decodeIntElement_3zr2iy$(this.descriptor, 4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case 5:
          local5 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 5);
          bitMask0 |= 32;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return TemmieDiscordGuild_init(bitMask0, local0, local1, local2, local3, local4, local5, null);
  };
  TemmieDiscordGuild$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, new NullableSerializer(internal.StringSerializer), internal.BooleanSerializer, internal.IntSerializer, internal.BooleanSerializer];
  };
  TemmieDiscordGuild$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var TemmieDiscordGuild$$serializer_instance = null;
  function TemmieDiscordGuild$$serializer_getInstance() {
    if (TemmieDiscordGuild$$serializer_instance === null) {
      new TemmieDiscordGuild$$serializer();
    }
    return TemmieDiscordGuild$$serializer_instance;
  }
  function TemmieDiscordGuild_init(seen1, id, name, icon, owner, permissions, joined, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(TemmieDiscordGuild.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 4) === 0)
      $this.icon = null;
    else
      $this.icon = icon;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('owner');
    else
      $this.owner = owner;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('permissions');
    else
      $this.permissions = permissions;
    if ((seen1 & 32) === 0)
      throw new MissingFieldException('joined');
    else
      $this.joined = joined;
    return $this;
  }
  TemmieDiscordGuild.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TemmieDiscordGuild',
    interfaces: []
  };
  TemmieDiscordGuild.prototype.component1 = function () {
    return this.id;
  };
  TemmieDiscordGuild.prototype.component2 = function () {
    return this.name;
  };
  TemmieDiscordGuild.prototype.component3 = function () {
    return this.icon;
  };
  TemmieDiscordGuild.prototype.component4 = function () {
    return this.owner;
  };
  TemmieDiscordGuild.prototype.component5 = function () {
    return this.permissions;
  };
  TemmieDiscordGuild.prototype.component6 = function () {
    return this.joined;
  };
  TemmieDiscordGuild.prototype.copy_oo2ww3$ = function (id, name, icon, owner, permissions, joined) {
    return new TemmieDiscordGuild(id === void 0 ? this.id : id, name === void 0 ? this.name : name, icon === void 0 ? this.icon : icon, owner === void 0 ? this.owner : owner, permissions === void 0 ? this.permissions : permissions, joined === void 0 ? this.joined : joined);
  };
  TemmieDiscordGuild.prototype.toString = function () {
    return 'TemmieDiscordGuild(id=' + Kotlin.toString(this.id) + (', name=' + Kotlin.toString(this.name)) + (', icon=' + Kotlin.toString(this.icon)) + (', owner=' + Kotlin.toString(this.owner)) + (', permissions=' + Kotlin.toString(this.permissions)) + (', joined=' + Kotlin.toString(this.joined)) + ')';
  };
  TemmieDiscordGuild.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.id) | 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.icon) | 0;
    result = result * 31 + Kotlin.hashCode(this.owner) | 0;
    result = result * 31 + Kotlin.hashCode(this.permissions) | 0;
    result = result * 31 + Kotlin.hashCode(this.joined) | 0;
    return result;
  };
  TemmieDiscordGuild.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.id, other.id) && Kotlin.equals(this.name, other.name) && Kotlin.equals(this.icon, other.icon) && Kotlin.equals(this.owner, other.owner) && Kotlin.equals(this.permissions, other.permissions) && Kotlin.equals(this.joined, other.joined)))));
  };
  function TingleOptions(footer, stickyFooter, closeMethods, closeLabel, cssClass, onOpen, onClose, beforeClose) {
    if (footer === void 0)
      footer = null;
    if (stickyFooter === void 0)
      stickyFooter = null;
    if (closeMethods === void 0)
      closeMethods = [];
    if (closeLabel === void 0)
      closeLabel = null;
    if (cssClass === void 0)
      cssClass = [];
    if (onOpen === void 0)
      onOpen = null;
    if (onClose === void 0)
      onClose = null;
    if (beforeClose === void 0)
      beforeClose = null;
    this.footer = footer;
    this.stickyFooter = stickyFooter;
    this.closeMethods = closeMethods;
    this.closeLabel = closeLabel;
    this.cssClass = cssClass;
    this.onOpen = onOpen;
    this.onClose = onClose;
    this.beforeClose = beforeClose;
  }
  TingleOptions.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TingleOptions',
    interfaces: []
  };
  function UserIdentification(id, username, discriminator, avatar, bot, mfaEnabled, locale, verified, email, flags, premiumType) {
    UserIdentification$Companion_getInstance();
    if (mfaEnabled === void 0)
      mfaEnabled = false;
    if (premiumType === void 0)
      premiumType = 0;
    this.id = id;
    this.username = username;
    this.discriminator = discriminator;
    this.avatar = avatar;
    this.bot = bot;
    this.mfaEnabled = mfaEnabled;
    this.locale = locale;
    this.verified = verified;
    this.email = email;
    this.flags = flags;
    this.premiumType = premiumType;
  }
  Object.defineProperty(UserIdentification.prototype, 'userAvatarUrl', {
    get: function () {
      var tmp$, tmp$_0;
      if (((tmp$ = this.avatar) != null ? startsWith(tmp$, 'a_') : null) === true) {
        tmp$_0 = 'gif';
      }
       else {
        tmp$_0 = 'png';
      }
      var extension = tmp$_0;
      return 'https://cdn.discordapp.com/avatars/' + this.id + '/' + toString(this.avatar) + '.' + extension + '?size=256';
    }
  });
  function UserIdentification$Companion() {
    UserIdentification$Companion_instance = this;
  }
  UserIdentification$Companion.prototype.serializer = function () {
    return UserIdentification$$serializer_getInstance();
  };
  UserIdentification$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var UserIdentification$Companion_instance = null;
  function UserIdentification$Companion_getInstance() {
    if (UserIdentification$Companion_instance === null) {
      new UserIdentification$Companion();
    }
    return UserIdentification$Companion_instance;
  }
  function UserIdentification$$serializer() {
    this.descriptor_svx48$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.utils.UserIdentification', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('username', false);
    this.descriptor.addElement_ivxn3r$('discriminator', false);
    this.descriptor.addElement_ivxn3r$('avatar', false);
    this.descriptor.addElement_ivxn3r$('bot', false);
    this.descriptor.addElement_ivxn3r$('mfa_enabled', true);
    this.descriptor.addElement_ivxn3r$('locale', false);
    this.descriptor.addElement_ivxn3r$('verified', false);
    this.descriptor.addElement_ivxn3r$('email', false);
    this.descriptor.addElement_ivxn3r$('flags', false);
    this.descriptor.addElement_ivxn3r$('premium_type', true);
    UserIdentification$$serializer_instance = this;
  }
  Object.defineProperty(UserIdentification$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_svx48$_0;
    }
  });
  UserIdentification$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.username);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.discriminator);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 3, internal.StringSerializer, obj.avatar);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 4, internal.BooleanSerializer, obj.bot);
    if (!equals(obj.mfaEnabled, false) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 5))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 5, internal.BooleanSerializer, obj.mfaEnabled);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 6, internal.StringSerializer, obj.locale);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 7, internal.BooleanSerializer, obj.verified);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 8, internal.StringSerializer, obj.email);
    output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 9, internal.IntSerializer, obj.flags);
    if (!equals(obj.premiumType, 0) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 10))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 10, internal.IntSerializer, obj.premiumType);
    output.endStructure_qatsm0$(this.descriptor);
  };
  UserIdentification$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4
    , local5
    , local6
    , local7
    , local8
    , local9
    , local10;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = (bitMask0 & 8) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 3, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 3, internal.StringSerializer, local3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = (bitMask0 & 16) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 4, internal.BooleanSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 4, internal.BooleanSerializer, local4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case 5:
          local5 = (bitMask0 & 32) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 5, internal.BooleanSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 5, internal.BooleanSerializer, local5);
          bitMask0 |= 32;
          if (!readAll)
            break;
        case 6:
          local6 = (bitMask0 & 64) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 6, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 6, internal.StringSerializer, local6);
          bitMask0 |= 64;
          if (!readAll)
            break;
        case 7:
          local7 = (bitMask0 & 128) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 7, internal.BooleanSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 7, internal.BooleanSerializer, local7);
          bitMask0 |= 128;
          if (!readAll)
            break;
        case 8:
          local8 = (bitMask0 & 256) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 8, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 8, internal.StringSerializer, local8);
          bitMask0 |= 256;
          if (!readAll)
            break;
        case 9:
          local9 = (bitMask0 & 512) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 9, internal.IntSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 9, internal.IntSerializer, local9);
          bitMask0 |= 512;
          if (!readAll)
            break;
        case 10:
          local10 = (bitMask0 & 1024) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 10, internal.IntSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 10, internal.IntSerializer, local10);
          bitMask0 |= 1024;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return UserIdentification_init(bitMask0, local0, local1, local2, local3, local4, local5, local6, local7, local8, local9, local10, null);
  };
  UserIdentification$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.StringSerializer, new NullableSerializer(internal.StringSerializer), new NullableSerializer(internal.BooleanSerializer), new NullableSerializer(internal.BooleanSerializer), new NullableSerializer(internal.StringSerializer), new NullableSerializer(internal.BooleanSerializer), new NullableSerializer(internal.StringSerializer), new NullableSerializer(internal.IntSerializer), new NullableSerializer(internal.IntSerializer)];
  };
  UserIdentification$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var UserIdentification$$serializer_instance = null;
  function UserIdentification$$serializer_getInstance() {
    if (UserIdentification$$serializer_instance === null) {
      new UserIdentification$$serializer();
    }
    return UserIdentification$$serializer_instance;
  }
  function UserIdentification_init(seen1, id, username, discriminator, avatar, bot, mfaEnabled, locale, verified, email, flags, premiumType, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(UserIdentification.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('username');
    else
      $this.username = username;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('discriminator');
    else
      $this.discriminator = discriminator;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('avatar');
    else
      $this.avatar = avatar;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('bot');
    else
      $this.bot = bot;
    if ((seen1 & 32) === 0)
      $this.mfaEnabled = false;
    else
      $this.mfaEnabled = mfaEnabled;
    if ((seen1 & 64) === 0)
      throw new MissingFieldException('locale');
    else
      $this.locale = locale;
    if ((seen1 & 128) === 0)
      throw new MissingFieldException('verified');
    else
      $this.verified = verified;
    if ((seen1 & 256) === 0)
      throw new MissingFieldException('email');
    else
      $this.email = email;
    if ((seen1 & 512) === 0)
      throw new MissingFieldException('flags');
    else
      $this.flags = flags;
    if ((seen1 & 1024) === 0)
      $this.premiumType = 0;
    else
      $this.premiumType = premiumType;
    return $this;
  }
  UserIdentification.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UserIdentification',
    interfaces: []
  };
  function generateAd$lambda(closure$adSlot) {
    return function ($receiver) {
      set_style($receiver, 'display: block;');
      var $receiver_0 = $receiver.attributes;
      var key = 'data-ad-client';
      var value = 'ca-pub-9989170954243288';
      $receiver_0.put_xwzc9p$(key, value);
      var $receiver_1 = $receiver.attributes;
      var key_0 = 'data-ad-slot';
      var value_0 = closure$adSlot;
      $receiver_1.put_xwzc9p$(key_0, value_0);
      var $receiver_2 = $receiver.attributes;
      var key_1 = 'data-ad-format';
      $receiver_2.put_xwzc9p$(key_1, 'auto');
      var $receiver_3 = $receiver.attributes;
      var key_2 = 'data-full-width-responsive';
      $receiver_3.put_xwzc9p$(key_2, 'true');
      return Unit;
    };
  }
  function generateAd$lambda$lambda($receiver) {
    $receiver.raw_61zpoe$('(adsbygoogle = window.adsbygoogle || []).push({});');
    return Unit;
  }
  function generateAd$lambda_0($receiver) {
    unsafe($receiver, generateAd$lambda$lambda);
    return Unit;
  }
  function generateAd($receiver, adSlot, adName) {
    if (adName === void 0)
      adName = null;
    ins($receiver, 'adsbygoogle', generateAd$lambda(adSlot));
    script($receiver, html.ScriptType.textJavaScript, void 0, generateAd$lambda_0);
  }
  function patch$lambda_0($receiver) {
    return Unit;
  }
  function WebsiteUtils() {
    WebsiteUtils_instance = this;
    this.currentRadioButtonIdx = 0;
  }
  WebsiteUtils.prototype.getUrlWithLocale = function () {
    var href = window.location.href;
    var split_0 = split(href, ['/']);
    if (4 >= split_0.size)
      return href;
    return joinToString_0(split_0.subList_vux9f0$(0, 4), '/');
  };
  WebsiteUtils.prototype.getPathWithoutLocale = function () {
    var href = window.location.pathname;
    if (!endsWith(href, '/'))
      href += '/';
    var split_0 = split(href, ['/']);
    if (3 > split_0.size)
      return href;
    var result = '/' + joinToString_0(drop_0(split_0, 2), '/');
    if (!endsWith(result, '/'))
      result += '/';
    return result;
  };
  WebsiteUtils.prototype.getWebsiteLocaleIdViaPath = function () {
    var href = window.location.pathname;
    var split_0 = split(href, ['/']);
    return first(drop_0(split_0, 1));
  };
  function WebsiteUtils$patchGuildConfigById$ObjectLiteral() {
  }
  WebsiteUtils$patchGuildConfigById$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function WebsiteUtils$patchGuildConfigById$lambda$lambda(closure$data) {
    return function ($receiver) {
      $receiver.body = JSON.stringify(closure$data);
      return Unit;
    };
  }
  function Coroutine$WebsiteUtils$patchGuildConfigById$lambda(closure$id_0, closure$data_0, this$WebsiteUtils_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 6;
    this.local$closure$id = closure$id_0;
    this.local$closure$data = closure$data_0;
    this.local$this$WebsiteUtils = this$WebsiteUtils_0;
    this.local$response = void 0;
    this.local$result = void 0;
  }
  Coroutine$WebsiteUtils$patchGuildConfigById$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$WebsiteUtils$patchGuildConfigById$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$WebsiteUtils$patchGuildConfigById$lambda.prototype.constructor = Coroutine$WebsiteUtils$patchGuildConfigById$lambda;
  Coroutine$WebsiteUtils$patchGuildConfigById$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            SpicyMorenitta$Companion_getInstance().INSTANCE.showLoadingScreen_61zpoe$('Salvando...');
            var $receiver_0 = http;
            var urlString = 'https://spicy.loritta.website/api/v1/guilds/' + this.local$closure$id + '/config';
            var block = WebsiteUtils$patchGuildConfigById$lambda$lambda(this.local$closure$data);
            var host_0;
            var body_0;
            host_0 = 'localhost';
            body_0 = utils.EmptyContent;
            var $receiver_1 = new HttpRequestBuilder_init();
            url_0($receiver_1, 'http', host_0, 0, '/');
            $receiver_1.method = HttpMethod.Companion.Patch;
            $receiver_1.body = body_0;
            takeFrom($receiver_1.url, urlString);
            block($receiver_1);
            var $this_0 = new HttpStatement_init($receiver_1, $receiver_0);
            var tmp$_3, tmp$_4, tmp$_5;
            tmp$_3 = createKType(getKClass(HttpResponse), [], false);
            if (equals(tmp$_3, createKType(getKClass(HttpStatement_init), [], false))) {
              this.result_0 = Kotlin.isType(tmp$_4 = $this_0, HttpResponse) ? tmp$_4 : throwCCE();
              this.state_0 = 9;
              continue;
            }
             else {
              if (equals(tmp$_3, createKType(getKClass(HttpResponse), [], false))) {
                this.state_0 = 7;
                this.result_0 = $this_0.execute(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
               else {
                this.state_0 = 1;
                this.result_0 = $this_0.executeUnsafe(this);
                if (this.result_0 === COROUTINE_SUSPENDED)
                  return COROUTINE_SUSPENDED;
                continue;
              }
            }

          case 1:
            this.local$response = this.result_0;
            this.exceptionState_0 = 4;
            var tmp$_6;
            this.state_0 = 2;
            this.result_0 = this.local$response.call.receive_jo9acv$(new TypeInfo_init(getKClass(HttpResponse), call.JsType, createKType(getKClass(HttpResponse), [], false)), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 2:
            this.result_0 = Kotlin.isType(tmp$_6 = this.result_0, HttpResponse) ? tmp$_6 : throwCCE();
            this.exceptionState_0 = 6;
            this.finallyPath_0 = [3];
            this.state_0 = 5;
            continue;
          case 3:
            this.state_0 = 8;
            continue;
          case 4:
            this.finallyPath_0 = [6];
            this.state_0 = 5;
            continue;
          case 5:
            this.exceptionState_0 = 6;
            complete(this.local$response);
            this.state_0 = this.finallyPath_0.shift();
            continue;
          case 6:
            throw this.exception_0;
          case 7:
            this.result_0 = Kotlin.isType(tmp$_5 = this.result_0, HttpResponse) ? tmp$_5 : throwCCE();
            this.state_0 = 8;
            continue;
          case 8:
            this.state_0 = 9;
            continue;
          case 9:
            this.result_0;
            this.local$result = this.result_0;
            this.state_0 = 10;
            this.result_0 = readText(this.local$result, void 0, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 10:
            var asJson = this.result_0;
            this.local$this$WebsiteUtils.debug_yhszz7$([asJson]);
            SpicyMorenitta$Companion_getInstance().INSTANCE.hideLoadingScreen();
            if (!((tmp$ = this.local$result.status) != null ? tmp$.equals(HttpStatusCode.Companion.OK) : null)) {
              return this.local$this$WebsiteUtils.error_yhszz7$(['Something went wrong! ' + this.local$result.status]), Unit;
            }
             else {
              this.state_0 = 11;
              continue;
            }

          case 11:
            return Unit;
          default:this.state_0 = 6;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 6) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function WebsiteUtils$patchGuildConfigById$lambda(closure$id_0, closure$data_0, this$WebsiteUtils_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$WebsiteUtils$patchGuildConfigById$lambda(closure$id_0, closure$data_0, this$WebsiteUtils_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  WebsiteUtils.prototype.patchGuildConfigById_3m4wor$ = function (id, patchCode, data) {
    var obj = new WebsiteUtils$patchGuildConfigById$ObjectLiteral();
    obj.patchCode = patchCode;
    obj.data = data;
    launch(coroutines.GlobalScope, void 0, void 0, WebsiteUtils$patchGuildConfigById$lambda(id, data, this));
  };
  WebsiteUtils.prototype.canManageGuild_qbryc2$ = function (g) {
    return this.getUserPermissionLevel_qbryc2$(g).canAddBots;
  };
  WebsiteUtils.prototype.getUserPermissionLevel_qbryc2$ = function (g) {
    var tmp$;
    var isAdministrator = (g.permissions >> 3 & 1) === 1;
    var isManager = (g.permissions >> 5 & 1) === 1;
    if (g.owner)
      tmp$ = WebsiteUtils$UserPermissionLevel$OWNER_getInstance();
    else if (isAdministrator)
      tmp$ = WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_getInstance();
    else if (isManager)
      tmp$ = WebsiteUtils$UserPermissionLevel$MANAGER_getInstance();
    else
      tmp$ = WebsiteUtils$UserPermissionLevel$MEMBER_getInstance();
    return tmp$;
  };
  function WebsiteUtils$UserPermissionLevel(name, ordinal, canAddBots) {
    Enum.call(this);
    this.canAddBots = canAddBots;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function WebsiteUtils$UserPermissionLevel_initFields() {
    WebsiteUtils$UserPermissionLevel_initFields = function () {
    };
    WebsiteUtils$UserPermissionLevel$OWNER_instance = new WebsiteUtils$UserPermissionLevel('OWNER', 0, true);
    WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_instance = new WebsiteUtils$UserPermissionLevel('ADMINISTRATOR', 1, true);
    WebsiteUtils$UserPermissionLevel$MANAGER_instance = new WebsiteUtils$UserPermissionLevel('MANAGER', 2, true);
    WebsiteUtils$UserPermissionLevel$MEMBER_instance = new WebsiteUtils$UserPermissionLevel('MEMBER', 3, false);
  }
  var WebsiteUtils$UserPermissionLevel$OWNER_instance;
  function WebsiteUtils$UserPermissionLevel$OWNER_getInstance() {
    WebsiteUtils$UserPermissionLevel_initFields();
    return WebsiteUtils$UserPermissionLevel$OWNER_instance;
  }
  var WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_instance;
  function WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_getInstance() {
    WebsiteUtils$UserPermissionLevel_initFields();
    return WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_instance;
  }
  var WebsiteUtils$UserPermissionLevel$MANAGER_instance;
  function WebsiteUtils$UserPermissionLevel$MANAGER_getInstance() {
    WebsiteUtils$UserPermissionLevel_initFields();
    return WebsiteUtils$UserPermissionLevel$MANAGER_instance;
  }
  var WebsiteUtils$UserPermissionLevel$MEMBER_instance;
  function WebsiteUtils$UserPermissionLevel$MEMBER_getInstance() {
    WebsiteUtils$UserPermissionLevel_initFields();
    return WebsiteUtils$UserPermissionLevel$MEMBER_instance;
  }
  WebsiteUtils$UserPermissionLevel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'UserPermissionLevel',
    interfaces: [Enum]
  };
  function WebsiteUtils$UserPermissionLevel$values() {
    return [WebsiteUtils$UserPermissionLevel$OWNER_getInstance(), WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_getInstance(), WebsiteUtils$UserPermissionLevel$MANAGER_getInstance(), WebsiteUtils$UserPermissionLevel$MEMBER_getInstance()];
  }
  WebsiteUtils$UserPermissionLevel.values = WebsiteUtils$UserPermissionLevel$values;
  function WebsiteUtils$UserPermissionLevel$valueOf(name) {
    switch (name) {
      case 'OWNER':
        return WebsiteUtils$UserPermissionLevel$OWNER_getInstance();
      case 'ADMINISTRATOR':
        return WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_getInstance();
      case 'MANAGER':
        return WebsiteUtils$UserPermissionLevel$MANAGER_getInstance();
      case 'MEMBER':
        return WebsiteUtils$UserPermissionLevel$MEMBER_getInstance();
      default:throwISE('No enum constant net.perfectdreams.spicymorenitta.utils.WebsiteUtils.UserPermissionLevel.' + name);
    }
  }
  WebsiteUtils$UserPermissionLevel.valueOf_61zpoe$ = WebsiteUtils$UserPermissionLevel$valueOf;
  WebsiteUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'WebsiteUtils',
    interfaces: [Logging]
  };
  var WebsiteUtils_instance = null;
  function WebsiteUtils_getInstance() {
    if (WebsiteUtils_instance === null) {
      new WebsiteUtils();
    }
    return WebsiteUtils_instance;
  }
  function createRadioButton$lambda$lambda$lambda$lambda(closure$queryName) {
    return function (event) {
      var tmp$, tmp$_0;
      var tmp$_1;
      var tmp$_2;
      tmp$_2 = (Kotlin.isType(tmp$_1 = asList(document.querySelectorAll("input[name='" + closure$queryName + "']")), List) ? tmp$_1 : throwCCE()).iterator();
      while (tmp$_2.hasNext()) {
        var element = tmp$_2.next();
        var tmp$_3;
        if (!equals(element, event.target))
          (tmp$_3 = element.parentElement) != null ? removeClass(tmp$_3, ['active']) : null;
      }
      (tmp$_0 = (Kotlin.isType(tmp$ = event.target, HTMLInputElement) ? tmp$ : throwCCE()).parentElement) != null ? addClass(tmp$_0, ['active']) : null;
      return Unit;
    };
  }
  function createRadioButton$lambda$lambda$lambda(closure$queryName, closure$stringValue, closure$checked) {
    return function ($receiver) {
      set_id($receiver, 'radio-button-' + WebsiteUtils_getInstance().currentRadioButtonIdx);
      set_hidden($receiver, true);
      $receiver.name = closure$queryName;
      $receiver.value = closure$stringValue;
      $receiver.checked = closure$checked;
      set_onChangeFunction($receiver, createRadioButton$lambda$lambda$lambda$lambda(closure$queryName));
      return Unit;
    };
  }
  function createRadioButton$lambda$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function createRadioButton$lambda$lambda$lambda_0($receiver) {
    i($receiver, 'fas fa-check', createRadioButton$lambda$lambda$lambda$lambda_0);
    return Unit;
  }
  function createRadioButton$lambda$lambda$lambda$lambda_1(closure$title) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$title);
      return Unit;
    };
  }
  function createRadioButton$lambda$lambda$lambda$lambda_2(closure$subTitle) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$subTitle);
      return Unit;
    };
  }
  function createRadioButton$lambda$lambda$lambda_1(closure$title, closure$subTitle) {
    return function ($receiver) {
      div($receiver, 'title', createRadioButton$lambda$lambda$lambda$lambda_1(closure$title));
      div($receiver, 'subtitle', createRadioButton$lambda$lambda$lambda$lambda_2(closure$subTitle));
      return Unit;
    };
  }
  function createRadioButton$lambda$lambda(closure$queryName, closure$stringValue, closure$checked, closure$title, closure$subTitle) {
    return function ($receiver) {
      input_0($receiver, InputType.radio, void 0, void 0, void 0, void 0, createRadioButton$lambda$lambda$lambda(closure$queryName, closure$stringValue, closure$checked));
      set_id($receiver, 'prettified-radio-button-' + WebsiteUtils_getInstance().currentRadioButtonIdx);
      div($receiver, 'checkbox', createRadioButton$lambda$lambda$lambda_0);
      div($receiver, 'info', createRadioButton$lambda$lambda$lambda_1(closure$title, closure$subTitle));
      return Unit;
    };
  }
  function createRadioButton$lambda(closure$checked, closure$queryName, closure$stringValue, closure$title, closure$subTitle) {
    return function ($receiver) {
      div($receiver, 'discord-radio-button ' + (closure$checked ? 'active' : ''), createRadioButton$lambda$lambda(closure$queryName, closure$stringValue, closure$checked, closure$title, closure$subTitle));
      return Unit;
    };
  }
  function createRadioButton($receiver, queryName, title, subTitle, stringValue, checked) {
    label($receiver, void 0, createRadioButton$lambda(checked, queryName, stringValue, title, subTitle));
    var tmp$;
    tmp$ = WebsiteUtils_getInstance();
    tmp$.currentRadioButtonIdx = tmp$.currentRadioButtonIdx + 1 | 0;
  }
  function DailyView() {
    DailyView_instance = this;
  }
  function DailyView$start$lambda$lambda(it) {
    var json_0 = json([]);
    json_0['redirectUrl'] = get_loriUrl() + 'daily';
    window.location.href = 'https://discordapp.com/oauth2/authorize?redirect_uri=' + get_loriUrl() + 'dashboard&scope=identify%20guilds%20email%20guilds.join&response_type=code&client_id=297153970613387264&state=' + window.btoa(JSON.stringify(json_0));
    return Unit;
  }
  function DailyView$start$lambda(data, b, c) {
    var tmp$;
    println('Status data: ' + JSON.stringify(data));
    var status = data;
    var code = status['api:code'];
    if (code === 0) {
      jq('.daily-notification').text('Por favor, complete o reCAPTCHA');
      GoogleRecaptchaUtils_getInstance().render_78gno$(jq('#daily-captcha').get()[0], new RecaptchaOptions('6LfRyUkUAAAAAASo0YM4IZBqvkzxyRWJ1Ydw5weC', 'recaptchaCallback', 'normal'));
    }
     else if (code === 4) {
      jq('.daily-reward-button').addClass('button-discord-success').removeClass('button-discord-disabled').click(DailyView$start$lambda$lambda);
    }
     else {
      moment.locale('pt-br');
      switch (code) {
        case 4:
          tmp$ = 'Voc\xEA precisa entrar na sua conta do Discord antes de ganhar seu pr\xEAmio!';
          break;
        case 5:
          var moment_0 = new moment(status['canPayoutAgain']);
          tmp$ = replace('Voc\xEA j\xE1 recebeu seu pr\xEAmio hoje! Voc\xEA poder\xE1 votar novamente {0}!', '{0}', moment_0.fromNow());
          break;
        case 7:
          tmp$ = 'reCAPTCHA inv\xE1lido!';
          break;
        case 9:
          tmp$ = 'IP bloqueado!';
          break;
        default:tmp$ = 'Error: ' + code;
          break;
      }
      var error = tmp$;
      jq('.daily-notification').text(error);
    }
    LoriDashboard_getInstance().hideLoadingBar();
    return Unit;
  }
  DailyView.prototype.start = function () {
    LoriDashboard_getInstance().showLoadingBar_pdl1vj$('Carregando...');
    jQuery.post(get_loriUrl() + 'api/v1/economy/daily-reward-status', DailyView$start$lambda);
  };
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda(closure$payload) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Voc\xEA ganhou x' + closure$payload.sponsoredBy.multipliedBy + ' mais sonhos, gra\xE7as ao...');
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.attributes.put_xwzc9p$('width', '128');
    $receiver.attributes.put_xwzc9p$('height', '128');
    var $receiver_0 = $receiver.attributes;
    var value = 'border-radius: 99999px;';
    $receiver_0.put_xwzc9p$('style', value);
    return Unit;
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_1(closure$payload) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$payload.sponsoredBy.guild.name);
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_2(closure$payload) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Voc\xEA iria ganhar ' + closure$payload.sponsoredBy.originalPayout + ' sonhos, mas gra\xE7as ao patroc\xEDnio do ' + closure$payload.sponsoredBy.guild.name + ' voc\xEA ganhou ' + closure$payload.dailyPayout + '!');
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_3(closure$payload) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Agrade\xE7a ' + closure$payload.sponsoredBy.user.name + '#' + closure$payload.sponsoredBy.user.discriminator + ' por ter feito voc\xEA ganhar ' + (closure$payload.dailyPayout - closure$payload.sponsoredBy.originalPayout) + ' mais sonhos que o normal!');
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda(closure$payload) {
    return function ($receiver) {
      h1_0($receiver, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda(closure$payload));
      img_1($receiver, void 0, closure$payload.sponsoredBy.guild.iconUrl, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_0);
      h2($receiver, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_1(closure$payload));
      p_0($receiver, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_2(closure$payload));
      if (closure$payload.sponsoredBy.user != null) {
        p_0($receiver, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_3(closure$payload));
      }
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('alterando o valor do ship entre voc\xEA e a sua namoradx');
    return Unit;
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('alterando o look do seu perfil');
    return Unit;
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_4(closure$payload) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Agora voc\xEA possui ' + closure$payload.currentBalance + ' sonhos, que tal gastar os seus sonhos ');
      var random = Random_0(numberToInt((new Date()).getTime())).nextInt_vux9f0$(0, 4);
      switch (random) {
        case 0:
          $receiver.unaryPlus_pdl1vz$('na rifa (+rifa)');
          break;
        case 1:
          a($receiver, get_loriUrl() + 'user/@me/dashboard/ship-effects', void 0, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda$lambda);
          break;
        case 2:
          a($receiver, get_loriUrl() + 'user/@me/dashboard/profiles', void 0, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda$lambda_0);
          break;
        case 3:
          $receiver.unaryPlus_pdl1vz$('doando eles para a sua pessoa favorita (+pagar)');
          break;
      }
      $receiver.unaryPlus_pdl1vz$('?');
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_5(closure$failedGuild) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Voc\xEA poderia ganhar x' + closure$failedGuild.multiplier + ' sonhos ');
      switch (closure$failedGuild.type.name) {
        case 'REQUIRES_MORE_TIME':
          $receiver.unaryPlus_pdl1vz$('ap\xF3s ficar por mais de 15 dias em');
          break;
        case 'REQUIRES_MORE_XP':
          $receiver.unaryPlus_pdl1vz$('sendo mais ativo em');
          break;
      }
      $receiver.unaryPlus_pdl1vz$(closure$failedGuild.guild.name);
      $receiver.unaryPlus_pdl1vz$('!');
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda_0(closure$payload) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      p_0($receiver, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_4(closure$payload));
      if (!(closure$payload.failedGuilds.length === 0)) {
        tmp$ = closure$payload.failedGuilds;
        for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
          var failedGuild = tmp$[tmp$_0];
          p_0($receiver, void 0, DailyView$recaptchaCallback$lambda$lambda$lambda$lambda$lambda_5(failedGuild));
        }
      }
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda$lambda_1(closure$cash) {
    return function () {
      println('Finished!!!');
      closure$cash.play();
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda$lambda(closure$payload, closure$ts1Promotion2, closure$cash) {
    return function () {
      jq('#daily-wrapper').css('position', 'absolute');
      var prepended = jq('#daily-prewrapper').prepend(jq('<div>'));
      prepended.css('opacity', 0);
      prepended.append(jq('<h2>').text('Parab\xE9ns! Hoje voc\xEA ganhou...'));
      prepended.append(jq('<h1>').text('0').attr('id', 'dailyPayout'));
      prepended.append(jq('<h2>').text('Sonhos!'));
      if (closure$payload.sponsoredBy != null) {
        append(prepended.get()[0], DailyView$recaptchaCallback$lambda$lambda$lambda$lambda(closure$payload));
      }
      append(prepended.get()[0], DailyView$recaptchaCallback$lambda$lambda$lambda$lambda_0(closure$payload));
      prepended.append(jq('<img>').attr('width', 64).attr('height', 64).attr('src', 'https://cdn.discordapp.com/emojis/399743288673959947.gif?v=1'));
      prepended.append(jq('<p>').text('Volte sempre!'));
      prepended.fadeTo(500, 1);
      var countUp = new CountUp('dailyPayout', 0.0, closure$payload.dailyPayout, 0, 7.5, new CountUpOptions(true, true, '', ''));
      closure$ts1Promotion2.play();
      countUp.start(DailyView$recaptchaCallback$lambda$lambda$lambda$lambda_1(closure$cash));
      return Unit;
    };
  }
  function DailyView$recaptchaCallback$lambda$lambda(closure$ts1Promotion2, closure$cash) {
    return function (data, b, c) {
      var tmp$;
      println('Daily Reward: ' + JSON.stringify(data));
      var json = data;
      var apiCode = json['api:code'];
      if (apiCode === 0) {
        var $receiver = JSON_0.Companion.nonstrict;
        var str = JSON.stringify(data);
        var payload = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(DailyView$DailyResponse)), str);
        return jq('#daily-wrapper').fadeTo(500, 0, DailyView$recaptchaCallback$lambda$lambda$lambda(payload, closure$ts1Promotion2, closure$cash));
      }
       else {
        switch (apiCode) {
          case 4:
            tmp$ = 'Voc\xEA precisa entrar na sua conta do Discord antes de ganhar seu pr\xEAmio!';
            break;
          case 5:
            tmp$ = 'Voc\xEA j\xE1 recebeu seu pr\xEAmio hoje!';
            break;
          case 7:
            tmp$ = 'reCAPTCHA inv\xE1lido!';
            break;
          case 9:
            tmp$ = 'IP bloqueado!';
            break;
          default:tmp$ = 'Error: ' + apiCode;
            break;
        }
        var error = tmp$;
        return jq('.daily-notification').text(error);
      }
    };
  }
  function DailyView$recaptchaCallback$lambda(closure$response, closure$ts1Promotion2, closure$cash) {
    return function (it) {
      if (jq('.daily-reward-button').hasClass('button-discord-disabled')) {
        return;
      }
      jq('.daily-reward-button').addClass('button-discord-disabled');
      jQuery.post(get_loriUrl() + 'api/v1/economy/daily-reward?recaptcha=' + closure$response, DailyView$recaptchaCallback$lambda$lambda(closure$ts1Promotion2, closure$cash));
      return Unit;
    };
  }
  DailyView.prototype.recaptchaCallback = function (response) {
    var ts1Promotion2 = new Audio(get_loriUrl() + 'assets/snd/ts1_promotion2.mp3');
    var cash = new Audio(get_loriUrl() + 'assets/snd/css1_cash.wav');
    jq('.daily-notification').text('');
    println('owo recaptcha');
    jq('.daily-reward-button').addClass('button-discord-success').removeClass('button-discord-disabled').click(DailyView$recaptchaCallback$lambda(response, ts1Promotion2, cash));
  };
  function DailyView$DailyResponse(receivedDailyAt, dailyPayout, sponsoredBy, currentBalance, failedGuilds) {
    DailyView$DailyResponse$Companion_getInstance();
    if (sponsoredBy === void 0)
      sponsoredBy = null;
    this.receivedDailyAt = receivedDailyAt;
    this.dailyPayout = dailyPayout;
    this.sponsoredBy = sponsoredBy;
    this.currentBalance = currentBalance;
    this.failedGuilds = failedGuilds;
  }
  function DailyView$DailyResponse$Companion() {
    DailyView$DailyResponse$Companion_instance = this;
  }
  DailyView$DailyResponse$Companion.prototype.serializer = function () {
    return DailyView$DailyResponse$$serializer_getInstance();
  };
  DailyView$DailyResponse$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DailyView$DailyResponse$Companion_instance = null;
  function DailyView$DailyResponse$Companion_getInstance() {
    if (DailyView$DailyResponse$Companion_instance === null) {
      new DailyView$DailyResponse$Companion();
    }
    return DailyView$DailyResponse$Companion_instance;
  }
  function DailyView$DailyResponse$$serializer() {
    this.descriptor_p0jzgy$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.DailyView.DailyResponse', this);
    this.descriptor.addElement_ivxn3r$('receivedDailyAt', false);
    this.descriptor.addElement_ivxn3r$('dailyPayout', false);
    this.descriptor.addElement_ivxn3r$('sponsoredBy', true);
    this.descriptor.addElement_ivxn3r$('currentBalance', false);
    this.descriptor.addElement_ivxn3r$('failedGuilds', false);
    DailyView$DailyResponse$$serializer_instance = this;
  }
  Object.defineProperty(DailyView$DailyResponse$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_p0jzgy$_0;
    }
  });
  DailyView$DailyResponse$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.receivedDailyAt);
    output.encodeIntElement_4wpqag$(this.descriptor, 1, obj.dailyPayout);
    if (!equals(obj.sponsoredBy, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 2))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 2, DailyView$Sponsored$$serializer_getInstance(), obj.sponsoredBy);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 3, obj.currentBalance);
    output.encodeSerializableElement_blecud$(this.descriptor, 4, new ReferenceArraySerializer(getKClass(DailyView$FailedGuildDailyStats), DailyView$FailedGuildDailyStats$$serializer_getInstance()), obj.failedGuilds);
    output.endStructure_qatsm0$(this.descriptor);
  };
  DailyView$DailyResponse$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeIntElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 2, DailyView$Sponsored$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 2, DailyView$Sponsored$$serializer_getInstance(), local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = (bitMask0 & 16) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 4, new ReferenceArraySerializer(getKClass(DailyView$FailedGuildDailyStats), DailyView$FailedGuildDailyStats$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 4, new ReferenceArraySerializer(getKClass(DailyView$FailedGuildDailyStats), DailyView$FailedGuildDailyStats$$serializer_getInstance()), local4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return DailyView$DailyView$DailyResponse_init(bitMask0, local0, local1, local2, local3, local4, null);
  };
  DailyView$DailyResponse$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.IntSerializer, new NullableSerializer(DailyView$Sponsored$$serializer_getInstance()), internal.DoubleSerializer, new ReferenceArraySerializer(getKClass(DailyView$FailedGuildDailyStats), DailyView$FailedGuildDailyStats$$serializer_getInstance())];
  };
  DailyView$DailyResponse$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var DailyView$DailyResponse$$serializer_instance = null;
  function DailyView$DailyResponse$$serializer_getInstance() {
    if (DailyView$DailyResponse$$serializer_instance === null) {
      new DailyView$DailyResponse$$serializer();
    }
    return DailyView$DailyResponse$$serializer_instance;
  }
  function DailyView$DailyView$DailyResponse_init(seen1, receivedDailyAt, dailyPayout, sponsoredBy, currentBalance, failedGuilds, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(DailyView$DailyResponse.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('receivedDailyAt');
    else
      $this.receivedDailyAt = receivedDailyAt;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('dailyPayout');
    else
      $this.dailyPayout = dailyPayout;
    if ((seen1 & 4) === 0)
      $this.sponsoredBy = null;
    else
      $this.sponsoredBy = sponsoredBy;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('currentBalance');
    else
      $this.currentBalance = currentBalance;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('failedGuilds');
    else
      $this.failedGuilds = failedGuilds;
    return $this;
  }
  DailyView$DailyResponse.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DailyResponse',
    interfaces: []
  };
  function DailyView$Guild(name, iconUrl, id) {
    DailyView$Guild$Companion_getInstance();
    this.name = name;
    this.iconUrl = iconUrl;
    this.id = id;
  }
  function DailyView$Guild$Companion() {
    DailyView$Guild$Companion_instance = this;
  }
  DailyView$Guild$Companion.prototype.serializer = function () {
    return DailyView$Guild$$serializer_getInstance();
  };
  DailyView$Guild$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DailyView$Guild$Companion_instance = null;
  function DailyView$Guild$Companion_getInstance() {
    if (DailyView$Guild$Companion_instance === null) {
      new DailyView$Guild$Companion();
    }
    return DailyView$Guild$Companion_instance;
  }
  function DailyView$Guild$$serializer() {
    this.descriptor_lqvl85$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.DailyView.Guild', this);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('iconUrl', false);
    this.descriptor.addElement_ivxn3r$('id', false);
    DailyView$Guild$$serializer_instance = this;
  }
  Object.defineProperty(DailyView$Guild$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_lqvl85$_0;
    }
  });
  DailyView$Guild$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.name);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.iconUrl);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.id);
    output.endStructure_qatsm0$(this.descriptor);
  };
  DailyView$Guild$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return DailyView$DailyView$Guild_init(bitMask0, local0, local1, local2, null);
  };
  DailyView$Guild$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.StringSerializer];
  };
  DailyView$Guild$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var DailyView$Guild$$serializer_instance = null;
  function DailyView$Guild$$serializer_getInstance() {
    if (DailyView$Guild$$serializer_instance === null) {
      new DailyView$Guild$$serializer();
    }
    return DailyView$Guild$$serializer_instance;
  }
  function DailyView$DailyView$Guild_init(seen1, name, iconUrl, id, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(DailyView$Guild.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('iconUrl');
    else
      $this.iconUrl = iconUrl;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    return $this;
  }
  DailyView$Guild.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Guild',
    interfaces: []
  };
  function DailyView$Sponsored(guild, user, multipliedBy, originalPayout) {
    DailyView$Sponsored$Companion_getInstance();
    if (user === void 0)
      user = null;
    this.guild = guild;
    this.user = user;
    this.multipliedBy = multipliedBy;
    this.originalPayout = originalPayout;
  }
  function DailyView$Sponsored$Companion() {
    DailyView$Sponsored$Companion_instance = this;
  }
  DailyView$Sponsored$Companion.prototype.serializer = function () {
    return DailyView$Sponsored$$serializer_getInstance();
  };
  DailyView$Sponsored$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DailyView$Sponsored$Companion_instance = null;
  function DailyView$Sponsored$Companion_getInstance() {
    if (DailyView$Sponsored$Companion_instance === null) {
      new DailyView$Sponsored$Companion();
    }
    return DailyView$Sponsored$Companion_instance;
  }
  function DailyView$Sponsored$$serializer() {
    this.descriptor_fzomfl$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.DailyView.Sponsored', this);
    this.descriptor.addElement_ivxn3r$('guild', false);
    this.descriptor.addElement_ivxn3r$('user', true);
    this.descriptor.addElement_ivxn3r$('multipliedBy', false);
    this.descriptor.addElement_ivxn3r$('originalPayout', false);
    DailyView$Sponsored$$serializer_instance = this;
  }
  Object.defineProperty(DailyView$Sponsored$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_fzomfl$_0;
    }
  });
  DailyView$Sponsored$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeSerializableElement_blecud$(this.descriptor, 0, DailyView$Guild$$serializer_getInstance(), obj.guild);
    if (!equals(obj.user, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 1))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 1, ServerConfig$SelfMember$$serializer_getInstance(), obj.user);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 2, obj.multipliedBy);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 3, obj.originalPayout);
    output.endStructure_qatsm0$(this.descriptor);
  };
  DailyView$Sponsored$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = (bitMask0 & 1) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 0, DailyView$Guild$$serializer_getInstance()) : input.updateSerializableElement_ehubvl$(this.descriptor, 0, DailyView$Guild$$serializer_getInstance(), local0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 1, ServerConfig$SelfMember$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 1, ServerConfig$SelfMember$$serializer_getInstance(), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return DailyView$DailyView$Sponsored_init(bitMask0, local0, local1, local2, local3, null);
  };
  DailyView$Sponsored$$serializer.prototype.childSerializers = function () {
    return [DailyView$Guild$$serializer_getInstance(), new NullableSerializer(ServerConfig$SelfMember$$serializer_getInstance()), internal.DoubleSerializer, internal.DoubleSerializer];
  };
  DailyView$Sponsored$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var DailyView$Sponsored$$serializer_instance = null;
  function DailyView$Sponsored$$serializer_getInstance() {
    if (DailyView$Sponsored$$serializer_instance === null) {
      new DailyView$Sponsored$$serializer();
    }
    return DailyView$Sponsored$$serializer_instance;
  }
  function DailyView$DailyView$Sponsored_init(seen1, guild, user, multipliedBy, originalPayout, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(DailyView$Sponsored.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('guild');
    else
      $this.guild = guild;
    if ((seen1 & 2) === 0)
      $this.user = null;
    else
      $this.user = user;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('multipliedBy');
    else
      $this.multipliedBy = multipliedBy;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('originalPayout');
    else
      $this.originalPayout = originalPayout;
    return $this;
  }
  DailyView$Sponsored.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Sponsored',
    interfaces: []
  };
  function DailyView$FailedGuildDailyStats(guild, type, data, multiplier) {
    DailyView$FailedGuildDailyStats$Companion_getInstance();
    this.guild = guild;
    this.type = type;
    this.data = data;
    this.multiplier = multiplier;
  }
  function DailyView$FailedGuildDailyStats$Companion() {
    DailyView$FailedGuildDailyStats$Companion_instance = this;
  }
  DailyView$FailedGuildDailyStats$Companion.prototype.serializer = function () {
    return DailyView$FailedGuildDailyStats$$serializer_getInstance();
  };
  DailyView$FailedGuildDailyStats$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var DailyView$FailedGuildDailyStats$Companion_instance = null;
  function DailyView$FailedGuildDailyStats$Companion_getInstance() {
    if (DailyView$FailedGuildDailyStats$Companion_instance === null) {
      new DailyView$FailedGuildDailyStats$Companion();
    }
    return DailyView$FailedGuildDailyStats$Companion_instance;
  }
  function DailyView$FailedGuildDailyStats$$serializer() {
    this.descriptor_sa331w$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.DailyView.FailedGuildDailyStats', this);
    this.descriptor.addElement_ivxn3r$('guild', false);
    this.descriptor.addElement_ivxn3r$('type', false);
    this.descriptor.addElement_ivxn3r$('data', false);
    this.descriptor.addElement_ivxn3r$('multiplier', false);
    DailyView$FailedGuildDailyStats$$serializer_instance = this;
  }
  Object.defineProperty(DailyView$FailedGuildDailyStats$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_sa331w$_0;
    }
  });
  DailyView$FailedGuildDailyStats$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeSerializableElement_blecud$(this.descriptor, 0, DailyView$Guild$$serializer_getInstance(), obj.guild);
    output.encodeSerializableElement_blecud$(this.descriptor, 1, new EnumSerializer(getKClass(DailyGuildMissingRequirement), 'net.perfectdreams.loritta.utils.daily.DailyGuildMissingRequirement'), obj.type);
    output.encodeLongElement_a3zgoj$(this.descriptor, 2, obj.data);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 3, obj.multiplier);
    output.endStructure_qatsm0$(this.descriptor);
  };
  DailyView$FailedGuildDailyStats$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = (bitMask0 & 1) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 0, DailyView$Guild$$serializer_getInstance()) : input.updateSerializableElement_ehubvl$(this.descriptor, 0, DailyView$Guild$$serializer_getInstance(), local0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 1, new EnumSerializer(getKClass(DailyGuildMissingRequirement), 'net.perfectdreams.loritta.utils.daily.DailyGuildMissingRequirement')) : input.updateSerializableElement_ehubvl$(this.descriptor, 1, new EnumSerializer(getKClass(DailyGuildMissingRequirement), 'net.perfectdreams.loritta.utils.daily.DailyGuildMissingRequirement'), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeLongElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return DailyView$DailyView$FailedGuildDailyStats_init(bitMask0, local0, local1, local2, local3, null);
  };
  DailyView$FailedGuildDailyStats$$serializer.prototype.childSerializers = function () {
    return [DailyView$Guild$$serializer_getInstance(), new EnumSerializer(getKClass(DailyGuildMissingRequirement), 'net.perfectdreams.loritta.utils.daily.DailyGuildMissingRequirement'), internal.LongSerializer, internal.DoubleSerializer];
  };
  DailyView$FailedGuildDailyStats$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var DailyView$FailedGuildDailyStats$$serializer_instance = null;
  function DailyView$FailedGuildDailyStats$$serializer_getInstance() {
    if (DailyView$FailedGuildDailyStats$$serializer_instance === null) {
      new DailyView$FailedGuildDailyStats$$serializer();
    }
    return DailyView$FailedGuildDailyStats$$serializer_instance;
  }
  function DailyView$DailyView$FailedGuildDailyStats_init(seen1, guild, type, data, multiplier, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(DailyView$FailedGuildDailyStats.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('guild');
    else
      $this.guild = guild;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('type');
    else
      $this.type = type;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('data');
    else
      $this.data = data;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('multiplier');
    else
      $this.multiplier = multiplier;
    return $this;
  }
  DailyView$FailedGuildDailyStats.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'FailedGuildDailyStats',
    interfaces: []
  };
  DailyView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DailyView',
    interfaces: []
  };
  var DailyView_instance = null;
  function DailyView_getInstance() {
    if (DailyView_instance === null) {
      new DailyView();
    }
    return DailyView_instance;
  }
  function ReactionRoleView() {
    ReactionRoleView_instance = this;
    this.reactionEntries_h0rtiy$_0 = lazy(ReactionRoleView$reactionEntries$lambda);
  }
  Object.defineProperty(ReactionRoleView.prototype, 'reactionEntries', {
    get: function () {
      return this.reactionEntries_h0rtiy$_0.value;
    }
  });
  function Coroutine$ReactionRoleView$start$lambda$lambda$lambda(closure$channelId_0, closure$messageId_0, closure$guild_0, this$ReactionRoleView_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$channelId = closure$channelId_0;
    this.local$closure$messageId = closure$messageId_0;
    this.local$closure$guild = closure$guild_0;
    this.local$this$ReactionRoleView = this$ReactionRoleView_0;
    this.local$response = void 0;
  }
  Coroutine$ReactionRoleView$start$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ReactionRoleView$start$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ReactionRoleView$start$lambda$lambda$lambda.prototype.constructor = Coroutine$ReactionRoleView$start$lambda$lambda$lambda;
  Coroutine$ReactionRoleView$start$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            this.state_0 = 2;
            this.result_0 = HttpRequest$Companion_getInstance().get_61zpoe$(get_loriUrl_0() + 'api/v1/channels/' + this.local$closure$channelId + '/messages/' + this.local$closure$messageId, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            this.local$response = this.result_0;
            if (this.local$response.statusCode !== 200) {
              return;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            var $receiver = JSON_0.Companion.nonstrict;
            var str = this.local$response.body;
            var discordMessage = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(ServerConfig$DiscordMessage)), str);
            return this.local$this$ReactionRoleView.addReactionRoleEntry_2t952d$(discordMessage, this.local$closure$guild, this.local$closure$guild.reactionRoleConfigs), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ReactionRoleView$start$lambda$lambda$lambda(closure$channelId_0, closure$messageId_0, closure$guild_0, this$ReactionRoleView_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ReactionRoleView$start$lambda$lambda$lambda(closure$channelId_0, closure$messageId_0, closure$guild_0, this$ReactionRoleView_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function ReactionRoleView$start$lambda$lambda(closure$guild, this$ReactionRoleView) {
    return function (it) {
      var tmp$;
      var reactionLink = Kotlin.isType(tmp$ = page.getElementById_61zpoe$('reaction-link'), HTMLInputElement) ? tmp$ : throwCCE();
      var link = reactionLink.value;
      var split_0 = split(link, ['/']);
      var channelId = split_0.get_za3lpa$(5);
      var messageId = split_0.get_za3lpa$(6);
      return launch(coroutines.GlobalScope, void 0, void 0, ReactionRoleView$start$lambda$lambda$lambda(channelId, messageId, closure$guild, this$ReactionRoleView));
    };
  }
  function Coroutine$ReactionRoleView$start$lambda$lambda(closure$guild_0, closure$discordMessages_0, this$ReactionRoleView_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$guild = closure$guild_0;
    this.local$closure$discordMessages = closure$discordMessages_0;
    this.local$this$ReactionRoleView = this$ReactionRoleView_0;
    this.local$tmp$ = void 0;
    this.local$reactionRoleConfig = void 0;
    this.local$response = void 0;
  }
  Coroutine$ReactionRoleView$start$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ReactionRoleView$start$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ReactionRoleView$start$lambda$lambda.prototype.constructor = Coroutine$ReactionRoleView$start$lambda$lambda;
  Coroutine$ReactionRoleView$start$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.local$tmp$ = this.local$closure$guild.reactionRoleConfigs.iterator();
            this.state_0 = 2;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            if (!this.local$tmp$.hasNext()) {
              this.state_0 = 6;
              continue;
            }

            this.local$reactionRoleConfig = this.local$tmp$.next();
            var $receiver = this.local$closure$discordMessages;
            var any$result;
            any$break: do {
              var tmp$_1;
              if (Kotlin.isType($receiver, Collection) && $receiver.isEmpty()) {
                any$result = false;
                break any$break;
              }
              tmp$_1 = $receiver.iterator();
              while (tmp$_1.hasNext()) {
                var element = tmp$_1.next();
                if (equals(element.id, this.local$reactionRoleConfig.messageId)) {
                  any$result = true;
                  break any$break;
                }
              }
              any$result = false;
            }
             while (false);
            if (any$result) {
              this.state_0 = 2;
              continue;
            }
             else {
              this.state_0 = 3;
              continue;
            }

          case 3:
            this.state_0 = 4;
            this.result_0 = HttpRequest$Companion_getInstance().get_61zpoe$(get_loriUrl_0() + 'api/v1/channels/' + this.local$reactionRoleConfig.textChannelId + '/messages/' + this.local$reactionRoleConfig.messageId, this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 4:
            this.local$response = this.result_0;
            if (this.local$response.statusCode !== 200) {
              this.state_0 = 2;
              continue;
            }
             else {
              this.state_0 = 5;
              continue;
            }

          case 5:
            var $receiver_0 = JSON_0.Companion.nonstrict;
            var str = this.local$response.body;
            var discordMessage = $receiver_0.parse_awif5v$(getOrDefault($receiver_0.context, getKClass(ServerConfig$DiscordMessage)), str);
            this.local$closure$discordMessages.add_11rb$(discordMessage);
            this.state_0 = 2;
            continue;
          case 6:
            tmp$ = this.local$closure$guild.reactionRoleConfigs.iterator();
            loop_label: while (tmp$.hasNext()) {
              var reactionRoleConfig = tmp$.next();
              println('REACTION ROLE');
              println('Message ID: ' + reactionRoleConfig.messageId);
              println('Text Channel ID: ' + reactionRoleConfig.textChannelId);
              println('Reaction: ' + reactionRoleConfig.reaction);
              println('Role IDs: ' + toString(reactionRoleConfig.roleIds));
              println('Locks: ' + toString(reactionRoleConfig.locks));
              var $receiver_1 = this.local$closure$discordMessages;
              var firstOrNull$result;
              firstOrNull$break: do {
                var tmp$_2;
                tmp$_2 = $receiver_1.iterator();
                while (tmp$_2.hasNext()) {
                  var element_0 = tmp$_2.next();
                  if (equals(element_0.id, reactionRoleConfig.messageId)) {
                    firstOrNull$result = element_0;
                    break firstOrNull$break;
                  }
                }
                firstOrNull$result = null;
              }
               while (false);
              var discordMessage_0 = firstOrNull$result;
              println('Message: ' + toString(discordMessage_0));
              if (discordMessage_0 != null) {
                println('Content: ' + discordMessage_0.content);
                println('Reactions...');
                var $receiver_2 = discordMessage_0.reactions;
                var tmp$_3;
                for (tmp$_3 = 0; tmp$_3 !== $receiver_2.length; ++tmp$_3) {
                  var element_1 = $receiver_2[tmp$_3];
                  println('Is Discord Emote? ' + toString(element_1.isDiscordEmote));
                  println('Name: ' + element_1.name);
                  println('ID: ' + element_1.id);
                }
              }
            }

            tmp$_0 = this.local$closure$discordMessages.iterator();
            while (tmp$_0.hasNext()) {
              var discordMessage_1 = tmp$_0.next();
              this.local$this$ReactionRoleView.addReactionRoleEntry_2t952d$(discordMessage_1, this.local$closure$guild, this.local$closure$guild.reactionRoleConfigs);
            }

            return Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ReactionRoleView$start$lambda$lambda_0(closure$guild_0, closure$discordMessages_0, this$ReactionRoleView_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ReactionRoleView$start$lambda$lambda(closure$guild_0, closure$discordMessages_0, this$ReactionRoleView_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function ReactionRoleView$start$lambda(this$ReactionRoleView) {
    return function (it) {
      var tmp$, tmp$_0;
      var premiumAsJson = ensureNotNull((tmp$ = document.getElementById('reaction-role-json')) != null ? tmp$.innerHTML : null);
      println('premiumAsJson: ' + premiumAsJson);
      var $receiver = JSON_0.Companion.nonstrict;
      var guild = $receiver.parse_awif5v$(getOrDefault($receiver.context, getKClass(ServerConfig$Guild)), premiumAsJson);
      (Kotlin.isType(tmp$_0 = page.getElementById_61zpoe$('add-reaction-message'), HTMLButtonElement) ? tmp$_0 : throwCCE()).onclick = ReactionRoleView$start$lambda$lambda(guild, this$ReactionRoleView);
      if (!guild.reactionRoleConfigs.isEmpty()) {
        var discordMessages = ArrayList_init();
        launch(coroutines.GlobalScope, void 0, void 0, ReactionRoleView$start$lambda$lambda_0(guild, discordMessages, this$ReactionRoleView));
      }
      return Unit;
    };
  }
  ReactionRoleView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ReactionRoleView$start$lambda(this));
  };
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda(closure$discordMessage) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Mensagem ' + closure$discordMessage.id);
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Permitir escolher apenas uma das rea\xE7\xF5es');
    return Unit;
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda($receiver) {
    p($receiver, 'toggleMainText', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda(closure$discordMessage, closure$reactionOptions) {
    return function ($receiver) {
      var tmp$;
      $receiver.value = 'true';
      set_id($receiver, 'rr-toggle-' + closure$discordMessage.id);
      var $receiver_0 = closure$reactionOptions;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$_0;
        tmp$_0 = $receiver_0.iterator();
        while (tmp$_0.hasNext()) {
          var element = tmp$_0.next();
          if (equals(element.messageId, closure$discordMessage.id)) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      var reactionOption = firstOrNull$result;
      if (((tmp$ = reactionOption != null ? reactionOption.locks : null) != null ? !(tmp$.length === 0) : null) === true)
        $receiver.checked = true;
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$discordMessage) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var value = 'rr-toggle-' + closure$discordMessage.id;
      $receiver_0.put_xwzc9p$('for', value);
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda_0(closure$discordMessage, closure$reactionOptions) {
    return function ($receiver) {
      input_0($receiver, InputType.checkBox, void 0, void 0, void 0, 'cmn-toggle cmn-toggle-round', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda(closure$discordMessage, closure$reactionOptions));
      label($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$discordMessage));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda_0(closure$discordMessage, closure$reactionOptions) {
    return function ($receiver) {
      div($receiver, 'switch', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda_0(closure$discordMessage, closure$reactionOptions));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda_0(closure$discordMessage, closure$reactionOptions) {
    return function ($receiver) {
      set_style($receiver, 'text-align: center;');
      div($receiver, 'pure-u-1 pure-u-md-7-8', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda);
      div($receiver, 'pure-u-1 pure-u-md-1-8', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda_0(closure$discordMessage, closure$reactionOptions));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    $receiver.width = '64';
    return Unit;
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$reaction) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$reaction.name);
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda_1(closure$reaction) {
    return function ($receiver) {
      if (closure$reaction.isDiscordEmote) {
        img($receiver, void 0, 'https://cdn.discordapp.com/emojis/' + toString(closure$reaction.id) + '.png?v=1', void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_1);
      }
       else {
        p($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$reaction));
      }
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Ativar Reaction Role');
    return Unit;
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    p($receiver, 'toggleMainText', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$reactionOption, closure$discordMessage, closure$reaction) {
    return function ($receiver) {
      $receiver.value = 'true';
      $receiver.checked = closure$reactionOption != null;
      set_id($receiver, 'rr-toggle-' + closure$discordMessage.id + '-' + closure$reaction.name);
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$discordMessage, closure$reaction) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var value = 'rr-toggle-' + closure$discordMessage.id + '-' + closure$reaction.name;
      $receiver_0.put_xwzc9p$('for', value);
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$reactionOption, closure$discordMessage, closure$reaction) {
    return function ($receiver) {
      input_0($receiver, InputType.checkBox, void 0, void 0, void 0, 'cmn-toggle cmn-toggle-round reaction-role-enabled-toggle', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$reactionOption, closure$discordMessage, closure$reaction));
      label($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$discordMessage, closure$reaction));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$reactionOption, closure$discordMessage, closure$reaction) {
    return function ($receiver) {
      div($receiver, 'switch', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$reactionOption, closure$discordMessage, closure$reaction));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$reactionOption, closure$discordMessage, closure$reaction) {
    return function ($receiver) {
      set_style($receiver, 'text-align: center;');
      div($receiver, 'pure-u-1 pure-u-md-7-8', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
      div($receiver, 'pure-u-1 pure-u-md-1-8', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$reactionOption, closure$discordMessage, closure$reaction));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$role, closure$currentRoleId) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$role.name);
      if (equals(closure$role.id, closure$currentRoleId))
        $receiver.selected = true;
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$serverConfig, closure$currentRoleId) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      tmp$ = closure$serverConfig.roles;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var role = tmp$[tmp$_0];
        option($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(role, closure$currentRoleId));
      }
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$discordMessage, closure$reaction, closure$reactionOption, closure$serverConfig) {
    return function ($receiver) {
      var tmp$;
      set_id($receiver, 'rr-hidden-' + closure$discordMessage.id + '-' + closure$reaction.name);
      var currentRoleId = (tmp$ = closure$reactionOption != null ? closure$reactionOption.roleIds : null) != null ? firstOrNull_0(tmp$) : null;
      select($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$serverConfig, currentRoleId));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_5($receiver) {
    $receiver.unaryPlus_pdl1vz$('Existe um reaction role associado!');
    return Unit;
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_6($receiver) {
    $receiver.unaryPlus_pdl1vz$('Nenhum reaction role associado!');
    return Unit;
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda_2(closure$reactionOptions, closure$discordMessage, closure$reaction, closure$serverConfig) {
    return function ($receiver) {
      var $receiver_0 = closure$reactionOptions;
      var firstOrNull$result;
      firstOrNull$break: do {
        var tmp$;
        tmp$ = $receiver_0.iterator();
        while (tmp$.hasNext()) {
          var element = tmp$.next();
          var closure$discordMessage_0 = closure$discordMessage;
          var closure$reaction_0 = closure$reaction;
          if (equals(element.messageId, closure$discordMessage_0.id) && (equals(element.reaction, closure$reaction_0.name) || equals(element.reaction, closure$reaction_0.id))) {
            firstOrNull$result = element;
            break firstOrNull$break;
          }
        }
        firstOrNull$result = null;
      }
       while (false);
      var reactionOption = firstOrNull$result;
      div($receiver, 'pure-g', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_3(reactionOption, closure$discordMessage, closure$reaction));
      div($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_4(closure$discordMessage, closure$reaction, reactionOption, closure$serverConfig));
      if (reactionOption != null) {
        p($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_5);
      }
       else {
        p($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda$lambda_6);
      }
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda_1(closure$reaction, closure$reactionOptions, closure$discordMessage, closure$serverConfig) {
    return function ($receiver) {
      div($receiver, 'pure-u-1 pure-u-md-1-6', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda_1(closure$reaction));
      div($receiver, 'pure-u-1 pure-u-md-2-3', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda$lambda_2(closure$reactionOptions, closure$discordMessage, closure$reaction, closure$serverConfig));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda_1(closure$reaction, closure$reactionOptions, closure$discordMessage, closure$serverConfig) {
    return function ($receiver) {
      div($receiver, 'pure-g', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda$lambda_1(closure$reaction, closure$reactionOptions, closure$discordMessage, closure$serverConfig));
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda$lambda(closure$discordMessage, closure$reactionOptions, closure$serverConfig) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      var $receiver_0 = $receiver.attributes;
      var key = 'data-messageId';
      var value = closure$discordMessage.id;
      $receiver_0.put_xwzc9p$(key, value);
      var $receiver_1 = $receiver.attributes;
      var key_0 = 'data-channelId';
      var value_0 = closure$discordMessage.channelId;
      $receiver_1.put_xwzc9p$(key_0, value_0);
      h1($receiver, void 0, ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda(closure$discordMessage));
      div($receiver, 'pure-g', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda_0(closure$discordMessage, closure$reactionOptions));
      tmp$ = closure$discordMessage.reactions;
      for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
        var reaction = tmp$[tmp$_0];
        div($receiver, 'userOptionsWrapper reaction-role-option', ReactionRoleView$addReactionRoleEntry$lambda$lambda$lambda_1(reaction, closure$reactionOptions, closure$discordMessage, closure$serverConfig));
      }
      return Unit;
    };
  }
  function ReactionRoleView$addReactionRoleEntry$lambda(closure$discordMessage, closure$reactionOptions, closure$serverConfig) {
    return function ($receiver) {
      div_0($receiver, 'message-stuff', ReactionRoleView$addReactionRoleEntry$lambda$lambda(closure$discordMessage, closure$reactionOptions, closure$serverConfig));
      return Unit;
    };
  }
  ReactionRoleView.prototype.addReactionRoleEntry_2t952d$ = function (discordMessage, serverConfig, reactionOptions) {
    var tmp$, tmp$_0;
    println('Adicionando...');
    append(this.reactionEntries, ReactionRoleView$addReactionRoleEntry$lambda(discordMessage, reactionOptions, serverConfig));
    tmp$ = discordMessage.reactions;
    for (tmp$_0 = 0; tmp$_0 !== tmp$.length; ++tmp$_0) {
      var reaction = tmp$[tmp$_0];
      LoriDashboard_getInstance().applyBlur_iiwsaa$('#rr-hidden-' + discordMessage.id + '-' + reaction.name, '#rr-toggle-' + discordMessage.id + '-' + reaction.name);
    }
  };
  function ReactionRoleView$prepareSave$lambda(it) {
    var messageStuffs = document.getElementsByClassName('message-stuff');
    var i = 0;
    while (messageStuffs.length > i) {
      var j = 0;
      var entry = ensureNotNull(messageStuffs[i]);
      println(i.toString() + '. ' + entry);
      var messageId = ensureNotNull(entry.getAttribute('data-messageId'));
      var channelId = ensureNotNull(entry.getAttribute('data-channelId'));
      var reactionOptionsDiv = entry.getElementsByClassName('reaction-role-option');
      while (reactionOptionsDiv.length > j) {
        var entry_0 = ensureNotNull(reactionOptionsDiv[j]);
        println('Option: ' + entry_0);
        j = j + 1 | 0;
      }
      i = i + 1 | 0;
    }
    return Unit;
  }
  ReactionRoleView.prototype.prepareSave = function () {
    SaveUtils_getInstance().prepareSave_feck85$('reaction_role', ReactionRoleView$prepareSave$lambda);
  };
  function ReactionRoleView$reactionEntries$lambda() {
    return page.getElementById_61zpoe$('reaction-entries');
  }
  ReactionRoleView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ReactionRoleView',
    interfaces: []
  };
  var ReactionRoleView_instance = null;
  function ReactionRoleView_getInstance() {
    if (ReactionRoleView_instance === null) {
      new ReactionRoleView();
    }
    return ReactionRoleView_instance;
  }
  function ServerConfig() {
    ServerConfig_instance = this;
  }
  function ServerConfig$MiniGuild(name, iconUrl) {
    ServerConfig$MiniGuild$Companion_getInstance();
    if (iconUrl === void 0)
      iconUrl = null;
    this.name = name;
    this.iconUrl = iconUrl;
  }
  function ServerConfig$MiniGuild$Companion() {
    ServerConfig$MiniGuild$Companion_instance = this;
  }
  ServerConfig$MiniGuild$Companion.prototype.serializer = function () {
    return ServerConfig$MiniGuild$$serializer_getInstance();
  };
  ServerConfig$MiniGuild$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$MiniGuild$Companion_instance = null;
  function ServerConfig$MiniGuild$Companion_getInstance() {
    if (ServerConfig$MiniGuild$Companion_instance === null) {
      new ServerConfig$MiniGuild$Companion();
    }
    return ServerConfig$MiniGuild$Companion_instance;
  }
  function ServerConfig$MiniGuild$$serializer() {
    this.descriptor_4ke7f5$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.MiniGuild', this);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('iconUrl', true);
    ServerConfig$MiniGuild$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$MiniGuild$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_4ke7f5$_0;
    }
  });
  ServerConfig$MiniGuild$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.name);
    if (!equals(obj.iconUrl, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 1))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 1, internal.StringSerializer, obj.iconUrl);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$MiniGuild$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 1, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 1, internal.StringSerializer, local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$MiniGuild_init(bitMask0, local0, local1, null);
  };
  ServerConfig$MiniGuild$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, new NullableSerializer(internal.StringSerializer)];
  };
  ServerConfig$MiniGuild$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$MiniGuild$$serializer_instance = null;
  function ServerConfig$MiniGuild$$serializer_getInstance() {
    if (ServerConfig$MiniGuild$$serializer_instance === null) {
      new ServerConfig$MiniGuild$$serializer();
    }
    return ServerConfig$MiniGuild$$serializer_instance;
  }
  function ServerConfig$ServerConfig$MiniGuild_init(seen1, name, iconUrl, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$MiniGuild.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 2) === 0)
      $this.iconUrl = null;
    else
      $this.iconUrl = iconUrl;
    return $this;
  }
  ServerConfig$MiniGuild.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MiniGuild',
    interfaces: []
  };
  function ServerConfig$Guild(name, localeId, commandPrefix, deleteMessageAfterCommand, warnOnMissingPermission, warnOnUnknownCommand, blacklistedChannels, warnIfBlacklisted, blacklistedWarning, selfMember, donationKey, donationConfig, reactionRoleConfigs, levelUpConfig, trackedTwitterAccounts, trackedRssFeeds, roles, textChannels) {
    ServerConfig$Guild$Companion_getInstance();
    if (blacklistedWarning === void 0)
      blacklistedWarning = null;
    if (donationKey === void 0)
      donationKey = null;
    this.name = name;
    this.localeId = localeId;
    this.commandPrefix = commandPrefix;
    this.deleteMessageAfterCommand = deleteMessageAfterCommand;
    this.warnOnMissingPermission = warnOnMissingPermission;
    this.warnOnUnknownCommand = warnOnUnknownCommand;
    this.blacklistedChannels = blacklistedChannels;
    this.warnIfBlacklisted = warnIfBlacklisted;
    this.blacklistedWarning = blacklistedWarning;
    this.selfMember = selfMember;
    this.donationKey = donationKey;
    this.donationConfig = donationConfig;
    this.reactionRoleConfigs = reactionRoleConfigs;
    this.levelUpConfig = levelUpConfig;
    this.trackedTwitterAccounts = trackedTwitterAccounts;
    this.trackedRssFeeds = trackedRssFeeds;
    this.roles = roles;
    this.textChannels = textChannels;
  }
  function ServerConfig$Guild$Companion() {
    ServerConfig$Guild$Companion_instance = this;
  }
  ServerConfig$Guild$Companion.prototype.serializer = function () {
    return ServerConfig$Guild$$serializer_getInstance();
  };
  ServerConfig$Guild$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$Guild$Companion_instance = null;
  function ServerConfig$Guild$Companion_getInstance() {
    if (ServerConfig$Guild$Companion_instance === null) {
      new ServerConfig$Guild$Companion();
    }
    return ServerConfig$Guild$Companion_instance;
  }
  function ServerConfig$Guild$$serializer() {
    this.descriptor_polhq2$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.Guild', this);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('localeId', false);
    this.descriptor.addElement_ivxn3r$('commandPrefix', false);
    this.descriptor.addElement_ivxn3r$('deleteMessageAfterCommand', false);
    this.descriptor.addElement_ivxn3r$('warnOnMissingPermission', false);
    this.descriptor.addElement_ivxn3r$('warnOnUnknownCommand', false);
    this.descriptor.addElement_ivxn3r$('blacklistedChannels', false);
    this.descriptor.addElement_ivxn3r$('warnIfBlacklisted', false);
    this.descriptor.addElement_ivxn3r$('blacklistedWarning', true);
    this.descriptor.addElement_ivxn3r$('selfMember', false);
    this.descriptor.addElement_ivxn3r$('donationKey', true);
    this.descriptor.addElement_ivxn3r$('donationConfig', false);
    this.descriptor.addElement_ivxn3r$('reactionRoleConfigs', false);
    this.descriptor.addElement_ivxn3r$('levelUpConfig', false);
    this.descriptor.addElement_ivxn3r$('trackedTwitterAccounts', false);
    this.descriptor.addElement_ivxn3r$('trackedRssFeeds', false);
    this.descriptor.addElement_ivxn3r$('roles', false);
    this.descriptor.addElement_ivxn3r$('textChannels', false);
    ServerConfig$Guild$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$Guild$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_polhq2$_0;
    }
  });
  ServerConfig$Guild$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.name);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.localeId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.commandPrefix);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 3, obj.deleteMessageAfterCommand);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 4, obj.warnOnMissingPermission);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 5, obj.warnOnUnknownCommand);
    output.encodeSerializableElement_blecud$(this.descriptor, 6, new ReferenceArraySerializer(getKClass(Long), internal.LongSerializer), obj.blacklistedChannels);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 7, obj.warnIfBlacklisted);
    if (!equals(obj.blacklistedWarning, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 8))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 8, internal.StringSerializer, obj.blacklistedWarning);
    output.encodeSerializableElement_blecud$(this.descriptor, 9, ServerConfig$SelfMember$$serializer_getInstance(), obj.selfMember);
    if (!equals(obj.donationKey, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 10))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 10, ServerConfig$DonationKey$$serializer_getInstance(), obj.donationKey);
    output.encodeSerializableElement_blecud$(this.descriptor, 11, ServerConfig$DonationConfig$$serializer_getInstance(), obj.donationConfig);
    output.encodeSerializableElement_blecud$(this.descriptor, 12, new ArrayListSerializer(ServerConfig$ReactionOption$$serializer_getInstance()), obj.reactionRoleConfigs);
    output.encodeSerializableElement_blecud$(this.descriptor, 13, ServerConfig$LevelUpConfig$$serializer_getInstance(), obj.levelUpConfig);
    output.encodeSerializableElement_blecud$(this.descriptor, 14, new ReferenceArraySerializer(getKClass(ServerConfig$TrackedTwitterAccount), ServerConfig$TrackedTwitterAccount$$serializer_getInstance()), obj.trackedTwitterAccounts);
    output.encodeSerializableElement_blecud$(this.descriptor, 15, new ReferenceArraySerializer(getKClass(ServerConfig$TrackedRssFeed), ServerConfig$TrackedRssFeed$$serializer_getInstance()), obj.trackedRssFeeds);
    output.encodeSerializableElement_blecud$(this.descriptor, 16, new ReferenceArraySerializer(getKClass(ServerConfig$Role), ServerConfig$Role$$serializer_getInstance()), obj.roles);
    output.encodeSerializableElement_blecud$(this.descriptor, 17, new ReferenceArraySerializer(getKClass(ServerConfig$TextChannel), ServerConfig$TextChannel$$serializer_getInstance()), obj.textChannels);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$Guild$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4
    , local5
    , local6
    , local7
    , local8
    , local9
    , local10
    , local11
    , local12
    , local13
    , local14
    , local15
    , local16
    , local17;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case 5:
          local5 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 5);
          bitMask0 |= 32;
          if (!readAll)
            break;
        case 6:
          local6 = (bitMask0 & 64) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 6, new ReferenceArraySerializer(getKClass(Long), internal.LongSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 6, new ReferenceArraySerializer(getKClass(Long), internal.LongSerializer), local6);
          bitMask0 |= 64;
          if (!readAll)
            break;
        case 7:
          local7 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 7);
          bitMask0 |= 128;
          if (!readAll)
            break;
        case 8:
          local8 = (bitMask0 & 256) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 8, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 8, internal.StringSerializer, local8);
          bitMask0 |= 256;
          if (!readAll)
            break;
        case 9:
          local9 = (bitMask0 & 512) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 9, ServerConfig$SelfMember$$serializer_getInstance()) : input.updateSerializableElement_ehubvl$(this.descriptor, 9, ServerConfig$SelfMember$$serializer_getInstance(), local9);
          bitMask0 |= 512;
          if (!readAll)
            break;
        case 10:
          local10 = (bitMask0 & 1024) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 10, ServerConfig$DonationKey$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 10, ServerConfig$DonationKey$$serializer_getInstance(), local10);
          bitMask0 |= 1024;
          if (!readAll)
            break;
        case 11:
          local11 = (bitMask0 & 2048) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 11, ServerConfig$DonationConfig$$serializer_getInstance()) : input.updateSerializableElement_ehubvl$(this.descriptor, 11, ServerConfig$DonationConfig$$serializer_getInstance(), local11);
          bitMask0 |= 2048;
          if (!readAll)
            break;
        case 12:
          local12 = (bitMask0 & 4096) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 12, new ArrayListSerializer(ServerConfig$ReactionOption$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 12, new ArrayListSerializer(ServerConfig$ReactionOption$$serializer_getInstance()), local12);
          bitMask0 |= 4096;
          if (!readAll)
            break;
        case 13:
          local13 = (bitMask0 & 8192) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 13, ServerConfig$LevelUpConfig$$serializer_getInstance()) : input.updateSerializableElement_ehubvl$(this.descriptor, 13, ServerConfig$LevelUpConfig$$serializer_getInstance(), local13);
          bitMask0 |= 8192;
          if (!readAll)
            break;
        case 14:
          local14 = (bitMask0 & 16384) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 14, new ReferenceArraySerializer(getKClass(ServerConfig$TrackedTwitterAccount), ServerConfig$TrackedTwitterAccount$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 14, new ReferenceArraySerializer(getKClass(ServerConfig$TrackedTwitterAccount), ServerConfig$TrackedTwitterAccount$$serializer_getInstance()), local14);
          bitMask0 |= 16384;
          if (!readAll)
            break;
        case 15:
          local15 = (bitMask0 & 32768) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 15, new ReferenceArraySerializer(getKClass(ServerConfig$TrackedRssFeed), ServerConfig$TrackedRssFeed$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 15, new ReferenceArraySerializer(getKClass(ServerConfig$TrackedRssFeed), ServerConfig$TrackedRssFeed$$serializer_getInstance()), local15);
          bitMask0 |= 32768;
          if (!readAll)
            break;
        case 16:
          local16 = (bitMask0 & 65536) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 16, new ReferenceArraySerializer(getKClass(ServerConfig$Role), ServerConfig$Role$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 16, new ReferenceArraySerializer(getKClass(ServerConfig$Role), ServerConfig$Role$$serializer_getInstance()), local16);
          bitMask0 |= 65536;
          if (!readAll)
            break;
        case 17:
          local17 = (bitMask0 & 131072) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 17, new ReferenceArraySerializer(getKClass(ServerConfig$TextChannel), ServerConfig$TextChannel$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 17, new ReferenceArraySerializer(getKClass(ServerConfig$TextChannel), ServerConfig$TextChannel$$serializer_getInstance()), local17);
          bitMask0 |= 131072;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$Guild_init(bitMask0, local0, local1, local2, local3, local4, local5, local6, local7, local8, local9, local10, local11, local12, local13, local14, local15, local16, local17, null);
  };
  ServerConfig$Guild$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.StringSerializer, internal.BooleanSerializer, internal.BooleanSerializer, internal.BooleanSerializer, new ReferenceArraySerializer(getKClass(Long), internal.LongSerializer), internal.BooleanSerializer, new NullableSerializer(internal.StringSerializer), ServerConfig$SelfMember$$serializer_getInstance(), new NullableSerializer(ServerConfig$DonationKey$$serializer_getInstance()), ServerConfig$DonationConfig$$serializer_getInstance(), new ArrayListSerializer(ServerConfig$ReactionOption$$serializer_getInstance()), ServerConfig$LevelUpConfig$$serializer_getInstance(), new ReferenceArraySerializer(getKClass(ServerConfig$TrackedTwitterAccount), ServerConfig$TrackedTwitterAccount$$serializer_getInstance()), new ReferenceArraySerializer(getKClass(ServerConfig$TrackedRssFeed), ServerConfig$TrackedRssFeed$$serializer_getInstance()), new ReferenceArraySerializer(getKClass(ServerConfig$Role), ServerConfig$Role$$serializer_getInstance()), new ReferenceArraySerializer(getKClass(ServerConfig$TextChannel), ServerConfig$TextChannel$$serializer_getInstance())];
  };
  ServerConfig$Guild$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$Guild$$serializer_instance = null;
  function ServerConfig$Guild$$serializer_getInstance() {
    if (ServerConfig$Guild$$serializer_instance === null) {
      new ServerConfig$Guild$$serializer();
    }
    return ServerConfig$Guild$$serializer_instance;
  }
  function ServerConfig$ServerConfig$Guild_init(seen1, name, localeId, commandPrefix, deleteMessageAfterCommand, warnOnMissingPermission, warnOnUnknownCommand, blacklistedChannels, warnIfBlacklisted, blacklistedWarning, selfMember, donationKey, donationConfig, reactionRoleConfigs, levelUpConfig, trackedTwitterAccounts, trackedRssFeeds, roles, textChannels, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$Guild.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('localeId');
    else
      $this.localeId = localeId;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('commandPrefix');
    else
      $this.commandPrefix = commandPrefix;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('deleteMessageAfterCommand');
    else
      $this.deleteMessageAfterCommand = deleteMessageAfterCommand;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('warnOnMissingPermission');
    else
      $this.warnOnMissingPermission = warnOnMissingPermission;
    if ((seen1 & 32) === 0)
      throw new MissingFieldException('warnOnUnknownCommand');
    else
      $this.warnOnUnknownCommand = warnOnUnknownCommand;
    if ((seen1 & 64) === 0)
      throw new MissingFieldException('blacklistedChannels');
    else
      $this.blacklistedChannels = blacklistedChannels;
    if ((seen1 & 128) === 0)
      throw new MissingFieldException('warnIfBlacklisted');
    else
      $this.warnIfBlacklisted = warnIfBlacklisted;
    if ((seen1 & 256) === 0)
      $this.blacklistedWarning = null;
    else
      $this.blacklistedWarning = blacklistedWarning;
    if ((seen1 & 512) === 0)
      throw new MissingFieldException('selfMember');
    else
      $this.selfMember = selfMember;
    if ((seen1 & 1024) === 0)
      $this.donationKey = null;
    else
      $this.donationKey = donationKey;
    if ((seen1 & 2048) === 0)
      throw new MissingFieldException('donationConfig');
    else
      $this.donationConfig = donationConfig;
    if ((seen1 & 4096) === 0)
      throw new MissingFieldException('reactionRoleConfigs');
    else
      $this.reactionRoleConfigs = reactionRoleConfigs;
    if ((seen1 & 8192) === 0)
      throw new MissingFieldException('levelUpConfig');
    else
      $this.levelUpConfig = levelUpConfig;
    if ((seen1 & 16384) === 0)
      throw new MissingFieldException('trackedTwitterAccounts');
    else
      $this.trackedTwitterAccounts = trackedTwitterAccounts;
    if ((seen1 & 32768) === 0)
      throw new MissingFieldException('trackedRssFeeds');
    else
      $this.trackedRssFeeds = trackedRssFeeds;
    if ((seen1 & 65536) === 0)
      throw new MissingFieldException('roles');
    else
      $this.roles = roles;
    if ((seen1 & 131072) === 0)
      throw new MissingFieldException('textChannels');
    else
      $this.textChannels = textChannels;
    return $this;
  }
  ServerConfig$Guild.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Guild',
    interfaces: []
  };
  function ServerConfig$SelfMember(id, name, discriminator, effectiveAvatarUrl, donationKeys) {
    ServerConfig$SelfMember$Companion_getInstance();
    if (donationKeys === void 0)
      donationKeys = null;
    this.id = id;
    this.name = name;
    this.discriminator = discriminator;
    this.effectiveAvatarUrl = effectiveAvatarUrl;
    this.donationKeys = donationKeys;
  }
  function ServerConfig$SelfMember$Companion() {
    ServerConfig$SelfMember$Companion_instance = this;
  }
  ServerConfig$SelfMember$Companion.prototype.serializer = function () {
    return ServerConfig$SelfMember$$serializer_getInstance();
  };
  ServerConfig$SelfMember$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$SelfMember$Companion_instance = null;
  function ServerConfig$SelfMember$Companion_getInstance() {
    if (ServerConfig$SelfMember$Companion_instance === null) {
      new ServerConfig$SelfMember$Companion();
    }
    return ServerConfig$SelfMember$Companion_instance;
  }
  function ServerConfig$SelfMember$$serializer() {
    this.descriptor_mmrio3$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.SelfMember', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('discriminator', false);
    this.descriptor.addElement_ivxn3r$('effectiveAvatarUrl', false);
    this.descriptor.addElement_ivxn3r$('donationKeys', true);
    ServerConfig$SelfMember$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$SelfMember$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_mmrio3$_0;
    }
  });
  ServerConfig$SelfMember$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.name);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.discriminator);
    output.encodeStringElement_bgm7zs$(this.descriptor, 3, obj.effectiveAvatarUrl);
    if (!equals(obj.donationKeys, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 4))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 4, new ArrayListSerializer(ServerConfig$DonationKey$$serializer_getInstance()), obj.donationKeys);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$SelfMember$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeStringElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = (bitMask0 & 16) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 4, new ArrayListSerializer(ServerConfig$DonationKey$$serializer_getInstance())) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 4, new ArrayListSerializer(ServerConfig$DonationKey$$serializer_getInstance()), local4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$SelfMember_init(bitMask0, local0, local1, local2, local3, local4, null);
  };
  ServerConfig$SelfMember$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.StringSerializer, internal.StringSerializer, new NullableSerializer(new ArrayListSerializer(ServerConfig$DonationKey$$serializer_getInstance()))];
  };
  ServerConfig$SelfMember$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$SelfMember$$serializer_instance = null;
  function ServerConfig$SelfMember$$serializer_getInstance() {
    if (ServerConfig$SelfMember$$serializer_instance === null) {
      new ServerConfig$SelfMember$$serializer();
    }
    return ServerConfig$SelfMember$$serializer_instance;
  }
  function ServerConfig$ServerConfig$SelfMember_init(seen1, id, name, discriminator, effectiveAvatarUrl, donationKeys, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$SelfMember.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('discriminator');
    else
      $this.discriminator = discriminator;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('effectiveAvatarUrl');
    else
      $this.effectiveAvatarUrl = effectiveAvatarUrl;
    if ((seen1 & 16) === 0)
      $this.donationKeys = null;
    else
      $this.donationKeys = donationKeys;
    return $this;
  }
  ServerConfig$SelfMember.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'SelfMember',
    interfaces: []
  };
  function ServerConfig$DonationKey(id, value, user, expiresAt, usesKey) {
    ServerConfig$DonationKey$Companion_getInstance();
    if (user === void 0)
      user = null;
    if (usesKey === void 0)
      usesKey = null;
    this.id = id;
    this.value = value;
    this.user = user;
    this.expiresAt = expiresAt;
    this.usesKey = usesKey;
  }
  function ServerConfig$DonationKey$Companion() {
    ServerConfig$DonationKey$Companion_instance = this;
  }
  ServerConfig$DonationKey$Companion.prototype.serializer = function () {
    return ServerConfig$DonationKey$$serializer_getInstance();
  };
  ServerConfig$DonationKey$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$DonationKey$Companion_instance = null;
  function ServerConfig$DonationKey$Companion_getInstance() {
    if (ServerConfig$DonationKey$Companion_instance === null) {
      new ServerConfig$DonationKey$Companion();
    }
    return ServerConfig$DonationKey$Companion_instance;
  }
  function ServerConfig$DonationKey$$serializer() {
    this.descriptor_9j1reo$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.DonationKey', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('value', false);
    this.descriptor.addElement_ivxn3r$('user', true);
    this.descriptor.addElement_ivxn3r$('expiresAt', false);
    this.descriptor.addElement_ivxn3r$('usesKey', true);
    ServerConfig$DonationKey$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$DonationKey$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_9j1reo$_0;
    }
  });
  ServerConfig$DonationKey$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 1, obj.value);
    if (!equals(obj.user, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 2))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 2, ServerConfig$SelfMember$$serializer_getInstance(), obj.user);
    output.encodeLongElement_a3zgoj$(this.descriptor, 3, obj.expiresAt);
    if (!equals(obj.usesKey, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 4))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 4, ServerConfig$MiniGuild$$serializer_getInstance(), obj.usesKey);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$DonationKey$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 2, ServerConfig$SelfMember$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 2, ServerConfig$SelfMember$$serializer_getInstance(), local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeLongElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = (bitMask0 & 16) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 4, ServerConfig$MiniGuild$$serializer_getInstance()) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 4, ServerConfig$MiniGuild$$serializer_getInstance(), local4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$DonationKey_init(bitMask0, local0, local1, local2, local3, local4, null);
  };
  ServerConfig$DonationKey$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.DoubleSerializer, new NullableSerializer(ServerConfig$SelfMember$$serializer_getInstance()), internal.LongSerializer, new NullableSerializer(ServerConfig$MiniGuild$$serializer_getInstance())];
  };
  ServerConfig$DonationKey$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$DonationKey$$serializer_instance = null;
  function ServerConfig$DonationKey$$serializer_getInstance() {
    if (ServerConfig$DonationKey$$serializer_instance === null) {
      new ServerConfig$DonationKey$$serializer();
    }
    return ServerConfig$DonationKey$$serializer_instance;
  }
  function ServerConfig$ServerConfig$DonationKey_init(seen1, id, value, user, expiresAt, usesKey, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$DonationKey.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('value');
    else
      $this.value = value;
    if ((seen1 & 4) === 0)
      $this.user = null;
    else
      $this.user = user;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('expiresAt');
    else
      $this.expiresAt = expiresAt;
    if ((seen1 & 16) === 0)
      $this.usesKey = null;
    else
      $this.usesKey = usesKey;
    return $this;
  }
  ServerConfig$DonationKey.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DonationKey',
    interfaces: []
  };
  function ServerConfig$DonationConfig(customBadge, dailyMultiplier) {
    ServerConfig$DonationConfig$Companion_getInstance();
    this.customBadge = customBadge;
    this.dailyMultiplier = dailyMultiplier;
  }
  function ServerConfig$DonationConfig$Companion() {
    ServerConfig$DonationConfig$Companion_instance = this;
  }
  ServerConfig$DonationConfig$Companion.prototype.serializer = function () {
    return ServerConfig$DonationConfig$$serializer_getInstance();
  };
  ServerConfig$DonationConfig$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$DonationConfig$Companion_instance = null;
  function ServerConfig$DonationConfig$Companion_getInstance() {
    if (ServerConfig$DonationConfig$Companion_instance === null) {
      new ServerConfig$DonationConfig$Companion();
    }
    return ServerConfig$DonationConfig$Companion_instance;
  }
  function ServerConfig$DonationConfig$$serializer() {
    this.descriptor_xj88gl$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.DonationConfig', this);
    this.descriptor.addElement_ivxn3r$('customBadge', false);
    this.descriptor.addElement_ivxn3r$('dailyMultiplier', false);
    ServerConfig$DonationConfig$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$DonationConfig$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_xj88gl$_0;
    }
  });
  ServerConfig$DonationConfig$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 0, obj.customBadge);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 1, obj.dailyMultiplier);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$DonationConfig$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$DonationConfig_init(bitMask0, local0, local1, null);
  };
  ServerConfig$DonationConfig$$serializer.prototype.childSerializers = function () {
    return [internal.BooleanSerializer, internal.BooleanSerializer];
  };
  ServerConfig$DonationConfig$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$DonationConfig$$serializer_instance = null;
  function ServerConfig$DonationConfig$$serializer_getInstance() {
    if (ServerConfig$DonationConfig$$serializer_instance === null) {
      new ServerConfig$DonationConfig$$serializer();
    }
    return ServerConfig$DonationConfig$$serializer_instance;
  }
  function ServerConfig$ServerConfig$DonationConfig_init(seen1, customBadge, dailyMultiplier, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$DonationConfig.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('customBadge');
    else
      $this.customBadge = customBadge;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('dailyMultiplier');
    else
      $this.dailyMultiplier = dailyMultiplier;
    return $this;
  }
  ServerConfig$DonationConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DonationConfig',
    interfaces: []
  };
  function ServerConfig$LevelUpConfig(roleGiveType, noXpRoles, noXpChannels, announcements, rolesByExperience, experienceRoleRates) {
    ServerConfig$LevelUpConfig$Companion_getInstance();
    this.roleGiveType = roleGiveType;
    this.noXpRoles = noXpRoles;
    this.noXpChannels = noXpChannels;
    this.announcements = announcements;
    this.rolesByExperience = rolesByExperience;
    this.experienceRoleRates = experienceRoleRates;
  }
  function ServerConfig$LevelUpConfig$Companion() {
    ServerConfig$LevelUpConfig$Companion_instance = this;
  }
  ServerConfig$LevelUpConfig$Companion.prototype.serializer = function () {
    return ServerConfig$LevelUpConfig$$serializer_getInstance();
  };
  ServerConfig$LevelUpConfig$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$LevelUpConfig$Companion_instance = null;
  function ServerConfig$LevelUpConfig$Companion_getInstance() {
    if (ServerConfig$LevelUpConfig$Companion_instance === null) {
      new ServerConfig$LevelUpConfig$Companion();
    }
    return ServerConfig$LevelUpConfig$Companion_instance;
  }
  function ServerConfig$LevelUpConfig$$serializer() {
    this.descriptor_nzcubw$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.LevelUpConfig', this);
    this.descriptor.addElement_ivxn3r$('roleGiveType', false);
    this.descriptor.addElement_ivxn3r$('noXpRoles', false);
    this.descriptor.addElement_ivxn3r$('noXpChannels', false);
    this.descriptor.addElement_ivxn3r$('announcements', false);
    this.descriptor.addElement_ivxn3r$('rolesByExperience', false);
    this.descriptor.addElement_ivxn3r$('experienceRoleRates', false);
    ServerConfig$LevelUpConfig$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$LevelUpConfig$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_nzcubw$_0;
    }
  });
  ServerConfig$LevelUpConfig$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.roleGiveType);
    output.encodeSerializableElement_blecud$(this.descriptor, 1, new ArrayListSerializer(internal.LongSerializer), obj.noXpRoles);
    output.encodeSerializableElement_blecud$(this.descriptor, 2, new ArrayListSerializer(internal.LongSerializer), obj.noXpChannels);
    output.encodeSerializableElement_blecud$(this.descriptor, 3, new ArrayListSerializer(ServerConfig$Announcement$$serializer_getInstance()), obj.announcements);
    output.encodeSerializableElement_blecud$(this.descriptor, 4, new ArrayListSerializer(ServerConfig$RoleByExperience$$serializer_getInstance()), obj.rolesByExperience);
    output.encodeSerializableElement_blecud$(this.descriptor, 5, new ArrayListSerializer(ServerConfig$ExperienceRoleRate$$serializer_getInstance()), obj.experienceRoleRates);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$LevelUpConfig$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4
    , local5;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 1, new ArrayListSerializer(internal.LongSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 1, new ArrayListSerializer(internal.LongSerializer), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 2, new ArrayListSerializer(internal.LongSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 2, new ArrayListSerializer(internal.LongSerializer), local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = (bitMask0 & 8) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 3, new ArrayListSerializer(ServerConfig$Announcement$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 3, new ArrayListSerializer(ServerConfig$Announcement$$serializer_getInstance()), local3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = (bitMask0 & 16) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 4, new ArrayListSerializer(ServerConfig$RoleByExperience$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 4, new ArrayListSerializer(ServerConfig$RoleByExperience$$serializer_getInstance()), local4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case 5:
          local5 = (bitMask0 & 32) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 5, new ArrayListSerializer(ServerConfig$ExperienceRoleRate$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 5, new ArrayListSerializer(ServerConfig$ExperienceRoleRate$$serializer_getInstance()), local5);
          bitMask0 |= 32;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$LevelUpConfig_init(bitMask0, local0, local1, local2, local3, local4, local5, null);
  };
  ServerConfig$LevelUpConfig$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, new ArrayListSerializer(internal.LongSerializer), new ArrayListSerializer(internal.LongSerializer), new ArrayListSerializer(ServerConfig$Announcement$$serializer_getInstance()), new ArrayListSerializer(ServerConfig$RoleByExperience$$serializer_getInstance()), new ArrayListSerializer(ServerConfig$ExperienceRoleRate$$serializer_getInstance())];
  };
  ServerConfig$LevelUpConfig$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$LevelUpConfig$$serializer_instance = null;
  function ServerConfig$LevelUpConfig$$serializer_getInstance() {
    if (ServerConfig$LevelUpConfig$$serializer_instance === null) {
      new ServerConfig$LevelUpConfig$$serializer();
    }
    return ServerConfig$LevelUpConfig$$serializer_instance;
  }
  function ServerConfig$ServerConfig$LevelUpConfig_init(seen1, roleGiveType, noXpRoles, noXpChannels, announcements, rolesByExperience, experienceRoleRates, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$LevelUpConfig.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('roleGiveType');
    else
      $this.roleGiveType = roleGiveType;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('noXpRoles');
    else
      $this.noXpRoles = noXpRoles;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('noXpChannels');
    else
      $this.noXpChannels = noXpChannels;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('announcements');
    else
      $this.announcements = announcements;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('rolesByExperience');
    else
      $this.rolesByExperience = rolesByExperience;
    if ((seen1 & 32) === 0)
      throw new MissingFieldException('experienceRoleRates');
    else
      $this.experienceRoleRates = experienceRoleRates;
    return $this;
  }
  ServerConfig$LevelUpConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LevelUpConfig',
    interfaces: []
  };
  function ServerConfig$Announcement(type, channelId, onlyIfUserReceivedRoles, message) {
    ServerConfig$Announcement$Companion_getInstance();
    if (channelId === void 0)
      channelId = null;
    this.type = type;
    this.channelId = channelId;
    this.onlyIfUserReceivedRoles = onlyIfUserReceivedRoles;
    this.message = message;
  }
  function ServerConfig$Announcement$Companion() {
    ServerConfig$Announcement$Companion_instance = this;
  }
  ServerConfig$Announcement$Companion.prototype.serializer = function () {
    return ServerConfig$Announcement$$serializer_getInstance();
  };
  ServerConfig$Announcement$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$Announcement$Companion_instance = null;
  function ServerConfig$Announcement$Companion_getInstance() {
    if (ServerConfig$Announcement$Companion_instance === null) {
      new ServerConfig$Announcement$Companion();
    }
    return ServerConfig$Announcement$Companion_instance;
  }
  function ServerConfig$Announcement$$serializer() {
    this.descriptor_6s7uyq$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.Announcement', this);
    this.descriptor.addElement_ivxn3r$('type', false);
    this.descriptor.addElement_ivxn3r$('channelId', true);
    this.descriptor.addElement_ivxn3r$('onlyIfUserReceivedRoles', false);
    this.descriptor.addElement_ivxn3r$('message', false);
    ServerConfig$Announcement$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$Announcement$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_6s7uyq$_0;
    }
  });
  ServerConfig$Announcement$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.type);
    if (!equals(obj.channelId, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 1))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 1, internal.StringSerializer, obj.channelId);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 2, obj.onlyIfUserReceivedRoles);
    output.encodeStringElement_bgm7zs$(this.descriptor, 3, obj.message);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$Announcement$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 1, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 1, internal.StringSerializer, local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeStringElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$Announcement_init(bitMask0, local0, local1, local2, local3, null);
  };
  ServerConfig$Announcement$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, new NullableSerializer(internal.StringSerializer), internal.BooleanSerializer, internal.StringSerializer];
  };
  ServerConfig$Announcement$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$Announcement$$serializer_instance = null;
  function ServerConfig$Announcement$$serializer_getInstance() {
    if (ServerConfig$Announcement$$serializer_instance === null) {
      new ServerConfig$Announcement$$serializer();
    }
    return ServerConfig$Announcement$$serializer_instance;
  }
  function ServerConfig$ServerConfig$Announcement_init(seen1, type, channelId, onlyIfUserReceivedRoles, message, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$Announcement.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('type');
    else
      $this.type = type;
    if ((seen1 & 2) === 0)
      $this.channelId = null;
    else
      $this.channelId = channelId;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('onlyIfUserReceivedRoles');
    else
      $this.onlyIfUserReceivedRoles = onlyIfUserReceivedRoles;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('message');
    else
      $this.message = message;
    return $this;
  }
  ServerConfig$Announcement.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Announcement',
    interfaces: []
  };
  function ServerConfig$RoleByExperience(requiredExperience, roles) {
    ServerConfig$RoleByExperience$Companion_getInstance();
    this.requiredExperience = requiredExperience;
    this.roles = roles;
  }
  function ServerConfig$RoleByExperience$Companion() {
    ServerConfig$RoleByExperience$Companion_instance = this;
  }
  ServerConfig$RoleByExperience$Companion.prototype.serializer = function () {
    return ServerConfig$RoleByExperience$$serializer_getInstance();
  };
  ServerConfig$RoleByExperience$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$RoleByExperience$Companion_instance = null;
  function ServerConfig$RoleByExperience$Companion_getInstance() {
    if (ServerConfig$RoleByExperience$Companion_instance === null) {
      new ServerConfig$RoleByExperience$Companion();
    }
    return ServerConfig$RoleByExperience$Companion_instance;
  }
  function ServerConfig$RoleByExperience$$serializer() {
    this.descriptor_zexejy$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.RoleByExperience', this);
    this.descriptor.addElement_ivxn3r$('requiredExperience', false);
    this.descriptor.addElement_ivxn3r$('roles', false);
    ServerConfig$RoleByExperience$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$RoleByExperience$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_zexejy$_0;
    }
  });
  ServerConfig$RoleByExperience$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.requiredExperience);
    output.encodeSerializableElement_blecud$(this.descriptor, 1, new ArrayListSerializer(internal.StringSerializer), obj.roles);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$RoleByExperience$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 1, new ArrayListSerializer(internal.StringSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 1, new ArrayListSerializer(internal.StringSerializer), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$RoleByExperience_init(bitMask0, local0, local1, null);
  };
  ServerConfig$RoleByExperience$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, new ArrayListSerializer(internal.StringSerializer)];
  };
  ServerConfig$RoleByExperience$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$RoleByExperience$$serializer_instance = null;
  function ServerConfig$RoleByExperience$$serializer_getInstance() {
    if (ServerConfig$RoleByExperience$$serializer_instance === null) {
      new ServerConfig$RoleByExperience$$serializer();
    }
    return ServerConfig$RoleByExperience$$serializer_instance;
  }
  function ServerConfig$ServerConfig$RoleByExperience_init(seen1, requiredExperience, roles, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$RoleByExperience.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('requiredExperience');
    else
      $this.requiredExperience = requiredExperience;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('roles');
    else
      $this.roles = roles;
    return $this;
  }
  ServerConfig$RoleByExperience.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RoleByExperience',
    interfaces: []
  };
  function ServerConfig$ExperienceRoleRate(role, rate) {
    ServerConfig$ExperienceRoleRate$Companion_getInstance();
    this.role = role;
    this.rate = rate;
  }
  function ServerConfig$ExperienceRoleRate$Companion() {
    ServerConfig$ExperienceRoleRate$Companion_instance = this;
  }
  ServerConfig$ExperienceRoleRate$Companion.prototype.serializer = function () {
    return ServerConfig$ExperienceRoleRate$$serializer_getInstance();
  };
  ServerConfig$ExperienceRoleRate$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$ExperienceRoleRate$Companion_instance = null;
  function ServerConfig$ExperienceRoleRate$Companion_getInstance() {
    if (ServerConfig$ExperienceRoleRate$Companion_instance === null) {
      new ServerConfig$ExperienceRoleRate$Companion();
    }
    return ServerConfig$ExperienceRoleRate$Companion_instance;
  }
  function ServerConfig$ExperienceRoleRate$$serializer() {
    this.descriptor_rkj3gp$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.ExperienceRoleRate', this);
    this.descriptor.addElement_ivxn3r$('role', false);
    this.descriptor.addElement_ivxn3r$('rate', false);
    ServerConfig$ExperienceRoleRate$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$ExperienceRoleRate$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_rkj3gp$_0;
    }
  });
  ServerConfig$ExperienceRoleRate$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeLongElement_a3zgoj$(this.descriptor, 0, obj.role);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 1, obj.rate);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$ExperienceRoleRate$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeLongElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$ExperienceRoleRate_init(bitMask0, local0, local1, null);
  };
  ServerConfig$ExperienceRoleRate$$serializer.prototype.childSerializers = function () {
    return [internal.LongSerializer, internal.DoubleSerializer];
  };
  ServerConfig$ExperienceRoleRate$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$ExperienceRoleRate$$serializer_instance = null;
  function ServerConfig$ExperienceRoleRate$$serializer_getInstance() {
    if (ServerConfig$ExperienceRoleRate$$serializer_instance === null) {
      new ServerConfig$ExperienceRoleRate$$serializer();
    }
    return ServerConfig$ExperienceRoleRate$$serializer_instance;
  }
  function ServerConfig$ServerConfig$ExperienceRoleRate_init(seen1, role, rate, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$ExperienceRoleRate.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('role');
    else
      $this.role = role;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('rate');
    else
      $this.rate = rate;
    return $this;
  }
  ServerConfig$ExperienceRoleRate.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ExperienceRoleRate',
    interfaces: []
  };
  function ServerConfig$TrackedTwitterAccount(channelId, twitterAccountId, message) {
    ServerConfig$TrackedTwitterAccount$Companion_getInstance();
    this.channelId = channelId;
    this.twitterAccountId = twitterAccountId;
    this.message = message;
  }
  function ServerConfig$TrackedTwitterAccount$Companion() {
    ServerConfig$TrackedTwitterAccount$Companion_instance = this;
  }
  ServerConfig$TrackedTwitterAccount$Companion.prototype.serializer = function () {
    return ServerConfig$TrackedTwitterAccount$$serializer_getInstance();
  };
  ServerConfig$TrackedTwitterAccount$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$TrackedTwitterAccount$Companion_instance = null;
  function ServerConfig$TrackedTwitterAccount$Companion_getInstance() {
    if (ServerConfig$TrackedTwitterAccount$Companion_instance === null) {
      new ServerConfig$TrackedTwitterAccount$Companion();
    }
    return ServerConfig$TrackedTwitterAccount$Companion_instance;
  }
  function ServerConfig$TrackedTwitterAccount$$serializer() {
    this.descriptor_aemga1$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.TrackedTwitterAccount', this);
    this.descriptor.addElement_ivxn3r$('channelId', false);
    this.descriptor.addElement_ivxn3r$('twitterAccountId', false);
    this.descriptor.addElement_ivxn3r$('message', false);
    ServerConfig$TrackedTwitterAccount$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$TrackedTwitterAccount$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_aemga1$_0;
    }
  });
  ServerConfig$TrackedTwitterAccount$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeLongElement_a3zgoj$(this.descriptor, 0, obj.channelId);
    output.encodeLongElement_a3zgoj$(this.descriptor, 1, obj.twitterAccountId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.message);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$TrackedTwitterAccount$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeLongElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeLongElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$TrackedTwitterAccount_init(bitMask0, local0, local1, local2, null);
  };
  ServerConfig$TrackedTwitterAccount$$serializer.prototype.childSerializers = function () {
    return [internal.LongSerializer, internal.LongSerializer, internal.StringSerializer];
  };
  ServerConfig$TrackedTwitterAccount$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$TrackedTwitterAccount$$serializer_instance = null;
  function ServerConfig$TrackedTwitterAccount$$serializer_getInstance() {
    if (ServerConfig$TrackedTwitterAccount$$serializer_instance === null) {
      new ServerConfig$TrackedTwitterAccount$$serializer();
    }
    return ServerConfig$TrackedTwitterAccount$$serializer_instance;
  }
  function ServerConfig$ServerConfig$TrackedTwitterAccount_init(seen1, channelId, twitterAccountId, message, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$TrackedTwitterAccount.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('channelId');
    else
      $this.channelId = channelId;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('twitterAccountId');
    else
      $this.twitterAccountId = twitterAccountId;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('message');
    else
      $this.message = message;
    return $this;
  }
  ServerConfig$TrackedTwitterAccount.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TrackedTwitterAccount',
    interfaces: []
  };
  function ServerConfig$TrackedRssFeed(channelId, feedUrl, message) {
    ServerConfig$TrackedRssFeed$Companion_getInstance();
    this.channelId = channelId;
    this.feedUrl = feedUrl;
    this.message = message;
  }
  function ServerConfig$TrackedRssFeed$Companion() {
    ServerConfig$TrackedRssFeed$Companion_instance = this;
  }
  ServerConfig$TrackedRssFeed$Companion.prototype.serializer = function () {
    return ServerConfig$TrackedRssFeed$$serializer_getInstance();
  };
  ServerConfig$TrackedRssFeed$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$TrackedRssFeed$Companion_instance = null;
  function ServerConfig$TrackedRssFeed$Companion_getInstance() {
    if (ServerConfig$TrackedRssFeed$Companion_instance === null) {
      new ServerConfig$TrackedRssFeed$Companion();
    }
    return ServerConfig$TrackedRssFeed$Companion_instance;
  }
  function ServerConfig$TrackedRssFeed$$serializer() {
    this.descriptor_c3c43n$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.TrackedRssFeed', this);
    this.descriptor.addElement_ivxn3r$('channelId', false);
    this.descriptor.addElement_ivxn3r$('feedUrl', false);
    this.descriptor.addElement_ivxn3r$('message', false);
    ServerConfig$TrackedRssFeed$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$TrackedRssFeed$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_c3c43n$_0;
    }
  });
  ServerConfig$TrackedRssFeed$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeLongElement_a3zgoj$(this.descriptor, 0, obj.channelId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.feedUrl);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.message);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$TrackedRssFeed$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeLongElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$TrackedRssFeed_init(bitMask0, local0, local1, local2, null);
  };
  ServerConfig$TrackedRssFeed$$serializer.prototype.childSerializers = function () {
    return [internal.LongSerializer, internal.StringSerializer, internal.StringSerializer];
  };
  ServerConfig$TrackedRssFeed$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$TrackedRssFeed$$serializer_instance = null;
  function ServerConfig$TrackedRssFeed$$serializer_getInstance() {
    if (ServerConfig$TrackedRssFeed$$serializer_instance === null) {
      new ServerConfig$TrackedRssFeed$$serializer();
    }
    return ServerConfig$TrackedRssFeed$$serializer_instance;
  }
  function ServerConfig$ServerConfig$TrackedRssFeed_init(seen1, channelId, feedUrl, message, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$TrackedRssFeed.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('channelId');
    else
      $this.channelId = channelId;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('feedUrl');
    else
      $this.feedUrl = feedUrl;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('message');
    else
      $this.message = message;
    return $this;
  }
  ServerConfig$TrackedRssFeed.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TrackedRssFeed',
    interfaces: []
  };
  function ServerConfig$ReactionOption(textChannelId, messageId, reaction, locks, roleIds) {
    ServerConfig$ReactionOption$Companion_getInstance();
    this.textChannelId = textChannelId;
    this.messageId = messageId;
    this.reaction = reaction;
    this.locks = locks;
    this.roleIds = roleIds;
  }
  function ServerConfig$ReactionOption$Companion() {
    ServerConfig$ReactionOption$Companion_instance = this;
  }
  ServerConfig$ReactionOption$Companion.prototype.serializer = function () {
    return ServerConfig$ReactionOption$$serializer_getInstance();
  };
  ServerConfig$ReactionOption$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$ReactionOption$Companion_instance = null;
  function ServerConfig$ReactionOption$Companion_getInstance() {
    if (ServerConfig$ReactionOption$Companion_instance === null) {
      new ServerConfig$ReactionOption$Companion();
    }
    return ServerConfig$ReactionOption$Companion_instance;
  }
  function ServerConfig$ReactionOption$$serializer() {
    this.descriptor_am4cz9$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.ReactionOption', this);
    this.descriptor.addElement_ivxn3r$('textChannelId', false);
    this.descriptor.addElement_ivxn3r$('messageId', false);
    this.descriptor.addElement_ivxn3r$('reaction', false);
    this.descriptor.addElement_ivxn3r$('locks', false);
    this.descriptor.addElement_ivxn3r$('roleIds', false);
    ServerConfig$ReactionOption$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$ReactionOption$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_am4cz9$_0;
    }
  });
  ServerConfig$ReactionOption$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.textChannelId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.messageId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.reaction);
    output.encodeSerializableElement_blecud$(this.descriptor, 3, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), obj.locks);
    output.encodeSerializableElement_blecud$(this.descriptor, 4, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), obj.roleIds);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$ReactionOption$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = (bitMask0 & 8) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 3, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 3, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), local3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = (bitMask0 & 16) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 4, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer)) : input.updateSerializableElement_ehubvl$(this.descriptor, 4, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), local4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$ReactionOption_init(bitMask0, local0, local1, local2, local3, local4, null);
  };
  ServerConfig$ReactionOption$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.StringSerializer, new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer), new ReferenceArraySerializer(PrimitiveClasses$stringClass, internal.StringSerializer)];
  };
  ServerConfig$ReactionOption$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$ReactionOption$$serializer_instance = null;
  function ServerConfig$ReactionOption$$serializer_getInstance() {
    if (ServerConfig$ReactionOption$$serializer_instance === null) {
      new ServerConfig$ReactionOption$$serializer();
    }
    return ServerConfig$ReactionOption$$serializer_instance;
  }
  function ServerConfig$ServerConfig$ReactionOption_init(seen1, textChannelId, messageId, reaction, locks, roleIds, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$ReactionOption.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('textChannelId');
    else
      $this.textChannelId = textChannelId;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('messageId');
    else
      $this.messageId = messageId;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('reaction');
    else
      $this.reaction = reaction;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('locks');
    else
      $this.locks = locks;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('roleIds');
    else
      $this.roleIds = roleIds;
    return $this;
  }
  ServerConfig$ReactionOption.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ReactionOption',
    interfaces: []
  };
  function ServerConfig$DiscordMessage(id, channelId, content, reactions) {
    ServerConfig$DiscordMessage$Companion_getInstance();
    this.id = id;
    this.channelId = channelId;
    this.content = content;
    this.reactions = reactions;
  }
  function ServerConfig$DiscordMessage$Companion() {
    ServerConfig$DiscordMessage$Companion_instance = this;
  }
  ServerConfig$DiscordMessage$Companion.prototype.serializer = function () {
    return ServerConfig$DiscordMessage$$serializer_getInstance();
  };
  ServerConfig$DiscordMessage$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$DiscordMessage$Companion_instance = null;
  function ServerConfig$DiscordMessage$Companion_getInstance() {
    if (ServerConfig$DiscordMessage$Companion_instance === null) {
      new ServerConfig$DiscordMessage$Companion();
    }
    return ServerConfig$DiscordMessage$Companion_instance;
  }
  function ServerConfig$DiscordMessage$$serializer() {
    this.descriptor_6tyrxu$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.DiscordMessage', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('channelId', false);
    this.descriptor.addElement_ivxn3r$('content', false);
    this.descriptor.addElement_ivxn3r$('reactions', false);
    ServerConfig$DiscordMessage$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$DiscordMessage$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_6tyrxu$_0;
    }
  });
  ServerConfig$DiscordMessage$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.channelId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.content);
    output.encodeSerializableElement_blecud$(this.descriptor, 3, new ReferenceArraySerializer(getKClass(ServerConfig$DiscordReaction), ServerConfig$DiscordReaction$$serializer_getInstance()), obj.reactions);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$DiscordMessage$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = (bitMask0 & 8) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 3, new ReferenceArraySerializer(getKClass(ServerConfig$DiscordReaction), ServerConfig$DiscordReaction$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 3, new ReferenceArraySerializer(getKClass(ServerConfig$DiscordReaction), ServerConfig$DiscordReaction$$serializer_getInstance()), local3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$DiscordMessage_init(bitMask0, local0, local1, local2, local3, null);
  };
  ServerConfig$DiscordMessage$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.StringSerializer, new ReferenceArraySerializer(getKClass(ServerConfig$DiscordReaction), ServerConfig$DiscordReaction$$serializer_getInstance())];
  };
  ServerConfig$DiscordMessage$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$DiscordMessage$$serializer_instance = null;
  function ServerConfig$DiscordMessage$$serializer_getInstance() {
    if (ServerConfig$DiscordMessage$$serializer_instance === null) {
      new ServerConfig$DiscordMessage$$serializer();
    }
    return ServerConfig$DiscordMessage$$serializer_instance;
  }
  function ServerConfig$ServerConfig$DiscordMessage_init(seen1, id, channelId, content, reactions, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$DiscordMessage.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('channelId');
    else
      $this.channelId = channelId;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('content');
    else
      $this.content = content;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('reactions');
    else
      $this.reactions = reactions;
    return $this;
  }
  ServerConfig$DiscordMessage.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DiscordMessage',
    interfaces: []
  };
  function ServerConfig$DiscordReaction(isDiscordEmote, name, id) {
    ServerConfig$DiscordReaction$Companion_getInstance();
    if (id === void 0)
      id = null;
    this.isDiscordEmote = isDiscordEmote;
    this.name = name;
    this.id = id;
  }
  function ServerConfig$DiscordReaction$Companion() {
    ServerConfig$DiscordReaction$Companion_instance = this;
  }
  ServerConfig$DiscordReaction$Companion.prototype.serializer = function () {
    return ServerConfig$DiscordReaction$$serializer_getInstance();
  };
  ServerConfig$DiscordReaction$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$DiscordReaction$Companion_instance = null;
  function ServerConfig$DiscordReaction$Companion_getInstance() {
    if (ServerConfig$DiscordReaction$Companion_instance === null) {
      new ServerConfig$DiscordReaction$Companion();
    }
    return ServerConfig$DiscordReaction$Companion_instance;
  }
  function ServerConfig$DiscordReaction$$serializer() {
    this.descriptor_7nn0fs$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.DiscordReaction', this);
    this.descriptor.addElement_ivxn3r$('isDiscordEmote', false);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('id', true);
    ServerConfig$DiscordReaction$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$DiscordReaction$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_7nn0fs$_0;
    }
  });
  ServerConfig$DiscordReaction$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 0, obj.isDiscordEmote);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.name);
    if (!equals(obj.id, null) || output.shouldEncodeElementDefault_3zr2iy$(this.descriptor, 2))
      output.encodeNullableSerializableElement_orpvvi$(this.descriptor, 2, internal.StringSerializer, obj.id);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$DiscordReaction$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = (bitMask0 & 4) === 0 ? input.decodeNullableSerializableElement_cwlm4k$(this.descriptor, 2, internal.StringSerializer) : input.updateNullableSerializableElement_u33s02$(this.descriptor, 2, internal.StringSerializer, local2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$DiscordReaction_init(bitMask0, local0, local1, local2, null);
  };
  ServerConfig$DiscordReaction$$serializer.prototype.childSerializers = function () {
    return [internal.BooleanSerializer, internal.StringSerializer, new NullableSerializer(internal.StringSerializer)];
  };
  ServerConfig$DiscordReaction$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$DiscordReaction$$serializer_instance = null;
  function ServerConfig$DiscordReaction$$serializer_getInstance() {
    if (ServerConfig$DiscordReaction$$serializer_instance === null) {
      new ServerConfig$DiscordReaction$$serializer();
    }
    return ServerConfig$DiscordReaction$$serializer_instance;
  }
  function ServerConfig$ServerConfig$DiscordReaction_init(seen1, isDiscordEmote, name, id, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$DiscordReaction.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('isDiscordEmote');
    else
      $this.isDiscordEmote = isDiscordEmote;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 4) === 0)
      $this.id = null;
    else
      $this.id = id;
    return $this;
  }
  ServerConfig$DiscordReaction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DiscordReaction',
    interfaces: []
  };
  function ServerConfig$Role(id, name, colorRaw, canInteract, isManaged, isHoisted) {
    ServerConfig$Role$Companion_getInstance();
    this.id = id;
    this.name = name;
    this.colorRaw = colorRaw;
    this.canInteract = canInteract;
    this.isManaged = isManaged;
    this.isHoisted = isHoisted;
  }
  ServerConfig$Role.prototype.getColor = function () {
    if (this.colorRaw === 536870911)
      return null;
    var red = this.colorRaw >> 16 & 255;
    var green = this.colorRaw >> 8 & 255;
    var blue = this.colorRaw & 255;
    return new LoriColor(red, green, blue);
  };
  function ServerConfig$Role$Companion() {
    ServerConfig$Role$Companion_instance = this;
  }
  ServerConfig$Role$Companion.prototype.serializer = function () {
    return ServerConfig$Role$$serializer_getInstance();
  };
  ServerConfig$Role$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$Role$Companion_instance = null;
  function ServerConfig$Role$Companion_getInstance() {
    if (ServerConfig$Role$Companion_instance === null) {
      new ServerConfig$Role$Companion();
    }
    return ServerConfig$Role$Companion_instance;
  }
  function ServerConfig$Role$$serializer() {
    this.descriptor_kry5kd$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.Role', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('name', false);
    this.descriptor.addElement_ivxn3r$('colorRaw', false);
    this.descriptor.addElement_ivxn3r$('canInteract', false);
    this.descriptor.addElement_ivxn3r$('isManaged', false);
    this.descriptor.addElement_ivxn3r$('isHoisted', false);
    ServerConfig$Role$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$Role$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_kry5kd$_0;
    }
  });
  ServerConfig$Role$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.name);
    output.encodeIntElement_4wpqag$(this.descriptor, 2, obj.colorRaw);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 3, obj.canInteract);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 4, obj.isManaged);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 5, obj.isHoisted);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$Role$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4
    , local5;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeIntElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case 5:
          local5 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 5);
          bitMask0 |= 32;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$Role_init(bitMask0, local0, local1, local2, local3, local4, local5, null);
  };
  ServerConfig$Role$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.IntSerializer, internal.BooleanSerializer, internal.BooleanSerializer, internal.BooleanSerializer];
  };
  ServerConfig$Role$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$Role$$serializer_instance = null;
  function ServerConfig$Role$$serializer_getInstance() {
    if (ServerConfig$Role$$serializer_instance === null) {
      new ServerConfig$Role$$serializer();
    }
    return ServerConfig$Role$$serializer_instance;
  }
  function ServerConfig$ServerConfig$Role_init(seen1, id, name, colorRaw, canInteract, isManaged, isHoisted, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$Role.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('colorRaw');
    else
      $this.colorRaw = colorRaw;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('canInteract');
    else
      $this.canInteract = canInteract;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('isManaged');
    else
      $this.isManaged = isManaged;
    if ((seen1 & 32) === 0)
      throw new MissingFieldException('isHoisted');
    else
      $this.isHoisted = isHoisted;
    return $this;
  }
  ServerConfig$Role.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Role',
    interfaces: []
  };
  function ServerConfig$TextChannel(id, name) {
    ServerConfig$TextChannel$Companion_getInstance();
    this.id = id;
    this.name = name;
  }
  function ServerConfig$TextChannel$Companion() {
    ServerConfig$TextChannel$Companion_instance = this;
  }
  ServerConfig$TextChannel$Companion.prototype.serializer = function () {
    return ServerConfig$TextChannel$$serializer_getInstance();
  };
  ServerConfig$TextChannel$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$TextChannel$Companion_instance = null;
  function ServerConfig$TextChannel$Companion_getInstance() {
    if (ServerConfig$TextChannel$Companion_instance === null) {
      new ServerConfig$TextChannel$Companion();
    }
    return ServerConfig$TextChannel$Companion_instance;
  }
  function ServerConfig$TextChannel$$serializer() {
    this.descriptor_ezdmc7$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.TextChannel', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('name', false);
    ServerConfig$TextChannel$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$TextChannel$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_ezdmc7$_0;
    }
  });
  ServerConfig$TextChannel$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.name);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$TextChannel$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$TextChannel_init(bitMask0, local0, local1, null);
  };
  ServerConfig$TextChannel$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer];
  };
  ServerConfig$TextChannel$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$TextChannel$$serializer_instance = null;
  function ServerConfig$TextChannel$$serializer_getInstance() {
    if (ServerConfig$TextChannel$$serializer_instance === null) {
      new ServerConfig$TextChannel$$serializer();
    }
    return ServerConfig$TextChannel$$serializer_instance;
  }
  function ServerConfig$ServerConfig$TextChannel_init(seen1, id, name, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$TextChannel.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('name');
    else
      $this.name = name;
    return $this;
  }
  ServerConfig$TextChannel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextChannel',
    interfaces: []
  };
  function ServerConfig$WebAuditLogWrapper(users, entries) {
    ServerConfig$WebAuditLogWrapper$Companion_getInstance();
    this.users = users;
    this.entries = entries;
  }
  function ServerConfig$WebAuditLogWrapper$Companion() {
    ServerConfig$WebAuditLogWrapper$Companion_instance = this;
  }
  ServerConfig$WebAuditLogWrapper$Companion.prototype.serializer = function () {
    return ServerConfig$WebAuditLogWrapper$$serializer_getInstance();
  };
  ServerConfig$WebAuditLogWrapper$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$WebAuditLogWrapper$Companion_instance = null;
  function ServerConfig$WebAuditLogWrapper$Companion_getInstance() {
    if (ServerConfig$WebAuditLogWrapper$Companion_instance === null) {
      new ServerConfig$WebAuditLogWrapper$Companion();
    }
    return ServerConfig$WebAuditLogWrapper$Companion_instance;
  }
  function ServerConfig$WebAuditLogWrapper$$serializer() {
    this.descriptor_bkc4sz$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.WebAuditLogWrapper', this);
    this.descriptor.addElement_ivxn3r$('users', false);
    this.descriptor.addElement_ivxn3r$('entries', false);
    ServerConfig$WebAuditLogWrapper$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$WebAuditLogWrapper$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_bkc4sz$_0;
    }
  });
  ServerConfig$WebAuditLogWrapper$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeSerializableElement_blecud$(this.descriptor, 0, new ArrayListSerializer(ServerConfig$SelfMember$$serializer_getInstance()), obj.users);
    output.encodeSerializableElement_blecud$(this.descriptor, 1, new ArrayListSerializer(ServerConfig$WebAuditLogEntry$$serializer_getInstance()), obj.entries);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$WebAuditLogWrapper$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = (bitMask0 & 1) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 0, new ArrayListSerializer(ServerConfig$SelfMember$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 0, new ArrayListSerializer(ServerConfig$SelfMember$$serializer_getInstance()), local0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = (bitMask0 & 2) === 0 ? input.decodeSerializableElement_s44l7r$(this.descriptor, 1, new ArrayListSerializer(ServerConfig$WebAuditLogEntry$$serializer_getInstance())) : input.updateSerializableElement_ehubvl$(this.descriptor, 1, new ArrayListSerializer(ServerConfig$WebAuditLogEntry$$serializer_getInstance()), local1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$WebAuditLogWrapper_init(bitMask0, local0, local1, null);
  };
  ServerConfig$WebAuditLogWrapper$$serializer.prototype.childSerializers = function () {
    return [new ArrayListSerializer(ServerConfig$SelfMember$$serializer_getInstance()), new ArrayListSerializer(ServerConfig$WebAuditLogEntry$$serializer_getInstance())];
  };
  ServerConfig$WebAuditLogWrapper$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$WebAuditLogWrapper$$serializer_instance = null;
  function ServerConfig$WebAuditLogWrapper$$serializer_getInstance() {
    if (ServerConfig$WebAuditLogWrapper$$serializer_instance === null) {
      new ServerConfig$WebAuditLogWrapper$$serializer();
    }
    return ServerConfig$WebAuditLogWrapper$$serializer_instance;
  }
  function ServerConfig$ServerConfig$WebAuditLogWrapper_init(seen1, users, entries, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$WebAuditLogWrapper.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('users');
    else
      $this.users = users;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('entries');
    else
      $this.entries = entries;
    return $this;
  }
  ServerConfig$WebAuditLogWrapper.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WebAuditLogWrapper',
    interfaces: []
  };
  function ServerConfig$WebAuditLogEntry(id, executedAt, type) {
    ServerConfig$WebAuditLogEntry$Companion_getInstance();
    this.id = id;
    this.executedAt = executedAt;
    this.type = type;
  }
  function ServerConfig$WebAuditLogEntry$Companion() {
    ServerConfig$WebAuditLogEntry$Companion_instance = this;
  }
  ServerConfig$WebAuditLogEntry$Companion.prototype.serializer = function () {
    return ServerConfig$WebAuditLogEntry$$serializer_getInstance();
  };
  ServerConfig$WebAuditLogEntry$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ServerConfig$WebAuditLogEntry$Companion_instance = null;
  function ServerConfig$WebAuditLogEntry$Companion_getInstance() {
    if (ServerConfig$WebAuditLogEntry$Companion_instance === null) {
      new ServerConfig$WebAuditLogEntry$Companion();
    }
    return ServerConfig$WebAuditLogEntry$Companion_instance;
  }
  function ServerConfig$WebAuditLogEntry$$serializer() {
    this.descriptor_em66ks$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.dashboard.ServerConfig.WebAuditLogEntry', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('executedAt', false);
    this.descriptor.addElement_ivxn3r$('type', false);
    ServerConfig$WebAuditLogEntry$$serializer_instance = this;
  }
  Object.defineProperty(ServerConfig$WebAuditLogEntry$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_em66ks$_0;
    }
  });
  ServerConfig$WebAuditLogEntry$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeLongElement_a3zgoj$(this.descriptor, 0, obj.id);
    output.encodeLongElement_a3zgoj$(this.descriptor, 1, obj.executedAt);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.type);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ServerConfig$WebAuditLogEntry$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeLongElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeLongElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ServerConfig$ServerConfig$WebAuditLogEntry_init(bitMask0, local0, local1, local2, null);
  };
  ServerConfig$WebAuditLogEntry$$serializer.prototype.childSerializers = function () {
    return [internal.LongSerializer, internal.LongSerializer, internal.StringSerializer];
  };
  ServerConfig$WebAuditLogEntry$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ServerConfig$WebAuditLogEntry$$serializer_instance = null;
  function ServerConfig$WebAuditLogEntry$$serializer_getInstance() {
    if (ServerConfig$WebAuditLogEntry$$serializer_instance === null) {
      new ServerConfig$WebAuditLogEntry$$serializer();
    }
    return ServerConfig$WebAuditLogEntry$$serializer_instance;
  }
  function ServerConfig$ServerConfig$WebAuditLogEntry_init(seen1, id, executedAt, type, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ServerConfig$WebAuditLogEntry.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('executedAt');
    else
      $this.executedAt = executedAt;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('type');
    else
      $this.type = type;
    return $this;
  }
  ServerConfig$WebAuditLogEntry.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WebAuditLogEntry',
    interfaces: []
  };
  ServerConfig.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ServerConfig',
    interfaces: []
  };
  var ServerConfig_instance = null;
  function ServerConfig_getInstance() {
    if (ServerConfig_instance === null) {
      new ServerConfig();
    }
    return ServerConfig_instance;
  }
  function Stuff() {
    Stuff_instance = this;
  }
  function Stuff$showPremiumFeatureModal$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('Voc\xEA encontrou uma fun\xE7\xE3o premium!');
    return Unit;
  }
  function Stuff$showPremiumFeatureModal$lambda$lambda$lambda($receiver) {
    $receiver.width = '250';
    return Unit;
  }
  function Stuff$showPremiumFeatureModal$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Voc\xEA encontrou uma fun\xE7\xE3o premium minha! Legal, n\xE9?');
    return Unit;
  }
  function Stuff$showPremiumFeatureModal$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Para ter esta fun\xE7\xE3o e muito mais, veja a minha lista de vantagens que voc\xEA pode ganhar doando!');
    return Unit;
  }
  function Stuff$showPremiumFeatureModal$lambda$lambda_0($receiver) {
    set_style($receiver, 'text-align: center;');
    img($receiver, void 0, 'https://i.imgur.com/wEUDTZG.png', void 0, Stuff$showPremiumFeatureModal$lambda$lambda$lambda);
    p($receiver, void 0, Stuff$showPremiumFeatureModal$lambda$lambda$lambda_0);
    p($receiver, void 0, Stuff$showPremiumFeatureModal$lambda$lambda$lambda_1);
    return Unit;
  }
  function Stuff$showPremiumFeatureModal$lambda($receiver) {
    div($receiver, 'category-name', Stuff$showPremiumFeatureModal$lambda$lambda);
    div($receiver, void 0, Stuff$showPremiumFeatureModal$lambda$lambda_0);
    return Unit;
  }
  function Stuff$showPremiumFeatureModal$lambda_0() {
    window.location.href = get_loriUrl_0() + 'donate';
    return Unit;
  }
  function Stuff$showPremiumFeatureModal$lambda_1(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  Stuff.prototype.showPremiumFeatureModal = function () {
    var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
    modal.setContent(div_0(get_create(document), void 0, Stuff$showPremiumFeatureModal$lambda));
    modal.addFooterBtn('<i class="fas fa-gift"><\/i> Vamos l\xE1!', 'button-discord button-discord-info pure-button button-discord-modal', Stuff$showPremiumFeatureModal$lambda_0);
    modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', Stuff$showPremiumFeatureModal$lambda_1(modal));
    modal.open();
  };
  Stuff.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Stuff',
    interfaces: []
  };
  var Stuff_instance = null;
  function Stuff_getInstance() {
    if (Stuff_instance === null) {
      new Stuff();
    }
    return Stuff_instance;
  }
  function Comparator$ObjectLiteral_4(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_4.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_4.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareBy$lambda_2 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function Comparator$ObjectLiteral_5(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_5.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_5.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareBy$lambda_3 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function DonateView() {
    DonateView_instance = this;
  }
  function DonateView$start$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda($receiver, column) {
    if (column >= 0.99) {
      i($receiver, 'fas fa-check', DonateView$start$lambda$lambda$lambda);
    }
     else {
      $receiver.unaryPlus_pdl1vz$('S\xF3 se voc\xEA incentiva as outras pessoas a usarem a Lori');
    }
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda_0($receiver, column) {
    if (column >= 9.99) {
      i($receiver, 'fas fa-check', DonateView$start$lambda$lambda$lambda_0);
    }
     else {
      $receiver.unaryPlus_pdl1vz$('Apenas leitura');
    }
    return Unit;
  }
  function DonateView$start$lambda$lambda_1($receiver, column) {
    if (column >= 19.99) {
      $receiver.unaryPlus_pdl1vz$('3');
    }
     else {
      $receiver.unaryPlus_pdl1vz$('1');
    }
    return Unit;
  }
  function DonateView$start$lambda$lambda_2($receiver, column) {
    if (column >= 149.99)
      $receiver.unaryPlus_pdl1vz$('17130');
    else if (column >= 139.99)
      $receiver.unaryPlus_pdl1vz$('13710');
    else if (column >= 119.99)
      $receiver.unaryPlus_pdl1vz$('10975');
    else if (column >= 99.99)
      $receiver.unaryPlus_pdl1vz$('8780');
    else if (column >= 79.99)
      $receiver.unaryPlus_pdl1vz$('7030');
    else if (column >= 59.99)
      $receiver.unaryPlus_pdl1vz$('5625');
    else if (column >= 39.99)
      $receiver.unaryPlus_pdl1vz$('4500');
    else
      $receiver.unaryPlus_pdl1vz$('3600');
    return Unit;
  }
  function DonateView$start$lambda$lambda_3($receiver, column) {
    if (column >= 149.99)
      $receiver.unaryPlus_pdl1vz$('20.0%');
    else if (column >= 139.99)
      $receiver.unaryPlus_pdl1vz$('17.5%');
    else if (column >= 119.99)
      $receiver.unaryPlus_pdl1vz$('15.0%');
    else if (column >= 99.99)
      $receiver.unaryPlus_pdl1vz$('12.5%');
    else if (column >= 79.99)
      $receiver.unaryPlus_pdl1vz$('10.0%');
    else if (column >= 59.99)
      $receiver.unaryPlus_pdl1vz$('7.5%');
    else if (column >= 39.99)
      $receiver.unaryPlus_pdl1vz$('5.0%');
    else
      $receiver.unaryPlus_pdl1vz$('2.5%');
    return Unit;
  }
  function DonateView$start$lambda$lambda_4($receiver, column) {
    if (column >= 159.99)
      $receiver.unaryPlus_pdl1vz$('2.50x');
    else if (column >= 139.99)
      $receiver.unaryPlus_pdl1vz$('2.25x');
    else if (column >= 119.99)
      $receiver.unaryPlus_pdl1vz$('2.0x');
    else if (column >= 99.99)
      $receiver.unaryPlus_pdl1vz$('1.75x');
    else if (column >= 79.99)
      $receiver.unaryPlus_pdl1vz$('1.5x');
    else if (column >= 59.99)
      $receiver.unaryPlus_pdl1vz$('1.25x');
    else if (column >= 39.99)
      $receiver.unaryPlus_pdl1vz$('1.1x');
    else
      $receiver.unaryPlus_pdl1vz$('1.0x');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda_5($receiver, column) {
    if (column >= 179.99)
      $receiver.unaryPlus_pdl1vz$('x2.0');
    else if (column >= 139.99)
      $receiver.unaryPlus_pdl1vz$('x1.75');
    else if (column >= 99.99)
      $receiver.unaryPlus_pdl1vz$('x1.5');
    else if (column >= 59.99)
      $receiver.unaryPlus_pdl1vz$('x1.25');
    else
      i($receiver, 'fas fa-times', DonateView$start$lambda$lambda$lambda_1);
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$('');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_0(it) {
    return it.minimumDonation;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_1(it) {
    return it === 19.99 || it === 39.99 || it === 119.99;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_2(it) {
    return it;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda(closure$it) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      tmp$ = closure$it;
      if (tmp$ === 19.99)
        tmp$_0 = 'Essenciais';
      else if (tmp$ === 39.99)
        tmp$_0 = 'Recomendado';
      else if (tmp$ === 119.99)
        tmp$_0 = 'O c\xE9u \xE9 o limite!';
      else
        tmp$_0 = '???';
      var titlePrefix = tmp$_0;
      if (closure$it === 39.99) {
        set_style($receiver, 'background-color: #83ff836b; font-size: 1.3em;');
      }
      $receiver.unaryPlus_pdl1vz$(titlePrefix + ' (R' + '$' + replace(closure$it.toString(), '.', ',') + ')');
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_2(closure$rewards, closure$rewardColumn) {
    return function ($receiver) {
      th($receiver, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda);
      var $receiver_0 = toList(sortedWith_0(filter(distinct_0(map(asSequence(closure$rewards), DonateView$start$lambda$lambda$lambda$lambda_0)), DonateView$start$lambda$lambda$lambda$lambda_1), new Comparator$ObjectLiteral_4(compareBy$lambda_2(DonateView$start$lambda$lambda$lambda$lambda_2))));
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var closure$rewardColumn_0 = closure$rewardColumn;
        th($receiver, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda$lambda(element));
        closure$rewardColumn_0.add_11rb$(element);
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_3(closure$reward) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var value = 'font-weight: 800;';
      $receiver_0.put_xwzc9p$('style', value);
      $receiver.unaryPlus_pdl1vz$(closure$reward.name);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_4(closure$column, closure$reward) {
    return function ($receiver) {
      if (closure$column === 39.99) {
        set_style($receiver, 'background-color: #83ff836b;');
      }
      closure$reward.callback($receiver, closure$column);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_3(closure$reward, closure$rewardColumn) {
    return function ($receiver) {
      var tmp$;
      td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_3(closure$reward));
      tmp$ = closure$rewardColumn.iterator();
      while (tmp$.hasNext()) {
        var column = tmp$.next();
        td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_4(column, closure$reward));
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_5($receiver) {
    $receiver.unaryPlus_pdl1vz$('');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    i($receiver, 'fas fa-gift', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda$lambda);
    $receiver.unaryPlus_pdl1vz$(' Comprar Plano');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    div($receiver, 'button-discord button-discord-info pure-button', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    set_id($receiver, 'donate-button-plan1');
    i($receiver, 'fas fa-gift', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_0);
    $receiver.unaryPlus_pdl1vz$(' Comprar Plano');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_6(closure$needsToLogin, closure$url) {
    return function ($receiver) {
      if (closure$needsToLogin) {
        a($receiver, closure$url, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda$lambda_0);
      }
       else {
        div($receiver, 'button-discord button-discord-info pure-button', DonateView$start$lambda$lambda$lambda$lambda$lambda_1);
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    set_style($receiver, 'font-size: 1.2em;');
    i($receiver, 'fas fa-gift', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0);
    $receiver.unaryPlus_pdl1vz$(' Comprar Plano');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    div($receiver, 'button-discord button-discord-info pure-button', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_1);
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_2($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_3($receiver) {
    set_id($receiver, 'donate-button-plan2');
    set_style($receiver, 'font-size: 1.2em;');
    i($receiver, 'fas fa-gift', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_2);
    $receiver.unaryPlus_pdl1vz$(' Comprar Plano');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_7(closure$needsToLogin, closure$url) {
    return function ($receiver) {
      if (closure$needsToLogin) {
        set_style($receiver, 'background-color: #83ff836b;');
        a($receiver, closure$url, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda$lambda_2);
      }
       else {
        set_style($receiver, 'background-color: #83ff836b;');
        div($receiver, 'button-discord button-discord-info pure-button', DonateView$start$lambda$lambda$lambda$lambda$lambda_3);
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_3($receiver) {
    i($receiver, 'fas fa-gift', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1);
    $receiver.unaryPlus_pdl1vz$(' Comprar Plano');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_4($receiver) {
    div($receiver, 'button-discord button-discord-info pure-button', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_3);
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_4($receiver) {
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_5($receiver) {
    set_id($receiver, 'donate-button-plan3');
    i($receiver, 'fas fa-gift', DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_4);
    $receiver.unaryPlus_pdl1vz$(' Comprar Plano');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_8(closure$needsToLogin, closure$url) {
    return function ($receiver) {
      if (closure$needsToLogin) {
        a($receiver, closure$url, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda$lambda_4);
      }
       else {
        div($receiver, 'button-discord button-discord-info pure-button', DonateView$start$lambda$lambda$lambda$lambda$lambda_5);
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_4($receiver) {
    td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_5);
    var loginButton = document.getElementById('login-for-donate-url');
    var needsToLogin = loginButton != null;
    var url = loginButton != null ? loginButton.getAttribute('href') : null;
    td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_6(needsToLogin, url));
    td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_7(needsToLogin, url));
    td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_8(needsToLogin, url));
    return Unit;
  }
  function DonateView$start$lambda$lambda_6(closure$rewards) {
    return function ($receiver) {
      var tmp$;
      set_style($receiver, 'margin: 0 auto;');
      var rewardColumn = ArrayList_init();
      tr_1($receiver, void 0, DonateView$start$lambda$lambda$lambda_2(closure$rewards, rewardColumn));
      var $receiver_0 = closure$rewards;
      var destination = ArrayList_init();
      var tmp$_0;
      tmp$_0 = $receiver_0.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (!element.doNotDisplayInPlans)
          destination.add_11rb$(element);
      }
      var destination_0 = ArrayList_init();
      var tmp$_1;
      tmp$_1 = destination.iterator();
      while (tmp$_1.hasNext()) {
        var element_0 = tmp$_1.next();
        if (!equals(element_0.name, 'ignore_me'))
          destination_0.add_11rb$(element_0);
      }
      tmp$ = destination_0.iterator();
      while (tmp$.hasNext()) {
        var reward = tmp$.next();
        tr_1($receiver, void 0, DonateView$start$lambda$lambda$lambda_3(reward, rewardColumn));
      }
      tr_1($receiver, void 0, DonateView$start$lambda$lambda$lambda_4);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_9($receiver) {
    $receiver.unaryPlus_pdl1vz$('');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_10($receiver) {
    $receiver.unaryPlus_pdl1vz$('Nenhuma Doa\xE7\xE3o');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_11(it) {
    return it;
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_6(closure$it) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('R$' + replace(closure$it.toString(), '.', ',') + '+');
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_5(closure$rewards, closure$rewardColumn) {
    return function ($receiver) {
      th($receiver, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda_9);
      th($receiver, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda_10);
      var $receiver_0 = closure$rewards;
      var destination = ArrayList_init_0(collectionSizeOrDefault($receiver_0, 10));
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var item = tmp$.next();
        destination.add_11rb$(item.minimumDonation);
      }
      var $receiver_1 = sortedWith(distinct(destination), new Comparator$ObjectLiteral_5(compareBy$lambda_3(DonateView$start$lambda$lambda$lambda$lambda_11)));
      var tmp$_0;
      tmp$_0 = $receiver_1.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        var closure$rewardColumn_0 = closure$rewardColumn;
        th($receiver, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda$lambda_6(element));
        closure$rewardColumn_0.add_11rb$(element);
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_12(closure$reward) {
    return function ($receiver) {
      var $receiver_0 = $receiver.attributes;
      var value = 'font-weight: 800;';
      $receiver_0.put_xwzc9p$('style', value);
      $receiver.unaryPlus_pdl1vz$(closure$reward.name);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_13(closure$reward, closure$column) {
    return function ($receiver) {
      closure$reward.callback($receiver, closure$column);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_6(closure$reward, closure$rewardColumn) {
    return function ($receiver) {
      var tmp$;
      td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_12(closure$reward));
      tmp$ = closure$rewardColumn.iterator();
      while (tmp$.hasNext()) {
        var column = tmp$.next();
        td($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_13(closure$reward, column));
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda_7(closure$rewards) {
    return function ($receiver) {
      var tmp$;
      set_style($receiver, 'margin: 0 auto;');
      var rewardColumn = mutableListOf([0.0]);
      tr_1($receiver, void 0, DonateView$start$lambda$lambda$lambda_5(closure$rewards, rewardColumn));
      var $receiver_0 = closure$rewards;
      var destination = ArrayList_init();
      var tmp$_0;
      tmp$_0 = $receiver_0.iterator();
      while (tmp$_0.hasNext()) {
        var element = tmp$_0.next();
        if (!equals(element.name, 'ignore_me'))
          destination.add_11rb$(element);
      }
      tmp$ = destination.iterator();
      while (tmp$.hasNext()) {
        var reward = tmp$.next();
        tr_1($receiver, void 0, DonateView$start$lambda$lambda$lambda_6(reward, rewardColumn));
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda_8(this$DonateView) {
    return function (it) {
      this$DonateView.showDonateModal_14dthe$(19.99);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda_9(this$DonateView) {
    return function (it) {
      this$DonateView.showDonateModal_14dthe$(39.99);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda_10(this$DonateView) {
    return function (it) {
      this$DonateView.showDonateModal_14dthe$(119.99);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_14($receiver) {
    $receiver.unaryPlus_pdl1vz$('Suas keys atuais');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_15($receiver) {
    $receiver.unaryPlus_pdl1vz$('Parece que voc\xEA j\xE1 possui algumas keys, voc\xEA deseja renovar elas?');
    return Unit;
  }
  function DonateView$start$lambda$lambda$lambda$lambda_16(closure$key) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Key ' + closure$key.id + ' (R' + '$' + ' ' + closure$key.value + ')');
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_17(closure$key) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$('Voc\xEA pode renovar ela por apenas R' + '$' + ' ' + closure$key.value * 0.8 + '!');
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$ObjectLiteral(closure$key) {
    this.gateway = 'MERCADOPAGO';
    this.money = closure$key.value;
    this.keyId = closure$key.id;
  }
  DonateView$start$lambda$lambda$lambda$lambda$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function Coroutine$DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda(closure$o_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$o = closure$o_0;
  }
  Coroutine$DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda.prototype.constructor = Coroutine$DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda;
  Coroutine$DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = HttpRequest$Companion_getInstance().post_puj7f4$(get_loriUrl() + 'api/v1/user/donate', JSON.stringify(this.local$closure$o), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var response = this.result_0;
            var payload = JSON.parse(response.body);
            return window.location.href = typeof (tmp$ = payload['redirectUrl']) === 'string' ? tmp$ : throwCCE(), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_5(closure$o_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda(closure$o_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda$lambda_7(closure$key) {
    return function (it) {
      var o = new DonateView$start$lambda$lambda$lambda$lambda$lambda$ObjectLiteral(closure$key);
      println(JSON.stringify(o));
      launch(coroutines.GlobalScope, void 0, void 0, DonateView$start$lambda$lambda$lambda$lambda$lambda$lambda_5(o));
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda$lambda_18(closure$key) {
    return function ($receiver) {
      set_style($receiver, 'font-size: 1.25em; margin: 5px;');
      $receiver.unaryPlus_pdl1vz$('Renovar via MercadoPago');
      set_onClickFunction($receiver, DonateView$start$lambda$lambda$lambda$lambda$lambda_7(closure$key));
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_7(closure$donationKeys) {
    return function ($receiver) {
      var tmp$;
      div($receiver, 'category-name', DonateView$start$lambda$lambda$lambda$lambda_14);
      p($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_15);
      tmp$ = closure$donationKeys.iterator();
      while (tmp$.hasNext()) {
        var key = tmp$.next();
        h2_0($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_16(key));
        h3($receiver, void 0, DonateView$start$lambda$lambda$lambda$lambda_17(key));
        div($receiver, 'button-discord button-discord-info pure-button', DonateView$start$lambda$lambda$lambda$lambda_18(key));
      }
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_8(closure$modal, this$DonateView) {
    return function () {
      closure$modal.close();
      this$DonateView.showDonateModal_14dthe$(19.99);
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda$lambda_9(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  function DonateView$start$lambda$lambda_11(this$DonateView) {
    return function (it) {
      var tmp$;
      var donationKeysJson = ensureNotNull((tmp$ = document.getElementById('donation-keys-json')) != null ? tmp$.innerHTML : null);
      var $receiver = JSON_0.Companion.nonstrict;
      var donationKeys = $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(ServerConfig$DonationKey))), donationKeysJson);
      if (!donationKeys.isEmpty()) {
        var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
        modal.setContent(div_0(get_create(document), void 0, DonateView$start$lambda$lambda$lambda_7(donationKeys)));
        modal.addFooterBtn('<i class="fas fa-gift"><\/i> Eu quero comprar uma nova key', 'button-discord button-discord-info pure-button button-discord-modal', DonateView$start$lambda$lambda$lambda_8(modal, this$DonateView));
        modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', DonateView$start$lambda$lambda$lambda_9(modal));
        modal.open();
      }
       else {
        this$DonateView.showDonateModal_14dthe$(19.99);
      }
      return Unit;
    };
  }
  function DonateView$start$lambda(this$DonateView) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1, tmp$_2, tmp$_3, tmp$_4, tmp$_5, tmp$_6, tmp$_7, tmp$_8;
      var table = Kotlin.isType(tmp$ = page.getElementById_61zpoe$('donate-features'), HTMLDivElement) ? tmp$ : throwCCE();
      var plansTable = Kotlin.isType(tmp$_0 = page.getElementById_61zpoe$('plans-features'), HTMLDivElement) ? tmp$_0 : throwCCE();
      var rewards = listOf_0([new DonateView$DonationReward('Ajuda a Lori a Pagar o Aluguel', 0.99, true, DonateView$start$lambda$lambda), new DonateView$DonationReward('A Sensa\xE7\xE3o de ser Incr\xEDvel', 0.99, true), new DonateView$DonationReward('Cargo exclusivo no Servidor de Suporte', 4.99, true), new DonateView$DonationReward('Emblema exclusivo no +perfil', 4.99, true), new DonateView$DonationReward('Cargos coloridos no Servidor de Suporte', 9.99, true), new DonateView$DonationReward('Acesso exclusivo ao canal de doadores', 19.99, true, DonateView$start$lambda$lambda_0), new DonateView$DonationReward('N\xFAmero de Contadores de Membros', 19.99, false, DonateView$start$lambda$lambda_1), new DonateView$DonationReward('Badge EXCLUSIVA para os membros do seu servidor', 19.99, false), new DonateView$DonationReward('Lori ir\xE1 parar de te perturbar para doar ao usar um comando', 19.99, false), new DonateView$DonationReward('Tempo reduzido entre comandos', 39.99, false), new DonateView$DonationReward('N\xE3o pagar taxas no +pay', 39.99, false), new DonateView$DonationReward('Pode enviar convites no canal de divulga\xE7\xE3o no servidor de suporte da Lori', 39.99, true), new DonateView$DonationReward('Limite m\xE1ximo de sonhos no +daily', 39.99, false, DonateView$start$lambda$lambda_2), new DonateView$DonationReward('Chance da Lori te dar uma reputa\xE7\xE3o', 39.99, false, DonateView$start$lambda$lambda_3), new DonateView$DonationReward('Multiplicador de XP Global', 119.99, false, DonateView$start$lambda$lambda_4), new DonateView$DonationReward('Uma vers\xE3o premium minha! ...ela n\xE3o faz NADA, s\xF3 serve para voc\xEA ostentar!', 59.99, true), new DonateView$DonationReward('Mais outro cargo exclusivo no servidor de suporte', 59.99, true), new DonateView$DonationReward('Lori ir\xE1 parar de perturbar os membros do seu servidor com pedidos de doa\xE7\xE3o', 59.99, false), new DonateView$DonationReward('Multiplicador de dailies de sonhos para membros do seu servidor', 79.99, false, DonateView$start$lambda$lambda_5), new DonateView$DonationReward('Mais outro emblema exclusivo no +perfil', 99.99, true), new DonateView$DonationReward('Mais OUTRO cargo exclusivo no servidor de suporte', 99.99, true), new DonateView$DonationReward('ignore_me', 139.99, false), new DonateView$DonationReward('ignore_me', 159.99, false), new DonateView$DonationReward('ignore_me', 179.99, false)]);
      appendBuilder(plansTable, table_1(appendHTML(StringBuilder_init(), true), void 0, DonateView$start$lambda$lambda_6(rewards)));
      appendBuilder(table, table_1(appendHTML(StringBuilder_init(), true), void 0, DonateView$start$lambda$lambda_7(rewards)));
      (tmp$_2 = (tmp$_1 = document.getElementById('donate-button-plan1')) == null || Kotlin.isType(tmp$_1, HTMLDivElement) ? tmp$_1 : throwCCE()) != null ? (tmp$_2.onclick = DonateView$start$lambda$lambda_8(this$DonateView)) : null;
      (tmp$_4 = (tmp$_3 = document.getElementById('donate-button-plan2')) == null || Kotlin.isType(tmp$_3, HTMLDivElement) ? tmp$_3 : throwCCE()) != null ? (tmp$_4.onclick = DonateView$start$lambda$lambda_9(this$DonateView)) : null;
      (tmp$_6 = (tmp$_5 = document.getElementById('donate-button-plan3')) == null || Kotlin.isType(tmp$_5, HTMLDivElement) ? tmp$_5 : throwCCE()) != null ? (tmp$_6.onclick = DonateView$start$lambda$lambda_10(this$DonateView)) : null;
      (tmp$_8 = (tmp$_7 = document.getElementById('donate-button')) == null || Kotlin.isType(tmp$_7, HTMLDivElement) ? tmp$_7 : throwCCE()) != null ? (tmp$_8.onclick = DonateView$start$lambda$lambda_11(this$DonateView)) : null;
      return Unit;
    };
  }
  DonateView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', DonateView$start$lambda(this));
  };
  function DonateView$showDonateModal$lambda$lambda($receiver) {
    $receiver.unaryPlus_pdl1vz$(get_locale().get_25kzsl$('website.donate.areYouGoingToDonate', []));
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda($receiver) {
    $receiver.src = 'https://cdn.discordapp.com/attachments/510601125221761054/535199384535826442/FreshLori.gif';
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('Obrigada por querer doar para mim! Voc\xEA n\xE3o faz ideia de como cada doa\xE7\xE3o me ajuda a sobreviver.');
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda_1($receiver) {
    $receiver.unaryPlus_pdl1vz$('Antes de doar, veja todas as recompensas que voc\xEA pode ganhar doando a quantidade que voc\xEA deseja!');
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda_2($receiver) {
    $receiver.unaryPlus_pdl1vz$('Mas ent\xE3o... Quanto voc\xEA vai querer doar?');
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda_3(closure$inputValue) {
    return function ($receiver) {
      $receiver.min = '1';
      $receiver.max = '1000';
      $receiver.value = closure$inputValue.toString();
      $receiver.step = '0.10';
      return Unit;
    };
  }
  function DonateView$showDonateModal$lambda$lambda$lambda_4($receiver) {
    $receiver.unaryPlus_pdl1vz$('N\xE3o se esque\xE7a de entrar no meu servidor de suporte caso voc\xEA tenha d\xFAvidas sobre as vantagens, formas de pagamento e, na pior das hip\xF3teses, se der algum problema. (vai se d\xE1 algum problema, n\xE9?)');
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$ObjectLiteral() {
    this.gateway = 'MERCADOPAGO';
    var tmp$;
    this.money = (Kotlin.isType(tmp$ = get_visibleModal().getElementsByClassName('how-much-money')[0], HTMLInputElement) ? tmp$ : throwCCE()).value;
  }
  DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function Coroutine$DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda(closure$o_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$o = closure$o_0;
  }
  Coroutine$DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda.prototype.constructor = Coroutine$DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda;
  Coroutine$DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$;
            this.state_0 = 2;
            this.result_0 = HttpRequest$Companion_getInstance().post_puj7f4$(get_loriUrl() + 'api/v1/user/donate', JSON.stringify(this.local$closure$o), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var response = this.result_0;
            var payload = JSON.parse(response.body);
            return window.location.href = typeof (tmp$ = payload['redirectUrl']) === 'string' ? tmp$ : throwCCE(), Unit;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda(closure$o_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda(closure$o_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  function DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda(it) {
    var o = new DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$ObjectLiteral();
    println(JSON.stringify(o));
    launch(coroutines.GlobalScope, void 0, void 0, DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda$lambda(o));
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'font-size: 1.25em; margin: 5px;');
    $receiver.unaryPlus_pdl1vz$('MercadoPago (Boleto, Cart\xE3o de Cr\xE9dito e Saldo do MercadoPago)');
    set_onClickFunction($receiver, DonateView$showDonateModal$lambda$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda_5($receiver) {
    div($receiver, 'button-discord button-discord-info pure-button', DonateView$showDonateModal$lambda$lambda$lambda$lambda);
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda$lambda_0($receiver) {
    $receiver.unaryPlus_pdl1vz$('MrPowerGamerBR#4185');
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda$lambda_6($receiver) {
    $receiver.unaryPlus_pdl1vz$('Se voc\xEA deseja doar via PayPal, contate ');
    code($receiver, void 0, DonateView$showDonateModal$lambda$lambda$lambda$lambda_0);
    $receiver.unaryPlus_pdl1vz$(' no meu servidor de suporte!');
    return Unit;
  }
  function DonateView$showDonateModal$lambda$lambda_0(closure$inputValue) {
    return function ($receiver) {
      set_style($receiver, 'text-align: center;');
      img($receiver, void 0, void 0, void 0, DonateView$showDonateModal$lambda$lambda$lambda);
      p($receiver, void 0, DonateView$showDonateModal$lambda$lambda$lambda_0);
      p($receiver, void 0, DonateView$showDonateModal$lambda$lambda$lambda_1);
      p($receiver, void 0, DonateView$showDonateModal$lambda$lambda$lambda_2);
      input_0($receiver, InputType.number, void 0, void 0, void 0, 'how-much-money', DonateView$showDonateModal$lambda$lambda$lambda_3(closure$inputValue));
      $receiver.unaryPlus_pdl1vz$(' reais');
      p($receiver, void 0, DonateView$showDonateModal$lambda$lambda$lambda_4);
      div($receiver, void 0, DonateView$showDonateModal$lambda$lambda$lambda_5);
      p($receiver, void 0, DonateView$showDonateModal$lambda$lambda$lambda_6);
      return Unit;
    };
  }
  function DonateView$showDonateModal$lambda(closure$inputValue) {
    return function ($receiver) {
      div($receiver, 'category-name', DonateView$showDonateModal$lambda$lambda);
      div($receiver, void 0, DonateView$showDonateModal$lambda$lambda_0(closure$inputValue));
      return Unit;
    };
  }
  function DonateView$showDonateModal$lambda_0(closure$modal) {
    return function () {
      closure$modal.close();
      return Unit;
    };
  }
  DonateView.prototype.showDonateModal_14dthe$ = function (inputValue) {
    var modal = new TingleModal(new TingleOptions_0(true, void 0, void 0, void 0, ['tingle-modal--overflow']));
    modal.setContent(div_0(get_create(document), void 0, DonateView$showDonateModal$lambda(inputValue)));
    modal.addFooterBtn('<i class="fas fa-times"><\/i> Fechar', 'button-discord pure-button button-discord-modal button-discord-modal-secondary-action', DonateView$showDonateModal$lambda_0(modal));
    modal.open();
  };
  function DonateView$DonationReward(name, minimumDonation, doNotDisplayInPlans, callback) {
    if (callback === void 0)
      callback = DonateView$DonateView$DonationReward_init$lambda(minimumDonation);
    this.name = name;
    this.minimumDonation = minimumDonation;
    this.doNotDisplayInPlans = doNotDisplayInPlans;
    this.callback = callback;
  }
  function DonateView$DonateView$DonationReward_init$lambda$lambda($receiver) {
    return Unit;
  }
  function DonateView$DonateView$DonationReward_init$lambda$lambda_0($receiver) {
    return Unit;
  }
  function DonateView$DonateView$DonationReward_init$lambda(closure$minimumDonation) {
    return function ($receiver, column) {
      if (column >= closure$minimumDonation) {
        i($receiver, 'fas fa-check', DonateView$DonateView$DonationReward_init$lambda$lambda);
      }
       else {
        i($receiver, 'fas fa-times', DonateView$DonateView$DonationReward_init$lambda$lambda_0);
      }
      return Unit;
    };
  }
  DonateView$DonationReward.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DonationReward',
    interfaces: []
  };
  DonateView$DonationReward.prototype.component1 = function () {
    return this.name;
  };
  DonateView$DonationReward.prototype.component2 = function () {
    return this.minimumDonation;
  };
  DonateView$DonationReward.prototype.component3 = function () {
    return this.doNotDisplayInPlans;
  };
  DonateView$DonationReward.prototype.component4 = function () {
    return this.callback;
  };
  DonateView$DonationReward.prototype.copy_ftjk80$ = function (name, minimumDonation, doNotDisplayInPlans, callback) {
    return new DonateView$DonationReward(name === void 0 ? this.name : name, minimumDonation === void 0 ? this.minimumDonation : minimumDonation, doNotDisplayInPlans === void 0 ? this.doNotDisplayInPlans : doNotDisplayInPlans, callback === void 0 ? this.callback : callback);
  };
  DonateView$DonationReward.prototype.toString = function () {
    return 'DonationReward(name=' + Kotlin.toString(this.name) + (', minimumDonation=' + Kotlin.toString(this.minimumDonation)) + (', doNotDisplayInPlans=' + Kotlin.toString(this.doNotDisplayInPlans)) + (', callback=' + Kotlin.toString(this.callback)) + ')';
  };
  DonateView$DonationReward.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.name) | 0;
    result = result * 31 + Kotlin.hashCode(this.minimumDonation) | 0;
    result = result * 31 + Kotlin.hashCode(this.doNotDisplayInPlans) | 0;
    result = result * 31 + Kotlin.hashCode(this.callback) | 0;
    return result;
  };
  DonateView$DonationReward.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.name, other.name) && Kotlin.equals(this.minimumDonation, other.minimumDonation) && Kotlin.equals(this.doNotDisplayInPlans, other.doNotDisplayInPlans) && Kotlin.equals(this.callback, other.callback)))));
  };
  DonateView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'DonateView',
    interfaces: []
  };
  var DonateView_instance = null;
  function DonateView_getInstance() {
    if (DonateView_instance === null) {
      new DonateView();
    }
    return DonateView_instance;
  }
  function Comparator$ObjectLiteral_6(closure$comparison) {
    this.closure$comparison = closure$comparison;
  }
  Comparator$ObjectLiteral_6.prototype.compare = function (a, b) {
    return this.closure$comparison(a, b);
  };
  Comparator$ObjectLiteral_6.$metadata$ = {kind: Kind_CLASS, interfaces: [Comparator]};
  var compareBy$lambda_4 = wrapFunction(function () {
    var compareValues = Kotlin.kotlin.comparisons.compareValues_s00gnj$;
    return function (closure$selector) {
      return function (a, b) {
        var selector = closure$selector;
        return compareValues(selector(a), selector(b));
      };
    };
  });
  function ProfileListView() {
    ProfileListView_instance = this;
  }
  function ProfileListView$start$lambda(this$ProfileListView) {
    return function (it) {
      var tmp$, tmp$_0;
      var premiumAsJson = ensureNotNull((tmp$ = document.getElementById('profile-list-json')) != null ? tmp$.innerHTML : null);
      var profileAsJson = ensureNotNull((tmp$_0 = document.getElementById('profile-json')) != null ? tmp$_0.innerHTML : null);
      var $receiver = JSON_0.Companion.nonstrict;
      var shipEffects = $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(ProfileListView$ProfileLayout))), premiumAsJson);
      var $receiver_0 = JSON_0.Companion.nonstrict;
      var profile = $receiver_0.parse_awif5v$(getOrDefault($receiver_0.context, getKClass(ProfileListView$Profile)), profileAsJson);
      this$ProfileListView.generateEntries_m0fu2h$(profile, shipEffects);
      return Unit;
    };
  }
  ProfileListView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ProfileListView$start$lambda(this));
  };
  function ProfileListView$generateEntries$lambda$lambda$lambda(it) {
    return it.price === -1.0 ? 9999999.0 : it.price;
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda($receiver) {
    set_style($receiver, 'width: 100%;');
    return Unit;
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$shipEffect) {
    return function ($receiver) {
      var tmp$;
      switch (closure$shipEffect.internalName) {
        case 'NostalgiaProfileCreator':
          tmp$ = 'Padr\xE3o';
          break;
        case 'DefaultProfileCreator':
          tmp$ = 'Moderno';
          break;
        case 'MSNProfileCreator':
          tmp$ = 'MSN';
          break;
        case 'OrkutProfileCreator':
          tmp$ = 'Orkut';
          break;
        case 'MonicaAtaProfileCreator':
          tmp$ = 'M\xF4nica "ata"';
          break;
        case 'CowboyProfileCreator':
          tmp$ = 'Cowboy';
          break;
        case 'LoriAtaProfileCreator':
          tmp$ = 'Loritta "ata"';
          break;
        case 'UndertaleProfileCreator':
          tmp$ = 'Undertale Battle';
          break;
        case 'PlainWhiteProfileCreator':
          tmp$ = 'Simplesmente Branco';
          break;
        case 'PlainOrangeProfileCreator':
          tmp$ = 'Simplesmente Laranja';
          break;
        case 'PlainPurpleProfileCreator':
          tmp$ = 'Simplesmente Roxo';
          break;
        case 'PlainAquaProfileCreator':
          tmp$ = 'Simplesmente Azul';
          break;
        case 'PlainGreenProfileCreator':
          tmp$ = 'Simplesmente Verde';
          break;
        case 'NextGenProfileCreator':
          tmp$ = 'Pr\xF3xima Gera\xE7\xE3o';
          break;
        case 'Halloween2019ProfileCreator':
          tmp$ = 'Evento de Halloween 2019';
          break;
        default:tmp$ = '???';
          break;
      }
      $receiver.unaryPlus_pdl1vz$(tmp$);
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$shipEffect) {
    return function ($receiver) {
      if (closure$shipEffect.price !== -1.0) {
        $receiver.unaryPlus_pdl1vz$('Pre\xE7o: ' + closure$shipEffect.price + ' sonhos');
      }
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$shipEffect) {
    return function (it) {
      it['buyItem'] = 'profile';
      it['profileType'] = closure$shipEffect.internalName;
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$profile, this$ProfileListView) {
    return function (it) {
      var tmp$;
      tmp$ = it.statusCode;
      if (200 <= tmp$ && tmp$ <= 299) {
        var tmp$_0 = this$ProfileListView;
        var tmp$_1 = closure$profile;
        var $receiver = JSON_0.Companion.nonstrict;
        var objects = it.body;
        tmp$_0.generateEntries_m0fu2h$(tmp$_1, $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(ProfileListView$ProfileLayout))), objects));
      }
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$shipEffect, closure$profile, this$ProfileListView) {
    return function (it) {
      var tmp$, tmp$_0;
      tmp$_0 = SaveUtils_getInstance();
      tmp$ = get_loriUrl_0() + 'api/v1/user/self-profile';
      tmp$_0.prepareSave_feck85$('profile_design', ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$shipEffect), void 0, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$profile, this$ProfileListView), tmp$);
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$shipEffect, closure$profile, this$ProfileListView) {
    return function ($receiver) {
      set_style($receiver, 'font-size: 1.25em; margin: 5px;');
      if (closure$shipEffect.alreadyBought || closure$shipEffect.price > closure$profile.money) {
        set_classes($receiver, plus(get_classes($receiver), 'button-discord-disabled'));
      }
       else {
        set_classes($receiver, plus(get_classes($receiver), 'button-discord-info'));
        set_onClickFunction($receiver, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda(closure$shipEffect, closure$profile, this$ProfileListView));
      }
      $receiver.unaryPlus_pdl1vz$('Comprar');
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$shipEffect) {
    return function (it) {
      it['setActiveProfileDesign'] = closure$shipEffect.internalName;
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$profile, this$ProfileListView) {
    return function (it) {
      var tmp$;
      tmp$ = it.statusCode;
      if (200 <= tmp$ && tmp$ <= 299) {
        var tmp$_0 = this$ProfileListView;
        var tmp$_1 = closure$profile;
        var $receiver = JSON_0.Companion.nonstrict;
        var objects = it.body;
        tmp$_0.generateEntries_m0fu2h$(tmp$_1, $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(ProfileListView$ProfileLayout))), objects));
      }
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$shipEffect, closure$profile, this$ProfileListView) {
    return function (it) {
      var tmp$, tmp$_0;
      tmp$_0 = SaveUtils_getInstance();
      tmp$ = get_loriUrl_0() + 'api/v1/user/self-profile';
      tmp$_0.prepareSave_feck85$('profile_design', ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$shipEffect), void 0, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$profile, this$ProfileListView), tmp$);
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$shipEffect, closure$profile, this$ProfileListView) {
    return function ($receiver) {
      if (!closure$shipEffect.alreadyBought || closure$shipEffect.activated) {
        set_classes($receiver, plus(get_classes($receiver), 'button-discord-disabled'));
      }
       else {
        set_classes($receiver, plus(get_classes($receiver), 'button-discord-info'));
        set_onClickFunction($receiver, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$shipEffect, closure$profile, this$ProfileListView));
      }
      set_style($receiver, 'font-size: 1.25em; margin: 5px;');
      $receiver.unaryPlus_pdl1vz$('Ativar');
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda(closure$shipEffect, closure$profile, this$ProfileListView) {
    return function ($receiver) {
      set_style($receiver, 'text-align: center;');
      img($receiver, void 0, get_loriUrl_0() + 'assets/img/profiles/' + closure$shipEffect.shortName + '.png', void 0, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda);
      h2_0($receiver, void 0, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_0(closure$shipEffect));
      h3($receiver, void 0, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_1(closure$shipEffect));
      if (closure$shipEffect.price !== -1.0) {
        div($receiver, 'button-discord pure-button', ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_2(closure$shipEffect, closure$profile, this$ProfileListView));
      }
      div($receiver, 'button-discord pure-button', ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda$lambda_3(closure$shipEffect, closure$profile, this$ProfileListView));
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda$lambda$lambda(closure$shipEffect, closure$profile, this$ProfileListView) {
    return function ($receiver) {
      div($receiver, void 0, ProfileListView$generateEntries$lambda$lambda$lambda$lambda$lambda(closure$shipEffect, closure$profile, this$ProfileListView));
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda$lambda(closure$shipEffects, closure$profile, this$ProfileListView) {
    return function ($receiver) {
      var $receiver_0 = sortedWith(closure$shipEffects, new Comparator$ObjectLiteral_6(compareBy$lambda_4(ProfileListView$generateEntries$lambda$lambda$lambda)));
      var tmp$;
      tmp$ = $receiver_0.iterator();
      while (tmp$.hasNext()) {
        var element = tmp$.next();
        var closure$profile_0 = closure$profile;
        var this$ProfileListView_0 = this$ProfileListView;
        println(element.internalName + ' - ' + toString(element.activated));
        div($receiver, 'pure-u-1 pure-u-md-1-3', ProfileListView$generateEntries$lambda$lambda$lambda$lambda(element, closure$profile_0, this$ProfileListView_0));
      }
      return Unit;
    };
  }
  function ProfileListView$generateEntries$lambda(closure$shipEffects, closure$profile, this$ProfileListView) {
    return function ($receiver) {
      div_0($receiver, 'pure-g vertically-centered-content', ProfileListView$generateEntries$lambda$lambda(closure$shipEffects, closure$profile, this$ProfileListView));
      return Unit;
    };
  }
  ProfileListView.prototype.generateEntries_m0fu2h$ = function (profile, shipEffects) {
    var el = page.getElementById_61zpoe$('ship-active-effects');
    clear(el);
    append(el, ProfileListView$generateEntries$lambda(shipEffects, profile, this));
  };
  function ProfileListView$Profile(id, money) {
    ProfileListView$Profile$Companion_getInstance();
    this.id = id;
    this.money = money;
  }
  function ProfileListView$Profile$Companion() {
    ProfileListView$Profile$Companion_instance = this;
  }
  ProfileListView$Profile$Companion.prototype.serializer = function () {
    return ProfileListView$Profile$$serializer_getInstance();
  };
  ProfileListView$Profile$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ProfileListView$Profile$Companion_instance = null;
  function ProfileListView$Profile$Companion_getInstance() {
    if (ProfileListView$Profile$Companion_instance === null) {
      new ProfileListView$Profile$Companion();
    }
    return ProfileListView$Profile$Companion_instance;
  }
  function ProfileListView$Profile$$serializer() {
    this.descriptor_vbpxsf$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.ProfileListView.Profile', this);
    this.descriptor.addElement_ivxn3r$('id', false);
    this.descriptor.addElement_ivxn3r$('money', false);
    ProfileListView$Profile$$serializer_instance = this;
  }
  Object.defineProperty(ProfileListView$Profile$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_vbpxsf$_0;
    }
  });
  ProfileListView$Profile$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.id);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 1, obj.money);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ProfileListView$Profile$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ProfileListView$ProfileListView$Profile_init(bitMask0, local0, local1, null);
  };
  ProfileListView$Profile$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.DoubleSerializer];
  };
  ProfileListView$Profile$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ProfileListView$Profile$$serializer_instance = null;
  function ProfileListView$Profile$$serializer_getInstance() {
    if (ProfileListView$Profile$$serializer_instance === null) {
      new ProfileListView$Profile$$serializer();
    }
    return ProfileListView$Profile$$serializer_instance;
  }
  function ProfileListView$ProfileListView$Profile_init(seen1, id, money, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ProfileListView$Profile.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('id');
    else
      $this.id = id;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('money');
    else
      $this.money = money;
    return $this;
  }
  ProfileListView$Profile.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Profile',
    interfaces: []
  };
  function ProfileListView$ProfileLayout(internalName, shortName, price, alreadyBought, activated) {
    ProfileListView$ProfileLayout$Companion_getInstance();
    this.internalName = internalName;
    this.shortName = shortName;
    this.price = price;
    this.alreadyBought = alreadyBought;
    this.activated = activated;
  }
  function ProfileListView$ProfileLayout$Companion() {
    ProfileListView$ProfileLayout$Companion_instance = this;
  }
  ProfileListView$ProfileLayout$Companion.prototype.serializer = function () {
    return ProfileListView$ProfileLayout$$serializer_getInstance();
  };
  ProfileListView$ProfileLayout$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ProfileListView$ProfileLayout$Companion_instance = null;
  function ProfileListView$ProfileLayout$Companion_getInstance() {
    if (ProfileListView$ProfileLayout$Companion_instance === null) {
      new ProfileListView$ProfileLayout$Companion();
    }
    return ProfileListView$ProfileLayout$Companion_instance;
  }
  function ProfileListView$ProfileLayout$$serializer() {
    this.descriptor_brf6xz$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.ProfileListView.ProfileLayout', this);
    this.descriptor.addElement_ivxn3r$('internalName', false);
    this.descriptor.addElement_ivxn3r$('shortName', false);
    this.descriptor.addElement_ivxn3r$('price', false);
    this.descriptor.addElement_ivxn3r$('alreadyBought', false);
    this.descriptor.addElement_ivxn3r$('activated', false);
    ProfileListView$ProfileLayout$$serializer_instance = this;
  }
  Object.defineProperty(ProfileListView$ProfileLayout$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_brf6xz$_0;
    }
  });
  ProfileListView$ProfileLayout$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.internalName);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.shortName);
    output.encodeDoubleElement_imzr5k$(this.descriptor, 2, obj.price);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 3, obj.alreadyBought);
    output.encodeBooleanElement_w1b0nl$(this.descriptor, 4, obj.activated);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ProfileListView$ProfileLayout$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeDoubleElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = input.decodeBooleanElement_3zr2iy$(this.descriptor, 4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ProfileListView$ProfileListView$ProfileLayout_init(bitMask0, local0, local1, local2, local3, local4, null);
  };
  ProfileListView$ProfileLayout$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.DoubleSerializer, internal.BooleanSerializer, internal.BooleanSerializer];
  };
  ProfileListView$ProfileLayout$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ProfileListView$ProfileLayout$$serializer_instance = null;
  function ProfileListView$ProfileLayout$$serializer_getInstance() {
    if (ProfileListView$ProfileLayout$$serializer_instance === null) {
      new ProfileListView$ProfileLayout$$serializer();
    }
    return ProfileListView$ProfileLayout$$serializer_instance;
  }
  function ProfileListView$ProfileListView$ProfileLayout_init(seen1, internalName, shortName, price, alreadyBought, activated, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ProfileListView$ProfileLayout.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('internalName');
    else
      $this.internalName = internalName;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('shortName');
    else
      $this.shortName = shortName;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('price');
    else
      $this.price = price;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('alreadyBought');
    else
      $this.alreadyBought = alreadyBought;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('activated');
    else
      $this.activated = activated;
    return $this;
  }
  ProfileListView$ProfileLayout.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ProfileLayout',
    interfaces: []
  };
  ProfileListView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ProfileListView',
    interfaces: []
  };
  var ProfileListView_instance = null;
  function ProfileListView_getInstance() {
    if (ProfileListView_instance === null) {
      new ProfileListView();
    }
    return ProfileListView_instance;
  }
  function ReputationView() {
    ReputationView_instance = this;
  }
  function Coroutine$ReputationView$recaptchaCallback$lambda(closure$userId_0, closure$json_0, $receiver_0, controller, continuation_0) {
    CoroutineImpl.call(this, continuation_0);
    this.$controller = controller;
    this.exceptionState_0 = 1;
    this.local$closure$userId = closure$userId_0;
    this.local$closure$json = closure$json_0;
  }
  Coroutine$ReputationView$recaptchaCallback$lambda.$metadata$ = {
    kind: Kotlin.Kind.CLASS,
    simpleName: null,
    interfaces: [CoroutineImpl]
  };
  Coroutine$ReputationView$recaptchaCallback$lambda.prototype = Object.create(CoroutineImpl.prototype);
  Coroutine$ReputationView$recaptchaCallback$lambda.prototype.constructor = Coroutine$ReputationView$recaptchaCallback$lambda;
  Coroutine$ReputationView$recaptchaCallback$lambda.prototype.doResume = function () {
    do
      try {
        switch (this.state_0) {
          case 0:
            var tmp$, tmp$_0;
            this.state_0 = 2;
            this.result_0 = HttpRequest$Companion_getInstance().post_puj7f4$(get_loriUrl_0() + 'api/v1/user/' + this.local$closure$userId + '/reputation', JSON.stringify(this.local$closure$json), this);
            if (this.result_0 === COROUTINE_SUSPENDED)
              return COROUTINE_SUSPENDED;
            continue;
          case 1:
            throw this.exception_0;
          case 2:
            var response = this.result_0;
            println('Received: ' + response.body);
            var payload = JSON.parse(response.body);
            if (response.statusCode === 200) {
              println('Deu certo!');
              var ts1SkillUp = new Audio(get_loriUrl_0() + 'assets/snd/ts1_skill.mp3');
              ts1SkillUp.play();
              addClass(page.getElementByClass_61zpoe$('reputation-button'), ['button-discord-disabled']);
              removeClass(page.getElementByClass_61zpoe$('reputation-button'), ['button-discord-info']);
              page.getElementByClass_61zpoe$('reputation-count').innerHTML = (typeof (tmp$ = payload['count']) === 'number' ? tmp$ : throwCCE()).toString();
              return page.getElementByClass_61zpoe$('leaderboard').outerHTML = typeof (tmp$_0 = payload['rank']) === 'string' ? tmp$_0 : throwCCE(), Unit;
            }
             else {
              return println('Deu ruim!!!'), Unit;
            }

          case 3:
            return;
          default:this.state_0 = 1;
            throw new Error('State Machine Unreachable execution');
        }
      }
       catch (e) {
        if (this.state_0 === 1) {
          this.exceptionState_0 = this.state_0;
          throw e;
        }
         else {
          this.state_0 = this.exceptionState_0;
          this.exception_0 = e;
        }
      }
     while (true);
  };
  function ReputationView$recaptchaCallback$lambda(closure$userId_0, closure$json_0) {
    return function ($receiver_0, continuation_0, suspended) {
      var instance = new Coroutine$ReputationView$recaptchaCallback$lambda(closure$userId_0, closure$json_0, $receiver_0, this, continuation_0);
      if (suspended)
        return instance;
      else
        return instance.doResume(null);
    };
  }
  ReputationView.prototype.recaptchaCallback = function (userId, token) {
    var tmp$;
    println('reCAPTCHA token is: ' + token);
    var urlParams = new URLSearchParams(window.location.search);
    var guildId = urlParams.get('guild');
    var channelId = urlParams.get('channel');
    println('Guild is ' + toString(guildId));
    println('Channel is ' + toString(channelId));
    var json_0 = json([to('content', (Kotlin.isType(tmp$ = page.getElementById_61zpoe$('reputation-reason'), HTMLTextAreaElement) ? tmp$ : throwCCE()).value), to('token', token), to('guildId', guildId), to('channelId', channelId)]);
    println(json_0.toString());
    println(JSON.stringify(json_0));
    launch(coroutines.GlobalScope, void 0, void 0, ReputationView$recaptchaCallback$lambda(userId, json_0));
  };
  ReputationView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ReputationView',
    interfaces: []
  };
  var ReputationView_instance = null;
  function ReputationView_getInstance() {
    if (ReputationView_instance === null) {
      new ReputationView();
    }
    return ReputationView_instance;
  }
  function ShipEffectsView() {
    ShipEffectsView_instance = this;
  }
  function ShipEffectsView$start$lambda$lambda(this$ShipEffectsView) {
    return function (it) {
      this$ShipEffectsView.buy();
      return Unit;
    };
  }
  function ShipEffectsView$start$lambda$lambda$lambda$lambda(closure$shipEffect) {
    return function ($receiver) {
      $receiver.unaryPlus_pdl1vz$(closure$shipEffect.user1Id + ' + ' + closure$shipEffect.user2Id + (' com ' + closure$shipEffect.editedShipValue + '%'));
      return Unit;
    };
  }
  function ShipEffectsView$start$lambda$lambda$lambda(closure$shipEffect) {
    return function ($receiver) {
      div_0($receiver, void 0, ShipEffectsView$start$lambda$lambda$lambda$lambda(closure$shipEffect));
      return Unit;
    };
  }
  function ShipEffectsView$start$lambda(this$ShipEffectsView) {
    return function (it) {
      var tmp$, tmp$_0, tmp$_1;
      var premiumAsJson = ensureNotNull((tmp$ = document.getElementById('ship-effects-json')) != null ? tmp$.innerHTML : null);
      var $receiver = JSON_0.Companion.nonstrict;
      var shipEffects = $receiver.parse_awif5v$(get_list(getOrDefault($receiver.context, getKClass(ShipEffectsView$ShipEffect))), premiumAsJson);
      var profileAsJson = ensureNotNull((tmp$_0 = document.getElementById('profile-json')) != null ? tmp$_0.innerHTML : null);
      var $receiver_0 = JSON_0.Companion.nonstrict;
      var profile = $receiver_0.parse_awif5v$(getOrDefault($receiver_0.context, getKClass(ProfileListView$Profile)), profileAsJson);
      var buyButton = Kotlin.isType(tmp$_1 = page.getElementById_61zpoe$('buy-button'), HTMLButtonElement) ? tmp$_1 : throwCCE();
      if (3000 > profile.money) {
        addClass(buyButton, ['button-discord-disabled']);
      }
       else {
        addClass(buyButton, ['button-discord-success']);
      }
      if (profile.money > 3000) {
        buyButton.onclick = ShipEffectsView$start$lambda$lambda(this$ShipEffectsView);
      }
      var el = page.getElementById_61zpoe$('ship-active-effects');
      println(shipEffects.size);
      var tmp$_2;
      tmp$_2 = shipEffects.iterator();
      while (tmp$_2.hasNext()) {
        var element = tmp$_2.next();
        append(el, ShipEffectsView$start$lambda$lambda$lambda(element));
      }
      return Unit;
    };
  }
  ShipEffectsView.prototype.start = function () {
    document.addEventListener('DOMContentLoaded', ShipEffectsView$start$lambda(this));
  };
  function ShipEffectsView$prepareSave$lambda(it) {
    var tmp$, tmp$_0;
    it['buyItem'] = 'ship_effect';
    it['editedValue'] = (Kotlin.isType(tmp$ = page.getElementById_61zpoe$('newShipValue'), HTMLInputElement) ? tmp$ : throwCCE()).value;
    it['user2NamePlusDiscriminator'] = (Kotlin.isType(tmp$_0 = page.getElementById_61zpoe$('userName'), HTMLInputElement) ? tmp$_0 : throwCCE()).value;
    return Unit;
  }
  function ShipEffectsView$prepareSave$lambda_0(it) {
    var tmp$;
    tmp$ = it.statusCode;
    if (200 <= tmp$ && tmp$ <= 299) {
      window.location.href = window.location.href + '?bought';
    }
    return Unit;
  }
  ShipEffectsView.prototype.buy = function () {
    SaveUtils_getInstance().prepareSave_feck85$('ship_effect', ShipEffectsView$prepareSave$lambda, void 0, ShipEffectsView$prepareSave$lambda_0, get_loriUrl_0() + 'api/v1/user/self-profile');
  };
  function ShipEffectsView$ShipEffect(buyerId, user1Id, user2Id, editedShipValue, expiresAt) {
    ShipEffectsView$ShipEffect$Companion_getInstance();
    this.buyerId = buyerId;
    this.user1Id = user1Id;
    this.user2Id = user2Id;
    this.editedShipValue = editedShipValue;
    this.expiresAt = expiresAt;
  }
  function ShipEffectsView$ShipEffect$Companion() {
    ShipEffectsView$ShipEffect$Companion_instance = this;
  }
  ShipEffectsView$ShipEffect$Companion.prototype.serializer = function () {
    return ShipEffectsView$ShipEffect$$serializer_getInstance();
  };
  ShipEffectsView$ShipEffect$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var ShipEffectsView$ShipEffect$Companion_instance = null;
  function ShipEffectsView$ShipEffect$Companion_getInstance() {
    if (ShipEffectsView$ShipEffect$Companion_instance === null) {
      new ShipEffectsView$ShipEffect$Companion();
    }
    return ShipEffectsView$ShipEffect$Companion_instance;
  }
  function ShipEffectsView$ShipEffect$$serializer() {
    this.descriptor_uavd02$_0 = new SerialClassDescImpl('net.perfectdreams.spicymorenitta.views.ShipEffectsView.ShipEffect', this);
    this.descriptor.addElement_ivxn3r$('buyerId', false);
    this.descriptor.addElement_ivxn3r$('user1Id', false);
    this.descriptor.addElement_ivxn3r$('user2Id', false);
    this.descriptor.addElement_ivxn3r$('editedShipValue', false);
    this.descriptor.addElement_ivxn3r$('expiresAt', false);
    ShipEffectsView$ShipEffect$$serializer_instance = this;
  }
  Object.defineProperty(ShipEffectsView$ShipEffect$$serializer.prototype, 'descriptor', {
    get: function () {
      return this.descriptor_uavd02$_0;
    }
  });
  ShipEffectsView$ShipEffect$$serializer.prototype.serialize_awe97i$ = function (output_0, obj) {
    var output = output_0.beginStructure_r0sa6z$(this.descriptor, []);
    output.encodeStringElement_bgm7zs$(this.descriptor, 0, obj.buyerId);
    output.encodeStringElement_bgm7zs$(this.descriptor, 1, obj.user1Id);
    output.encodeStringElement_bgm7zs$(this.descriptor, 2, obj.user2Id);
    output.encodeIntElement_4wpqag$(this.descriptor, 3, obj.editedShipValue);
    output.encodeLongElement_a3zgoj$(this.descriptor, 4, obj.expiresAt);
    output.endStructure_qatsm0$(this.descriptor);
  };
  ShipEffectsView$ShipEffect$$serializer.prototype.deserialize_nts5qn$ = function (input_0) {
    var index, readAll = false;
    var bitMask0 = 0;
    var local0
    , local1
    , local2
    , local3
    , local4;
    var input = input_0.beginStructure_r0sa6z$(this.descriptor, []);
    loopLabel: while (true) {
      index = input.decodeElementIndex_qatsm0$(this.descriptor);
      switch (index) {
        case -2:
          readAll = true;
        case 0:
          local0 = input.decodeStringElement_3zr2iy$(this.descriptor, 0);
          bitMask0 |= 1;
          if (!readAll)
            break;
        case 1:
          local1 = input.decodeStringElement_3zr2iy$(this.descriptor, 1);
          bitMask0 |= 2;
          if (!readAll)
            break;
        case 2:
          local2 = input.decodeStringElement_3zr2iy$(this.descriptor, 2);
          bitMask0 |= 4;
          if (!readAll)
            break;
        case 3:
          local3 = input.decodeIntElement_3zr2iy$(this.descriptor, 3);
          bitMask0 |= 8;
          if (!readAll)
            break;
        case 4:
          local4 = input.decodeLongElement_3zr2iy$(this.descriptor, 4);
          bitMask0 |= 16;
          if (!readAll)
            break;
        case -1:
          break loopLabel;
        default:throw new UnknownFieldException(index);
      }
    }
    input.endStructure_qatsm0$(this.descriptor);
    return ShipEffectsView$ShipEffectsView$ShipEffect_init(bitMask0, local0, local1, local2, local3, local4, null);
  };
  ShipEffectsView$ShipEffect$$serializer.prototype.childSerializers = function () {
    return [internal.StringSerializer, internal.StringSerializer, internal.StringSerializer, internal.IntSerializer, internal.LongSerializer];
  };
  ShipEffectsView$ShipEffect$$serializer.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: '$serializer',
    interfaces: [GeneratedSerializer]
  };
  var ShipEffectsView$ShipEffect$$serializer_instance = null;
  function ShipEffectsView$ShipEffect$$serializer_getInstance() {
    if (ShipEffectsView$ShipEffect$$serializer_instance === null) {
      new ShipEffectsView$ShipEffect$$serializer();
    }
    return ShipEffectsView$ShipEffect$$serializer_instance;
  }
  function ShipEffectsView$ShipEffectsView$ShipEffect_init(seen1, buyerId, user1Id, user2Id, editedShipValue, expiresAt, serializationConstructorMarker) {
    var $this = serializationConstructorMarker || Object.create(ShipEffectsView$ShipEffect.prototype);
    if ((seen1 & 1) === 0)
      throw new MissingFieldException('buyerId');
    else
      $this.buyerId = buyerId;
    if ((seen1 & 2) === 0)
      throw new MissingFieldException('user1Id');
    else
      $this.user1Id = user1Id;
    if ((seen1 & 4) === 0)
      throw new MissingFieldException('user2Id');
    else
      $this.user2Id = user2Id;
    if ((seen1 & 8) === 0)
      throw new MissingFieldException('editedShipValue');
    else
      $this.editedShipValue = editedShipValue;
    if ((seen1 & 16) === 0)
      throw new MissingFieldException('expiresAt');
    else
      $this.expiresAt = expiresAt;
    return $this;
  }
  ShipEffectsView$ShipEffect.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ShipEffect',
    interfaces: []
  };
  ShipEffectsView.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'ShipEffectsView',
    interfaces: []
  };
  var ShipEffectsView_instance = null;
  function ShipEffectsView_getInstance() {
    if (ShipEffectsView_instance === null) {
      new ShipEffectsView();
    }
    return ShipEffectsView_instance;
  }
  function WebsiteThemeUtils() {
    WebsiteThemeUtils_instance = this;
  }
  function WebsiteThemeUtils$changeWebsiteThemeTo$lambda(closure$newTheme) {
    return function () {
      var tmp$;
      var body = ensureNotNull(document.body);
      var tmp$_0;
      var themeChangerButton = (tmp$_0 = document.querySelector('#theme-changer-button')) == null || Kotlin.isType(tmp$_0, Any) ? tmp$_0 : throwCCE();
      var $receiver = WebsiteThemeUtils$WebsiteTheme$values();
      var tmp$_1;
      for (tmp$_1 = 0; tmp$_1 !== $receiver.length; ++tmp$_1) {
        var element = $receiver[tmp$_1];
        removeClass(body, [element.bodyClass]);
      }
      addClass(body, [closure$newTheme.bodyClass]);
      CookiesUtils_getInstance().createCookie_puj7f4$('userTheme', closure$newTheme.name);
      var tmp$_2;
      if (themeChangerButton != null) {
        var tmp$_3;
        tmp$_2 = (tmp$_3 = themeChangerButton.querySelector('i')) == null || Kotlin.isType(tmp$_3, Any) ? tmp$_3 : throwCCE();
      }
       else
        tmp$_2 = null;
      (tmp$ = tmp$_2) != null ? (tmp$.setAttribute('class', closure$newTheme.icon), Unit) : null;
      if (closure$newTheme === WebsiteThemeUtils$WebsiteTheme$DARK_THEME_getInstance())
        CookiesUtils_getInstance().createCookie_puj7f4$('darkTheme', 'true');
      else
        CookiesUtils_getInstance().eraseCookie_61zpoe$('darkTheme');
      return Unit;
    };
  }
  function WebsiteThemeUtils$changeWebsiteThemeTo$lambda_0(closure$callback) {
    return function (it) {
      closure$callback();
      return Unit;
    };
  }
  WebsiteThemeUtils.prototype.changeWebsiteThemeTo_4heyup$ = function (newTheme, afterPageLoad) {
    var callback = WebsiteThemeUtils$changeWebsiteThemeTo$lambda(newTheme);
    if (afterPageLoad)
      onDOMReady(document, WebsiteThemeUtils$changeWebsiteThemeTo$lambda_0(callback));
    else
      callback();
  };
  function WebsiteThemeUtils$WebsiteTheme(name, ordinal, bodyClass, icon) {
    Enum.call(this);
    this.bodyClass = bodyClass;
    this.icon = icon;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function WebsiteThemeUtils$WebsiteTheme_initFields() {
    WebsiteThemeUtils$WebsiteTheme_initFields = function () {
    };
    WebsiteThemeUtils$WebsiteTheme$DEFAULT_instance = new WebsiteThemeUtils$WebsiteTheme('DEFAULT', 0, 'light', 'fas fa-moon');
    WebsiteThemeUtils$WebsiteTheme$DARK_THEME_instance = new WebsiteThemeUtils$WebsiteTheme('DARK_THEME', 1, 'dark', 'fas fa-sun');
  }
  var WebsiteThemeUtils$WebsiteTheme$DEFAULT_instance;
  function WebsiteThemeUtils$WebsiteTheme$DEFAULT_getInstance() {
    WebsiteThemeUtils$WebsiteTheme_initFields();
    return WebsiteThemeUtils$WebsiteTheme$DEFAULT_instance;
  }
  var WebsiteThemeUtils$WebsiteTheme$DARK_THEME_instance;
  function WebsiteThemeUtils$WebsiteTheme$DARK_THEME_getInstance() {
    WebsiteThemeUtils$WebsiteTheme_initFields();
    return WebsiteThemeUtils$WebsiteTheme$DARK_THEME_instance;
  }
  WebsiteThemeUtils$WebsiteTheme.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WebsiteTheme',
    interfaces: [Enum]
  };
  function WebsiteThemeUtils$WebsiteTheme$values() {
    return [WebsiteThemeUtils$WebsiteTheme$DEFAULT_getInstance(), WebsiteThemeUtils$WebsiteTheme$DARK_THEME_getInstance()];
  }
  WebsiteThemeUtils$WebsiteTheme.values = WebsiteThemeUtils$WebsiteTheme$values;
  function WebsiteThemeUtils$WebsiteTheme$valueOf(name) {
    switch (name) {
      case 'DEFAULT':
        return WebsiteThemeUtils$WebsiteTheme$DEFAULT_getInstance();
      case 'DARK_THEME':
        return WebsiteThemeUtils$WebsiteTheme$DARK_THEME_getInstance();
      default:throwISE('No enum constant net.perfectdreams.spicymorenitta.WebsiteThemeUtils.WebsiteTheme.' + name);
    }
  }
  WebsiteThemeUtils$WebsiteTheme.valueOf_61zpoe$ = WebsiteThemeUtils$WebsiteTheme$valueOf;
  WebsiteThemeUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'WebsiteThemeUtils',
    interfaces: []
  };
  var WebsiteThemeUtils_instance = null;
  function WebsiteThemeUtils_getInstance() {
    if (WebsiteThemeUtils_instance === null) {
      new WebsiteThemeUtils();
    }
    return WebsiteThemeUtils_instance;
  }
  function PingCommand() {
    WebSocketCommand.call(this, 'ping');
  }
  PingCommand.prototype.process_z9o90e$ = function (socket, json) {
    this.info_yhszz7$(['Ping request received successfully!']);
  };
  PingCommand.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PingCommand',
    interfaces: [WebSocketCommand]
  };
  function WebSocketCommand(name) {
    this.name = name;
  }
  WebSocketCommand.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WebSocketCommand',
    interfaces: [Logging]
  };
  function SaveStuff() {
    SaveStuff_instance = this;
  }
  function SaveStuff$prepareSave$lambda(closure$config) {
    return function (index, _elem) {
      var elem = jQuery(_elem);
      println(elem.attr('type') + ' - ' + elem.attr('id') + ' - ' + toString(elem.val()));
      var type = elem.attr('type');
      switch (type) {
        case 'checkbox':
          closure$config[elem.attr('data-internal-name')] = elem.is(':checked');
          break;
        case 'number':
          closure$config[elem.attr('data-internal-name')] = toDoubleOrNull(elem.val().toString());
          break;
        default:closure$config[elem.attr('data-internal-name')] = elem.val();
          break;
      }
      return Unit;
    };
  }
  function SaveStuff$prepareSave$ObjectLiteral() {
  }
  SaveStuff$prepareSave$ObjectLiteral.$metadata$ = {
    kind: Kind_CLASS,
    interfaces: []
  };
  function SaveStuff$prepareSave$lambda_0() {
    println('Done!');
    LoriDashboard_getInstance().hideLoadingBar();
    LoriDashboard_getInstance().configSavedSfx.play();
    return Unit;
  }
  function SaveStuff$prepareSave$lambda_1() {
    println('Error!');
    LoriDashboard_getInstance().hideLoadingBar();
    LoriDashboard_getInstance().configErrorSfx.play();
    return Unit;
  }
  SaveStuff.prototype.prepareSave = function (type, extras, showSaveScreen, endpoint) {
    if (extras === void 0)
      extras = null;
    if (showSaveScreen === void 0)
      showSaveScreen = true;
    if (endpoint === void 0)
      endpoint = get_loriUrl() + 'api/v1/guild/' + guildId + '/config/';
    println('Preparing saving stuff...');
    var json_0 = json([]);
    var config = json([]);
    var toBeSaved = jq('[data-internal-name]');
    json_0['type'] = type;
    toBeSaved.each(SaveStuff$prepareSave$lambda(config));
    if (extras != null)
      extras(config);
    json_0['config'] = config;
    if (showSaveScreen)
      LoriDashboard_getInstance().showLoadingBar_pdl1vj$(get_locale().get_25kzsl$('loritta.saving', []) + '...');
    println('Sending save stuff... kthxbye!');
    println('Sending: ' + JSON.stringify(json_0));
    var dynamic = new SaveStuff$prepareSave$ObjectLiteral();
    dynamic.url = endpoint;
    dynamic.type = 'PATCH';
    dynamic.dataType = 'json';
    dynamic.data = JSON.stringify(json_0);
    dynamic.success = SaveStuff$prepareSave$lambda_0;
    dynamic.error = SaveStuff$prepareSave$lambda_1;
    jQuery.ajax(dynamic);
  };
  SaveStuff.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'SaveStuff',
    interfaces: []
  };
  var SaveStuff_instance = null;
  function SaveStuff_getInstance() {
    if (SaveStuff_instance === null) {
      new SaveStuff();
    }
    return SaveStuff_instance;
  }
  function AutoroleConfig() {
    this.isEnabled = false;
    this.roles = [];
    this.giveRolesAfter = null;
    this.rolesVoteRewards = [];
  }
  function AutoroleConfig$RoleVoteReward(voteCount, roles) {
    this.voteCount = voteCount;
    this.roles = roles;
  }
  AutoroleConfig$RoleVoteReward.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RoleVoteReward',
    interfaces: []
  };
  AutoroleConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AutoroleConfig',
    interfaces: []
  };
  function CounterThemes(name, ordinal, localizedName, emotes) {
    Enum.call(this);
    this.localizedName = localizedName;
    this.emotes = emotes;
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function CounterThemes_initFields() {
    CounterThemes_initFields = function () {
    };
    CounterThemes$DEFAULT_instance = new CounterThemes('DEFAULT', 0, 'loritta.modules.counter.theme.default', listOf_0(['<:twitter_zero:477236755519504385>', '1\u20E3', '2\u20E3', '3\u20E3', '4\u20E3', '5\u20E3', '6\u20E3', '7\u20E3', '8\u20E3', '9\u20E3']));
    CounterThemes$RED_instance = new CounterThemes('RED', 1, 'loritta.modules.counter.theme.red', listOf_0(['<:red_zero:517072286294081539>', '<:red_one:517072286293950464>', '<:red_two:517072286206001152>', '<:red_three:517072286445207610>', '<:red_four:517072286164058112>', '<:red_five:517072286184898560>', '<:red_six:517072286264721408>', '<:red_seven:517072286617174043>', '<:red_eight:517072285841096727>', '<:red_nine:517072286138761228>']));
    CounterThemes$GREEN_instance = new CounterThemes('GREEN', 2, 'loritta.modules.counter.theme.green', listOf_0(['<:green_zero:517073192708341762>', '<:green_one:517073193018720256>', '<:green_two:517073192687239190>', '<:green_three:517073193064726528>', '<:green_four:517073194088267776>', '<:green_five:517073192892891153>', '<:green_six:517073192976908338>', '<:green_seven:517073192964325377>', '<:green_eight:517073193043886090>', '<:green_nine:517073193043886080>']));
    CounterThemes$BLURPLE_instance = new CounterThemes('BLURPLE', 3, 'loritta.modules.counter.theme.blurple', listOf_0(['<:blurple_zero:517085610436198411>', '<:blurple_one:517085610792583169>', '<:blurple_two:517085610750771200>', '<:blurple_three:517085610754703360>', '<:blurple_four:517085610687856640>', '<:blurple_five:517085610595319829>', '<:blurple_six:517085610800971797>', '<:blurple_seven:517085611061149716>', '<:blurple_eight:517085610956029964>', '<:blurple_nine:517085610691919872>']));
    CounterThemes$BLACK_instance = new CounterThemes('BLACK', 4, 'loritta.modules.counter.theme.black', listOf_0(['<:black_zero:517089812218380289>', '<:black_one:517089812172374036>', '<:black_two:517089812101201930>', '<:black_three:517089812264517642>', '<:black_four:517089812012859393>', '<:black_five:517089811690029064>', '<:black_six:517089812163854336>', '<:black_seven:517089811996213269>', '<:black_eight:517089811908264097>', '<:black_nine:517089811916652616>']));
    CounterThemes$DELUXE_instance = new CounterThemes('DELUXE', 5, 'loritta.modules.counter.theme.deluxe', listOf_0(['<a:deluxe_zero:528323607433183242>', '<a:deluxe_one:528323712055902210>', '<a:deluxe_two:528323760881795096>', '<a:deluxe_three:528323825864015873>', '<a:deluxe_four:528323887033876491>', '<a:deluxe_five:528323921397940245>', '<a:deluxe_six:528323973428019200>', '<a:deluxe_seven:528324015291367446>', '<a:deluxe_eight:528324053732294687>', '<a:deluxe_nine:528324101518000138>']));
    CounterThemes$LORITTA_instance = new CounterThemes('LORITTA', 6, 'loritta.modules.counter.theme.loritta', listOf_0(['<:lori_zero:538508557067223041>', '<:lori_one:538507099102248983>', '<:lori_two:538507158044672001>', '<:lori_three:538507214709719061>', '<:lori_four:538507252575764490>', '<:lori_five:538507300122394634>', '<:lori_six:538507324936159254>', '<:lori_seven:538507359631310869>', '<:lori_eight:538507403658919966>', '<:lori_nine:538507458914811934>']));
    CounterThemes$LORITTA_KAWAI_instance = new CounterThemes('LORITTA_KAWAI', 7, 'loritta.modules.counter.theme.loritta-kawaii', listOf_0(['<a:kawaii_zero:542823087649849414>', '<:kawaii_one:542823112220344350>', '<a:kawaii_two:542823168465829907>', '<a:kawaii_three:542823194445348885>', '<:kawaii_four:542823233448050688>', '<a:kawaii_five:542823247826386997>', '<:kawaii_six:542823279858286592>', '<a:kawaii_seven:542823307414601734>', '<:kawaii_eight:542823334652411936>', '<:kawaii_nine:542823384917213200>']));
  }
  var CounterThemes$DEFAULT_instance;
  function CounterThemes$DEFAULT_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$DEFAULT_instance;
  }
  var CounterThemes$RED_instance;
  function CounterThemes$RED_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$RED_instance;
  }
  var CounterThemes$GREEN_instance;
  function CounterThemes$GREEN_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$GREEN_instance;
  }
  var CounterThemes$BLURPLE_instance;
  function CounterThemes$BLURPLE_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$BLURPLE_instance;
  }
  var CounterThemes$BLACK_instance;
  function CounterThemes$BLACK_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$BLACK_instance;
  }
  var CounterThemes$DELUXE_instance;
  function CounterThemes$DELUXE_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$DELUXE_instance;
  }
  var CounterThemes$LORITTA_instance;
  function CounterThemes$LORITTA_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$LORITTA_instance;
  }
  var CounterThemes$LORITTA_KAWAI_instance;
  function CounterThemes$LORITTA_KAWAI_getInstance() {
    CounterThemes_initFields();
    return CounterThemes$LORITTA_KAWAI_instance;
  }
  CounterThemes.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CounterThemes',
    interfaces: [Enum]
  };
  function CounterThemes$values() {
    return [CounterThemes$DEFAULT_getInstance(), CounterThemes$RED_getInstance(), CounterThemes$GREEN_getInstance(), CounterThemes$BLURPLE_getInstance(), CounterThemes$BLACK_getInstance(), CounterThemes$DELUXE_getInstance(), CounterThemes$LORITTA_getInstance(), CounterThemes$LORITTA_KAWAI_getInstance()];
  }
  CounterThemes.values = CounterThemes$values;
  function CounterThemes$valueOf(name) {
    switch (name) {
      case 'DEFAULT':
        return CounterThemes$DEFAULT_getInstance();
      case 'RED':
        return CounterThemes$RED_getInstance();
      case 'GREEN':
        return CounterThemes$GREEN_getInstance();
      case 'BLURPLE':
        return CounterThemes$BLURPLE_getInstance();
      case 'BLACK':
        return CounterThemes$BLACK_getInstance();
      case 'DELUXE':
        return CounterThemes$DELUXE_getInstance();
      case 'LORITTA':
        return CounterThemes$LORITTA_getInstance();
      case 'LORITTA_KAWAI':
        return CounterThemes$LORITTA_KAWAI_getInstance();
      default:throwISE('No enum constant userdata.CounterThemes.' + name);
    }
  }
  CounterThemes.valueOf_61zpoe$ = CounterThemes$valueOf;
  function CounterUtils() {
    CounterUtils_instance = this;
  }
  CounterUtils.prototype.generatePrettyCounter_829qsp$ = function (count, theme, padding) {
    if (padding === void 0)
      padding = 5;
    return this.generatePrettyCounter_9f08aj$(count, this.getEmojis_rgz899$(theme), padding);
  };
  CounterUtils.prototype.generatePrettyCounter_9f08aj$ = function (count, list, padding) {
    if (padding === void 0)
      padding = 5;
    var tmp$;
    var counter = '';
    tmp$ = iterator(count.toString());
    while (tmp$.hasNext()) {
      var char = unboxChar(tmp$.next());
      var emote = list.get_za3lpa$(toInt(String.fromCharCode(char)));
      counter += emote;
    }
    var paddingCount = padding - count.toString().length | 0;
    if (paddingCount > 0) {
      for (var i = 0; i < paddingCount; i++) {
        counter = list.get_za3lpa$(0) + counter;
      }
    }
    return counter;
  };
  CounterUtils.prototype.generatePrettyCounterHtml_829qsp$ = function (count, theme, padding) {
    return this.generatePrettyCounterHtml_9f08aj$(count, this.getEmojis_rgz899$(theme), padding);
  };
  function CounterUtils$generatePrettyCounterHtml$lambda$lambda($receiver) {
    $receiver.width = '24';
    $receiver.height = '24';
    return Unit;
  }
  function CounterUtils$generatePrettyCounterHtml$lambda$lambda_0($receiver) {
    $receiver.width = '24';
    $receiver.height = '24';
    return Unit;
  }
  function CounterUtils$generatePrettyCounterHtml$lambda(closure$padding, closure$count, closure$list) {
    return function ($receiver) {
      var tmp$, tmp$_0;
      var paddingCount = closure$padding - closure$count.toString().length | 0;
      if (paddingCount > 0) {
        for (var i = 0; i < paddingCount; i++) {
          var list0 = closure$list.get_za3lpa$(0);
          var imageSource;
          if (startsWith(list0, '<') && endsWith(list0, '>')) {
            var emoteId = dropLast(last(split(list0, [':'])), 1);
            var isAnimated = startsWith(list0, '<a:');
            imageSource = 'https://cdn.discordapp.com/emojis/' + emoteId;
            imageSource += isAnimated ? '.gif?v=1' : '.png?v=1';
          }
           else {
            imageSource = 'https://twemoji.maxcdn.com/72x72/30-20e3.png';
          }
          img($receiver, void 0, imageSource, void 0, CounterUtils$generatePrettyCounterHtml$lambda$lambda);
        }
      }
      tmp$ = iterator(closure$count.toString());
      while (tmp$.hasNext()) {
        var char = unboxChar(tmp$.next());
        var emote = closure$list.get_za3lpa$(toInt(String.fromCharCode(char)));
        var imageSource_0;
        if (startsWith(emote, '<') && endsWith(emote, '>')) {
          var emoteId_0 = dropLast(last(split(emote, [':'])), 1);
          var isAnimated_0 = startsWith(emote, '<a:');
          imageSource_0 = 'https://cdn.discordapp.com/emojis/' + emoteId_0;
          imageSource_0 += isAnimated_0 ? '.gif?v=1' : '.png?v=1';
        }
         else {
          switch (toInt(String.fromCharCode(char))) {
            case 0:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/30-20e3.png';
              break;
            case 1:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/31-20e3.png';
              break;
            case 2:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/32-20e3.png';
              break;
            case 3:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/33-20e3.png';
              break;
            case 4:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/34-20e3.png';
              break;
            case 5:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/35-20e3.png';
              break;
            case 6:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/36-20e3.png';
              break;
            case 7:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/37-20e3.png';
              break;
            case 8:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/38-20e3.png';
              break;
            case 9:
              tmp$_0 = 'https://twemoji.maxcdn.com/72x72/39-20e3.png';
              break;
            default:throw RuntimeException_init('Value is invalid!');
          }
          imageSource_0 = tmp$_0;
        }
        img($receiver, void 0, imageSource_0, void 0, CounterUtils$generatePrettyCounterHtml$lambda$lambda_0);
      }
      return Unit;
    };
  }
  CounterUtils.prototype.generatePrettyCounterHtml_9f08aj$ = function (count, list, padding) {
    return div_0(appendHTML(StringBuilder_init()), void 0, CounterUtils$generatePrettyCounterHtml$lambda(padding, count, list));
  };
  CounterUtils.prototype.getEmojis_rgz899$ = function (theme) {
    var tmp$;
    tmp$ = theme.emotes;
    if (tmp$ == null) {
      throw UnsupportedOperationException_init('Theme ' + theme.name + " doesn't have emotes!");
    }
    return tmp$;
  };
  CounterUtils.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'CounterUtils',
    interfaces: []
  };
  var CounterUtils_instance = null;
  function CounterUtils_getInstance() {
    if (CounterUtils_instance === null) {
      new CounterUtils();
    }
    return CounterUtils_instance;
  }
  function EconomyConfig() {
    this.isEnabled = false;
    this.economyName = null;
    this.economyNamePlural = null;
    this.exchangeRate = null;
  }
  EconomyConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'EconomyConfig',
    interfaces: []
  };
  function MemberCounterConfig(topic, theme, padding) {
    this.topic = topic;
    this.theme = theme;
    this.padding = padding;
  }
  MemberCounterConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'MemberCounterConfig',
    interfaces: []
  };
  function ModerationConfig() {
    this.sendPunishmentViaDm = false;
    this.sendToPunishLog = false;
    this.punishmentLogChannelId = null;
    this.punishmentLogMessage = '**Usu\xE1rio punido:** {user}#{#user}**Punido por** {@staff}\n**Motivo:** {reason}';
    this.punishmentActions = [];
    this.warnExpiresIn = null;
  }
  function ModerationConfig$WarnAction(warnCount, punishmentAction, customMetadata0) {
    this.warnCount = warnCount;
    this.punishmentAction = punishmentAction;
    this.customMetadata0 = customMetadata0;
  }
  ModerationConfig$WarnAction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WarnAction',
    interfaces: []
  };
  function ModerationConfig$Warn(reason, time, punishedBy) {
    this.reason = reason;
    this.time = time;
    this.punishedBy = punishedBy;
  }
  ModerationConfig$Warn.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Warn',
    interfaces: []
  };
  function ModerationConfig$PunishmentAction(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function ModerationConfig$PunishmentAction_initFields() {
    ModerationConfig$PunishmentAction_initFields = function () {
    };
    ModerationConfig$PunishmentAction$BAN_instance = new ModerationConfig$PunishmentAction('BAN', 0);
    ModerationConfig$PunishmentAction$SOFT_BAN_instance = new ModerationConfig$PunishmentAction('SOFT_BAN', 1);
    ModerationConfig$PunishmentAction$KICK_instance = new ModerationConfig$PunishmentAction('KICK', 2);
    ModerationConfig$PunishmentAction$MUTE_instance = new ModerationConfig$PunishmentAction('MUTE', 3);
  }
  var ModerationConfig$PunishmentAction$BAN_instance;
  function ModerationConfig$PunishmentAction$BAN_getInstance() {
    ModerationConfig$PunishmentAction_initFields();
    return ModerationConfig$PunishmentAction$BAN_instance;
  }
  var ModerationConfig$PunishmentAction$SOFT_BAN_instance;
  function ModerationConfig$PunishmentAction$SOFT_BAN_getInstance() {
    ModerationConfig$PunishmentAction_initFields();
    return ModerationConfig$PunishmentAction$SOFT_BAN_instance;
  }
  var ModerationConfig$PunishmentAction$KICK_instance;
  function ModerationConfig$PunishmentAction$KICK_getInstance() {
    ModerationConfig$PunishmentAction_initFields();
    return ModerationConfig$PunishmentAction$KICK_instance;
  }
  var ModerationConfig$PunishmentAction$MUTE_instance;
  function ModerationConfig$PunishmentAction$MUTE_getInstance() {
    ModerationConfig$PunishmentAction_initFields();
    return ModerationConfig$PunishmentAction$MUTE_instance;
  }
  ModerationConfig$PunishmentAction.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'PunishmentAction',
    interfaces: [Enum]
  };
  function ModerationConfig$PunishmentAction$values() {
    return [ModerationConfig$PunishmentAction$BAN_getInstance(), ModerationConfig$PunishmentAction$SOFT_BAN_getInstance(), ModerationConfig$PunishmentAction$KICK_getInstance(), ModerationConfig$PunishmentAction$MUTE_getInstance()];
  }
  ModerationConfig$PunishmentAction.values = ModerationConfig$PunishmentAction$values;
  function ModerationConfig$PunishmentAction$valueOf(name) {
    switch (name) {
      case 'BAN':
        return ModerationConfig$PunishmentAction$BAN_getInstance();
      case 'SOFT_BAN':
        return ModerationConfig$PunishmentAction$SOFT_BAN_getInstance();
      case 'KICK':
        return ModerationConfig$PunishmentAction$KICK_getInstance();
      case 'MUTE':
        return ModerationConfig$PunishmentAction$MUTE_getInstance();
      default:throwISE('No enum constant userdata.ModerationConfig.PunishmentAction.' + name);
    }
  }
  ModerationConfig$PunishmentAction.valueOf_61zpoe$ = ModerationConfig$PunishmentAction$valueOf;
  ModerationConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ModerationConfig',
    interfaces: []
  };
  function StoreItem(name, price, code, description, imageUrl) {
    this.name = name;
    this.price = price;
    this.code = code;
    this.description = description;
    this.imageUrl = imageUrl;
  }
  StoreItem.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'StoreItem',
    interfaces: []
  };
  function WelcomerConfig() {
    this.isEnabled = false;
    this.tellOnJoin = true;
    this.tellOnLeave = true;
    this.joinMessage = '\uD83D\uDC49 {@user} entrou no servidor!';
    this.leaveMessage = '\uD83D\uDC48 {nickname} saiu do servidor!';
    this.canalJoinId = null;
    this.canalLeaveId = null;
    this.tellOnPrivate = false;
    this.joinPrivateMessage = 'Obrigado por entrar na {guild} {@user}! Espero que voc\xEA curta o nosso servidor!';
    this.tellOnBan = false;
    this.banMessage = '';
    this.tellOnKick = false;
    this.kickMessage = '';
    this.deleteJoinMessagesAfter = null;
    this.deleteLeaveMessagesAfter = null;
  }
  WelcomerConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'WelcomerConfig',
    interfaces: []
  };
  function AbstractCommand(name, label, aliases, category, description, usage, detailedUsage, example, extendedExamples, requiredUserPermissions, requiredBotPermissions) {
    this.name = name;
    this.label = label;
    this.aliases = aliases;
    this.category = category;
    this.description = description;
    this.usage = usage;
    this.detailedUsage = detailedUsage;
    this.example = example;
    this.extendedExamples = extendedExamples;
    this.requiredUserPermissions = requiredUserPermissions;
    this.requiredBotPermissions = requiredBotPermissions;
  }
  AbstractCommand.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'AbstractCommand',
    interfaces: []
  };
  function CountUpOptions(useEasing, useGrouping, separator, decimal) {
    this.useEasing = useEasing;
    this.useGrouping = useGrouping;
    this.separator = separator;
    this.decimal = decimal;
  }
  CountUpOptions.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'CountUpOptions',
    interfaces: []
  };
  function Emote(id, name) {
    this.id = id;
    this.name = name;
  }
  Emote.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Emote',
    interfaces: []
  };
  function RecaptchaOptions(sitekey, callback, size) {
    this.sitekey = sitekey;
    this.callback = callback;
    this.size = size;
  }
  RecaptchaOptions.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'RecaptchaOptions',
    interfaces: []
  };
  function LegacyBaseLocale() {
    LegacyBaseLocale$Companion_getInstance();
    this.strings = emptyMap();
  }
  function LegacyBaseLocale$Companion() {
    LegacyBaseLocale$Companion_instance = this;
  }
  LegacyBaseLocale$Companion.prototype.create_qk3xy8$ = function (json) {
    var tmp$, tmp$_0;
    var map = LinkedHashMap_init();
    tmp$ = iterator_0(Object.keys(json));
    while (tmp$.hasNext()) {
      var key = tmp$.next();
      map.put_xwzc9p$(key, typeof (tmp$_0 = json[key]) === 'string' ? tmp$_0 : throwCCE());
    }
    println('Keys: ' + map.entries.size);
    var $receiver = new LegacyBaseLocale();
    $receiver.strings = map;
    return $receiver;
  };
  LegacyBaseLocale$Companion.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'Companion',
    interfaces: []
  };
  var LegacyBaseLocale$Companion_instance = null;
  function LegacyBaseLocale$Companion_getInstance() {
    if (LegacyBaseLocale$Companion_instance === null) {
      new LegacyBaseLocale$Companion();
    }
    return LegacyBaseLocale$Companion_instance;
  }
  LegacyBaseLocale.prototype.get_25kzsl$ = function (key, arguments_0) {
    var tmp$;
    tmp$ = this.strings.get_11rb$(key);
    if (tmp$ == null) {
      return key;
    }
    var string = tmp$;
    for (var index = 0; index !== arguments_0.length; ++index) {
      var arg = arguments_0[index];
      string = replace(string, '{' + index + '}', toString(arg));
    }
    return string;
  };
  LegacyBaseLocale.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LegacyBaseLocale',
    interfaces: []
  };
  function LoriColor(red, green, blue) {
    this.red = red;
    this.green = green;
    this.blue = blue;
  }
  LoriColor.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LoriColor',
    interfaces: []
  };
  LoriColor.prototype.component1 = function () {
    return this.red;
  };
  LoriColor.prototype.component2 = function () {
    return this.green;
  };
  LoriColor.prototype.component3 = function () {
    return this.blue;
  };
  LoriColor.prototype.copy_qt1dr2$ = function (red, green, blue) {
    return new LoriColor(red === void 0 ? this.red : red, green === void 0 ? this.green : green, blue === void 0 ? this.blue : blue);
  };
  LoriColor.prototype.toString = function () {
    return 'LoriColor(red=' + Kotlin.toString(this.red) + (', green=' + Kotlin.toString(this.green)) + (', blue=' + Kotlin.toString(this.blue)) + ')';
  };
  LoriColor.prototype.hashCode = function () {
    var result = 0;
    result = result * 31 + Kotlin.hashCode(this.red) | 0;
    result = result * 31 + Kotlin.hashCode(this.green) | 0;
    result = result * 31 + Kotlin.hashCode(this.blue) | 0;
    return result;
  };
  LoriColor.prototype.equals = function (other) {
    return this === other || (other !== null && (typeof other === 'object' && (Object.getPrototypeOf(this) === Object.getPrototypeOf(other) && (Kotlin.equals(this.red, other.red) && Kotlin.equals(this.green, other.green) && Kotlin.equals(this.blue, other.blue)))));
  };
  function LorittaDailyPayload(dailyPayout) {
    this.dailyPayout = dailyPayout;
  }
  LorittaDailyPayload.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LorittaDailyPayload',
    interfaces: []
  };
  function LorittaPartner() {
    LorittaPartner_instance = this;
  }
  function LorittaPartner$Keyword(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LorittaPartner$Keyword_initFields() {
    LorittaPartner$Keyword_initFields = function () {
    };
    LorittaPartner$Keyword$GAMING_instance = new LorittaPartner$Keyword('GAMING', 0);
    LorittaPartner$Keyword$ENTERTAINMENT_instance = new LorittaPartner$Keyword('ENTERTAINMENT', 1);
    LorittaPartner$Keyword$ANIME_AND_MANGA_instance = new LorittaPartner$Keyword('ANIME_AND_MANGA', 2);
    LorittaPartner$Keyword$TELEVISION_instance = new LorittaPartner$Keyword('TELEVISION', 3);
    LorittaPartner$Keyword$ROLEPLAYING_instance = new LorittaPartner$Keyword('ROLEPLAYING', 4);
    LorittaPartner$Keyword$GIVEAWAYS_instance = new LorittaPartner$Keyword('GIVEAWAYS', 5);
    LorittaPartner$Keyword$MEMES_instance = new LorittaPartner$Keyword('MEMES', 6);
    LorittaPartner$Keyword$COMMUNITY_instance = new LorittaPartner$Keyword('COMMUNITY', 7);
    LorittaPartner$Keyword$PROGRAMMING_instance = new LorittaPartner$Keyword('PROGRAMMING', 8);
    LorittaPartner$Keyword$MUSIC_instance = new LorittaPartner$Keyword('MUSIC', 9);
    LorittaPartner$Keyword$MOVIES_instance = new LorittaPartner$Keyword('MOVIES', 10);
    LorittaPartner$Keyword$YOUTUBER_instance = new LorittaPartner$Keyword('YOUTUBER', 11);
    LorittaPartner$Keyword$STREAMER_instance = new LorittaPartner$Keyword('STREAMER', 12);
    LorittaPartner$Keyword$DISCUSSION_instance = new LorittaPartner$Keyword('DISCUSSION', 13);
    LorittaPartner$Keyword$EMOTES_instance = new LorittaPartner$Keyword('EMOTES', 14);
    LorittaPartner$Keyword$NEWS_instance = new LorittaPartner$Keyword('NEWS', 15);
    LorittaPartner$Keyword$ART_instance = new LorittaPartner$Keyword('ART', 16);
    LorittaPartner$Keyword$BOTS_instance = new LorittaPartner$Keyword('BOTS', 17);
    LorittaPartner$Keyword$FASHION_AND_BEAUTY_instance = new LorittaPartner$Keyword('FASHION_AND_BEAUTY', 18);
    LorittaPartner$Keyword$SOFTWARE_instance = new LorittaPartner$Keyword('SOFTWARE', 19);
    LorittaPartner$Keyword$HARDWARE_instance = new LorittaPartner$Keyword('HARDWARE', 20);
    LorittaPartner$Keyword$AESTHETICS_instance = new LorittaPartner$Keyword('AESTHETICS', 21);
    LorittaPartner$Keyword$HOBBIES_instance = new LorittaPartner$Keyword('HOBBIES', 22);
    LorittaPartner$Keyword$CHIT_CHAT_instance = new LorittaPartner$Keyword('CHIT_CHAT', 23);
    LorittaPartner$Keyword$KPOP_AND_KOREAN_CULTURE_instance = new LorittaPartner$Keyword('KPOP_AND_KOREAN_CULTURE', 24);
    LorittaPartner$Keyword$TERROR_AND_CREEPYPASTA_instance = new LorittaPartner$Keyword('TERROR_AND_CREEPYPASTA', 25);
    LorittaPartner$Keyword$LIFE_STYLE_instance = new LorittaPartner$Keyword('LIFE_STYLE', 26);
    LorittaPartner$Keyword$BOOKS_AND_WRITING_instance = new LorittaPartner$Keyword('BOOKS_AND_WRITING', 27);
    LorittaPartner$Keyword$SPORTS_instance = new LorittaPartner$Keyword('SPORTS', 28);
    LorittaPartner$Keyword$FITNESS_AND_HEALTH_instance = new LorittaPartner$Keyword('FITNESS_AND_HEALTH', 29);
    LorittaPartner$Keyword$INTERNET_CULTURE_instance = new LorittaPartner$Keyword('INTERNET_CULTURE', 30);
    LorittaPartner$Keyword$FOOD_instance = new LorittaPartner$Keyword('FOOD', 31);
    LorittaPartner$Keyword$NATURE_AND_SCIENCE_instance = new LorittaPartner$Keyword('NATURE_AND_SCIENCE', 32);
    LorittaPartner$Keyword$CRYPTOCURRENCY_instance = new LorittaPartner$Keyword('CRYPTOCURRENCY', 33);
    LorittaPartner$Keyword$TECNOLOGY_instance = new LorittaPartner$Keyword('TECNOLOGY', 34);
    LorittaPartner$Keyword$FURRY_instance = new LorittaPartner$Keyword('FURRY', 35);
    LorittaPartner$Keyword$NSFW_instance = new LorittaPartner$Keyword('NSFW', 36);
  }
  var LorittaPartner$Keyword$GAMING_instance;
  function LorittaPartner$Keyword$GAMING_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$GAMING_instance;
  }
  var LorittaPartner$Keyword$ENTERTAINMENT_instance;
  function LorittaPartner$Keyword$ENTERTAINMENT_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$ENTERTAINMENT_instance;
  }
  var LorittaPartner$Keyword$ANIME_AND_MANGA_instance;
  function LorittaPartner$Keyword$ANIME_AND_MANGA_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$ANIME_AND_MANGA_instance;
  }
  var LorittaPartner$Keyword$TELEVISION_instance;
  function LorittaPartner$Keyword$TELEVISION_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$TELEVISION_instance;
  }
  var LorittaPartner$Keyword$ROLEPLAYING_instance;
  function LorittaPartner$Keyword$ROLEPLAYING_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$ROLEPLAYING_instance;
  }
  var LorittaPartner$Keyword$GIVEAWAYS_instance;
  function LorittaPartner$Keyword$GIVEAWAYS_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$GIVEAWAYS_instance;
  }
  var LorittaPartner$Keyword$MEMES_instance;
  function LorittaPartner$Keyword$MEMES_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$MEMES_instance;
  }
  var LorittaPartner$Keyword$COMMUNITY_instance;
  function LorittaPartner$Keyword$COMMUNITY_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$COMMUNITY_instance;
  }
  var LorittaPartner$Keyword$PROGRAMMING_instance;
  function LorittaPartner$Keyword$PROGRAMMING_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$PROGRAMMING_instance;
  }
  var LorittaPartner$Keyword$MUSIC_instance;
  function LorittaPartner$Keyword$MUSIC_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$MUSIC_instance;
  }
  var LorittaPartner$Keyword$MOVIES_instance;
  function LorittaPartner$Keyword$MOVIES_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$MOVIES_instance;
  }
  var LorittaPartner$Keyword$YOUTUBER_instance;
  function LorittaPartner$Keyword$YOUTUBER_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$YOUTUBER_instance;
  }
  var LorittaPartner$Keyword$STREAMER_instance;
  function LorittaPartner$Keyword$STREAMER_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$STREAMER_instance;
  }
  var LorittaPartner$Keyword$DISCUSSION_instance;
  function LorittaPartner$Keyword$DISCUSSION_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$DISCUSSION_instance;
  }
  var LorittaPartner$Keyword$EMOTES_instance;
  function LorittaPartner$Keyword$EMOTES_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$EMOTES_instance;
  }
  var LorittaPartner$Keyword$NEWS_instance;
  function LorittaPartner$Keyword$NEWS_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$NEWS_instance;
  }
  var LorittaPartner$Keyword$ART_instance;
  function LorittaPartner$Keyword$ART_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$ART_instance;
  }
  var LorittaPartner$Keyword$BOTS_instance;
  function LorittaPartner$Keyword$BOTS_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$BOTS_instance;
  }
  var LorittaPartner$Keyword$FASHION_AND_BEAUTY_instance;
  function LorittaPartner$Keyword$FASHION_AND_BEAUTY_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$FASHION_AND_BEAUTY_instance;
  }
  var LorittaPartner$Keyword$SOFTWARE_instance;
  function LorittaPartner$Keyword$SOFTWARE_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$SOFTWARE_instance;
  }
  var LorittaPartner$Keyword$HARDWARE_instance;
  function LorittaPartner$Keyword$HARDWARE_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$HARDWARE_instance;
  }
  var LorittaPartner$Keyword$AESTHETICS_instance;
  function LorittaPartner$Keyword$AESTHETICS_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$AESTHETICS_instance;
  }
  var LorittaPartner$Keyword$HOBBIES_instance;
  function LorittaPartner$Keyword$HOBBIES_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$HOBBIES_instance;
  }
  var LorittaPartner$Keyword$CHIT_CHAT_instance;
  function LorittaPartner$Keyword$CHIT_CHAT_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$CHIT_CHAT_instance;
  }
  var LorittaPartner$Keyword$KPOP_AND_KOREAN_CULTURE_instance;
  function LorittaPartner$Keyword$KPOP_AND_KOREAN_CULTURE_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$KPOP_AND_KOREAN_CULTURE_instance;
  }
  var LorittaPartner$Keyword$TERROR_AND_CREEPYPASTA_instance;
  function LorittaPartner$Keyword$TERROR_AND_CREEPYPASTA_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$TERROR_AND_CREEPYPASTA_instance;
  }
  var LorittaPartner$Keyword$LIFE_STYLE_instance;
  function LorittaPartner$Keyword$LIFE_STYLE_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$LIFE_STYLE_instance;
  }
  var LorittaPartner$Keyword$BOOKS_AND_WRITING_instance;
  function LorittaPartner$Keyword$BOOKS_AND_WRITING_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$BOOKS_AND_WRITING_instance;
  }
  var LorittaPartner$Keyword$SPORTS_instance;
  function LorittaPartner$Keyword$SPORTS_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$SPORTS_instance;
  }
  var LorittaPartner$Keyword$FITNESS_AND_HEALTH_instance;
  function LorittaPartner$Keyword$FITNESS_AND_HEALTH_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$FITNESS_AND_HEALTH_instance;
  }
  var LorittaPartner$Keyword$INTERNET_CULTURE_instance;
  function LorittaPartner$Keyword$INTERNET_CULTURE_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$INTERNET_CULTURE_instance;
  }
  var LorittaPartner$Keyword$FOOD_instance;
  function LorittaPartner$Keyword$FOOD_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$FOOD_instance;
  }
  var LorittaPartner$Keyword$NATURE_AND_SCIENCE_instance;
  function LorittaPartner$Keyword$NATURE_AND_SCIENCE_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$NATURE_AND_SCIENCE_instance;
  }
  var LorittaPartner$Keyword$CRYPTOCURRENCY_instance;
  function LorittaPartner$Keyword$CRYPTOCURRENCY_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$CRYPTOCURRENCY_instance;
  }
  var LorittaPartner$Keyword$TECNOLOGY_instance;
  function LorittaPartner$Keyword$TECNOLOGY_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$TECNOLOGY_instance;
  }
  var LorittaPartner$Keyword$FURRY_instance;
  function LorittaPartner$Keyword$FURRY_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$FURRY_instance;
  }
  var LorittaPartner$Keyword$NSFW_instance;
  function LorittaPartner$Keyword$NSFW_getInstance() {
    LorittaPartner$Keyword_initFields();
    return LorittaPartner$Keyword$NSFW_instance;
  }
  LorittaPartner$Keyword.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Keyword',
    interfaces: [Enum]
  };
  function LorittaPartner$Keyword$values() {
    return [LorittaPartner$Keyword$GAMING_getInstance(), LorittaPartner$Keyword$ENTERTAINMENT_getInstance(), LorittaPartner$Keyword$ANIME_AND_MANGA_getInstance(), LorittaPartner$Keyword$TELEVISION_getInstance(), LorittaPartner$Keyword$ROLEPLAYING_getInstance(), LorittaPartner$Keyword$GIVEAWAYS_getInstance(), LorittaPartner$Keyword$MEMES_getInstance(), LorittaPartner$Keyword$COMMUNITY_getInstance(), LorittaPartner$Keyword$PROGRAMMING_getInstance(), LorittaPartner$Keyword$MUSIC_getInstance(), LorittaPartner$Keyword$MOVIES_getInstance(), LorittaPartner$Keyword$YOUTUBER_getInstance(), LorittaPartner$Keyword$STREAMER_getInstance(), LorittaPartner$Keyword$DISCUSSION_getInstance(), LorittaPartner$Keyword$EMOTES_getInstance(), LorittaPartner$Keyword$NEWS_getInstance(), LorittaPartner$Keyword$ART_getInstance(), LorittaPartner$Keyword$BOTS_getInstance(), LorittaPartner$Keyword$FASHION_AND_BEAUTY_getInstance(), LorittaPartner$Keyword$SOFTWARE_getInstance(), LorittaPartner$Keyword$HARDWARE_getInstance(), LorittaPartner$Keyword$AESTHETICS_getInstance(), LorittaPartner$Keyword$HOBBIES_getInstance(), LorittaPartner$Keyword$CHIT_CHAT_getInstance(), LorittaPartner$Keyword$KPOP_AND_KOREAN_CULTURE_getInstance(), LorittaPartner$Keyword$TERROR_AND_CREEPYPASTA_getInstance(), LorittaPartner$Keyword$LIFE_STYLE_getInstance(), LorittaPartner$Keyword$BOOKS_AND_WRITING_getInstance(), LorittaPartner$Keyword$SPORTS_getInstance(), LorittaPartner$Keyword$FITNESS_AND_HEALTH_getInstance(), LorittaPartner$Keyword$INTERNET_CULTURE_getInstance(), LorittaPartner$Keyword$FOOD_getInstance(), LorittaPartner$Keyword$NATURE_AND_SCIENCE_getInstance(), LorittaPartner$Keyword$CRYPTOCURRENCY_getInstance(), LorittaPartner$Keyword$TECNOLOGY_getInstance(), LorittaPartner$Keyword$FURRY_getInstance(), LorittaPartner$Keyword$NSFW_getInstance()];
  }
  LorittaPartner$Keyword.values = LorittaPartner$Keyword$values;
  function LorittaPartner$Keyword$valueOf(name) {
    switch (name) {
      case 'GAMING':
        return LorittaPartner$Keyword$GAMING_getInstance();
      case 'ENTERTAINMENT':
        return LorittaPartner$Keyword$ENTERTAINMENT_getInstance();
      case 'ANIME_AND_MANGA':
        return LorittaPartner$Keyword$ANIME_AND_MANGA_getInstance();
      case 'TELEVISION':
        return LorittaPartner$Keyword$TELEVISION_getInstance();
      case 'ROLEPLAYING':
        return LorittaPartner$Keyword$ROLEPLAYING_getInstance();
      case 'GIVEAWAYS':
        return LorittaPartner$Keyword$GIVEAWAYS_getInstance();
      case 'MEMES':
        return LorittaPartner$Keyword$MEMES_getInstance();
      case 'COMMUNITY':
        return LorittaPartner$Keyword$COMMUNITY_getInstance();
      case 'PROGRAMMING':
        return LorittaPartner$Keyword$PROGRAMMING_getInstance();
      case 'MUSIC':
        return LorittaPartner$Keyword$MUSIC_getInstance();
      case 'MOVIES':
        return LorittaPartner$Keyword$MOVIES_getInstance();
      case 'YOUTUBER':
        return LorittaPartner$Keyword$YOUTUBER_getInstance();
      case 'STREAMER':
        return LorittaPartner$Keyword$STREAMER_getInstance();
      case 'DISCUSSION':
        return LorittaPartner$Keyword$DISCUSSION_getInstance();
      case 'EMOTES':
        return LorittaPartner$Keyword$EMOTES_getInstance();
      case 'NEWS':
        return LorittaPartner$Keyword$NEWS_getInstance();
      case 'ART':
        return LorittaPartner$Keyword$ART_getInstance();
      case 'BOTS':
        return LorittaPartner$Keyword$BOTS_getInstance();
      case 'FASHION_AND_BEAUTY':
        return LorittaPartner$Keyword$FASHION_AND_BEAUTY_getInstance();
      case 'SOFTWARE':
        return LorittaPartner$Keyword$SOFTWARE_getInstance();
      case 'HARDWARE':
        return LorittaPartner$Keyword$HARDWARE_getInstance();
      case 'AESTHETICS':
        return LorittaPartner$Keyword$AESTHETICS_getInstance();
      case 'HOBBIES':
        return LorittaPartner$Keyword$HOBBIES_getInstance();
      case 'CHIT_CHAT':
        return LorittaPartner$Keyword$CHIT_CHAT_getInstance();
      case 'KPOP_AND_KOREAN_CULTURE':
        return LorittaPartner$Keyword$KPOP_AND_KOREAN_CULTURE_getInstance();
      case 'TERROR_AND_CREEPYPASTA':
        return LorittaPartner$Keyword$TERROR_AND_CREEPYPASTA_getInstance();
      case 'LIFE_STYLE':
        return LorittaPartner$Keyword$LIFE_STYLE_getInstance();
      case 'BOOKS_AND_WRITING':
        return LorittaPartner$Keyword$BOOKS_AND_WRITING_getInstance();
      case 'SPORTS':
        return LorittaPartner$Keyword$SPORTS_getInstance();
      case 'FITNESS_AND_HEALTH':
        return LorittaPartner$Keyword$FITNESS_AND_HEALTH_getInstance();
      case 'INTERNET_CULTURE':
        return LorittaPartner$Keyword$INTERNET_CULTURE_getInstance();
      case 'FOOD':
        return LorittaPartner$Keyword$FOOD_getInstance();
      case 'NATURE_AND_SCIENCE':
        return LorittaPartner$Keyword$NATURE_AND_SCIENCE_getInstance();
      case 'CRYPTOCURRENCY':
        return LorittaPartner$Keyword$CRYPTOCURRENCY_getInstance();
      case 'TECNOLOGY':
        return LorittaPartner$Keyword$TECNOLOGY_getInstance();
      case 'FURRY':
        return LorittaPartner$Keyword$FURRY_getInstance();
      case 'NSFW':
        return LorittaPartner$Keyword$NSFW_getInstance();
      default:throwISE('No enum constant utils.LorittaPartner.Keyword.' + name);
    }
  }
  LorittaPartner$Keyword.valueOf_61zpoe$ = LorittaPartner$Keyword$valueOf;
  function LorittaPartner$Language(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LorittaPartner$Language_initFields() {
    LorittaPartner$Language_initFields = function () {
    };
  }
  LorittaPartner$Language.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Language',
    interfaces: [Enum]
  };
  function LorittaPartner$Language$values() {
    return [];
  }
  LorittaPartner$Language.values = LorittaPartner$Language$values;
  function LorittaPartner$Language$valueOf(name) {
    throwISE('No enum constant utils.LorittaPartner.Language.' + name);
  }
  LorittaPartner$Language.valueOf_61zpoe$ = LorittaPartner$Language$valueOf;
  function LorittaPartner$Type(name, ordinal) {
    Enum.call(this);
    this.name$ = name;
    this.ordinal$ = ordinal;
  }
  function LorittaPartner$Type_initFields() {
    LorittaPartner$Type_initFields = function () {
    };
    LorittaPartner$Type$SPONSOR_instance = new LorittaPartner$Type('SPONSOR', 0);
    LorittaPartner$Type$PARTNER_instance = new LorittaPartner$Type('PARTNER', 1);
    LorittaPartner$Type$NORMAL_instance = new LorittaPartner$Type('NORMAL', 2);
  }
  var LorittaPartner$Type$SPONSOR_instance;
  function LorittaPartner$Type$SPONSOR_getInstance() {
    LorittaPartner$Type_initFields();
    return LorittaPartner$Type$SPONSOR_instance;
  }
  var LorittaPartner$Type$PARTNER_instance;
  function LorittaPartner$Type$PARTNER_getInstance() {
    LorittaPartner$Type_initFields();
    return LorittaPartner$Type$PARTNER_instance;
  }
  var LorittaPartner$Type$NORMAL_instance;
  function LorittaPartner$Type$NORMAL_getInstance() {
    LorittaPartner$Type_initFields();
    return LorittaPartner$Type$NORMAL_instance;
  }
  LorittaPartner$Type.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Type',
    interfaces: [Enum]
  };
  function LorittaPartner$Type$values() {
    return [LorittaPartner$Type$SPONSOR_getInstance(), LorittaPartner$Type$PARTNER_getInstance(), LorittaPartner$Type$NORMAL_getInstance()];
  }
  LorittaPartner$Type.values = LorittaPartner$Type$values;
  function LorittaPartner$Type$valueOf(name) {
    switch (name) {
      case 'SPONSOR':
        return LorittaPartner$Type$SPONSOR_getInstance();
      case 'PARTNER':
        return LorittaPartner$Type$PARTNER_getInstance();
      case 'NORMAL':
        return LorittaPartner$Type$NORMAL_getInstance();
      default:throwISE('No enum constant utils.LorittaPartner.Type.' + name);
    }
  }
  LorittaPartner$Type.valueOf_61zpoe$ = LorittaPartner$Type$valueOf;
  LorittaPartner.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'LorittaPartner',
    interfaces: []
  };
  var LorittaPartner_instance = null;
  function LorittaPartner_getInstance() {
    if (LorittaPartner_instance === null) {
      new LorittaPartner();
    }
    return LorittaPartner_instance;
  }
  function LorittaProfile(userId, dreams) {
    this.userId = userId;
    this.dreams = dreams;
  }
  LorittaProfile.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'LorittaProfile',
    interfaces: []
  };
  function LoriWebCodes() {
    LoriWebCodes_instance = this;
    this.SUCCESS = 0;
    this.RATE_LIMITED = 1;
    this.TRYING_TO_SAVE_PARTNER_CONFIG_WHILE_NOT_PARTNER = 2;
    this.UNKNOWN_GUILD = 3;
    this.UNAUTHORIZED = 4;
    this.ALREADY_VOTED_TODAY = 5;
    this.NOT_IN_GUILD = 6;
    this.INVALID_CAPTCHA_RESPONSE = 7;
    this.MISSING_PAYLOAD_HANDLER = 8;
    this.BAD_IP = 9;
    this.NOT_VERIFIED = 10;
    this.BAD_EMAIL = 11;
    this.MISSING_PERMISSION = 12;
    this.ALREADY_IN_GUILD = 13;
    this.INSUFFICIENT_FUNDS = 14;
  }
  LoriWebCodes.$metadata$ = {
    kind: Kind_OBJECT,
    simpleName: 'LoriWebCodes',
    interfaces: []
  };
  var LoriWebCodes_instance = null;
  function LoriWebCodes_getInstance() {
    if (LoriWebCodes_instance === null) {
      new LoriWebCodes();
    }
    return LoriWebCodes_instance;
  }
  function Member(id, name, discriminator, avatar) {
    this.id = id;
    this.name = name;
    this.discriminator = discriminator;
    this.avatar = avatar;
  }
  Member.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Member',
    interfaces: []
  };
  function Role(id, name, isPublicRole, isManaged, canInteract, color) {
    this.id = id;
    this.name = name;
    this.isPublicRole = isPublicRole;
    this.isManaged = isManaged;
    this.canInteract = canInteract;
    this.color = color;
  }
  Role.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'Role',
    interfaces: []
  };
  function ServerConfig_0(commandPrefix, moderationConfig, autoroleConfig, textChannelConfigs, defaultTextChannelConfig, joinLeaveConfig, textChannels, roles, emotes, permissions, selfUser, guildName, memberCount, donationKey) {
    this.commandPrefix = commandPrefix;
    this.moderationConfig = moderationConfig;
    this.autoroleConfig = autoroleConfig;
    this.textChannelConfigs = textChannelConfigs;
    this.defaultTextChannelConfig = defaultTextChannelConfig;
    this.joinLeaveConfig = joinLeaveConfig;
    this.textChannels = textChannels;
    this.roles = roles;
    this.emotes = emotes;
    this.permissions = permissions;
    this.selfUser = selfUser;
    this.guildName = guildName;
    this.memberCount = memberCount;
    this.donationKey = donationKey;
  }
  ServerConfig_0.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ServerConfig',
    interfaces: []
  };
  function DonationKey(value, userId, expiresAt) {
    this.value = value;
    this.userId = userId;
    this.expiresAt = expiresAt;
  }
  DonationKey.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'DonationKey',
    interfaces: []
  };
  function getTextChannelConfig($receiver, textChannel) {
    return getTextChannelConfig_0($receiver, textChannel.id);
  }
  function getTextChannelConfig_0($receiver, id) {
    var tmp$;
    var $receiver_0 = $receiver.textChannelConfigs;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$_0;
      for (tmp$_0 = 0; tmp$_0 !== $receiver_0.length; ++tmp$_0) {
        var element = $receiver_0[tmp$_0];
        if (equals(element.id, id)) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return (tmp$ = firstOrNull$result) != null ? tmp$ : $receiver.defaultTextChannelConfig;
  }
  function hasTextChannelConfig($receiver, textChannel) {
    return hasTextChannelConfig_0($receiver, textChannel.id);
  }
  function hasTextChannelConfig_0($receiver, id) {
    var $receiver_0 = $receiver.textChannelConfigs;
    var firstOrNull$result;
    firstOrNull$break: do {
      var tmp$;
      for (tmp$ = 0; tmp$ !== $receiver_0.length; ++tmp$) {
        var element = $receiver_0[tmp$];
        if (equals(element.id, id)) {
          firstOrNull$result = element;
          break firstOrNull$break;
        }
      }
      firstOrNull$result = null;
    }
     while (false);
    return firstOrNull$result != null;
  }
  function ShowdownExtension(type, filter) {
    this.type = type;
    this.filter = filter;
  }
  ShowdownExtension.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'ShowdownExtension',
    interfaces: []
  };
  function TextChannel(id, name, canTalk, topic) {
    this.id = id;
    this.name = name;
    this.canTalk = canTalk;
    this.topic = topic;
  }
  TextChannel.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextChannel',
    interfaces: []
  };
  function TextChannelConfig() {
    this.id = null;
    this.isBlacklisted = false;
    this.memberCounterConfig = null;
  }
  TextChannelConfig.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TextChannelConfig',
    interfaces: []
  };
  function TingleOptions_0(footer, stickyFooter, closeMethods, closeLabel, cssClass, onOpen, onClose, beforeClose) {
    if (footer === void 0)
      footer = null;
    if (stickyFooter === void 0)
      stickyFooter = null;
    if (closeMethods === void 0)
      closeMethods = [];
    if (closeLabel === void 0)
      closeLabel = null;
    if (cssClass === void 0)
      cssClass = [];
    if (onOpen === void 0)
      onOpen = null;
    if (onClose === void 0)
      onClose = null;
    if (beforeClose === void 0)
      beforeClose = null;
    this.footer = footer;
    this.stickyFooter = stickyFooter;
    this.closeMethods = closeMethods;
    this.closeLabel = closeLabel;
    this.cssClass = cssClass;
    this.onOpen = onOpen;
    this.onClose = onClose;
    this.beforeClose = beforeClose;
  }
  TingleOptions_0.$metadata$ = {
    kind: Kind_CLASS,
    simpleName: 'TingleOptions',
    interfaces: []
  };
  var package$com = _.com || (_.com = {});
  var package$fasterxml = package$com.fasterxml || (package$com.fasterxml = {});
  var package$jackson = package$fasterxml.jackson || (package$fasterxml.jackson = {});
  var package$annotation = package$jackson.annotation || (package$jackson.annotation = {});
  package$annotation.JsonCreator = JsonCreator;
  package$annotation.JsonProperty = JsonProperty;
  Object.defineProperty(_, 'ConfigureAutoroleView', {
    get: ConfigureAutoroleView_getInstance
  });
  Object.defineProperty(_, 'ConfigureEconomyView', {
    get: ConfigureEconomyView_getInstance
  });
  $$importsForInline$$.SpicyMorenitta = _;
  Object.defineProperty(_, 'ConfigureMemberCounterView', {
    get: ConfigureMemberCounterView_getInstance
  });
  Object.defineProperty(_, 'ConfigureMiscellaneousConfig', {
    get: ConfigureMiscellaneousConfig_getInstance
  });
  Object.defineProperty(_, 'ConfigureModerationView', {
    get: ConfigureModerationView_getInstance
  });
  Object.defineProperty(_, 'ConfigureProfileView', {
    get: ConfigureProfileView_getInstance
  });
  Object.defineProperty(_, 'ConfigureWelcomerView', {
    get: ConfigureWelcomerView_getInstance
  });
  LoriDashboard.prototype.SUMMARY = LoriDashboard$SUMMARY;
  Object.defineProperty(_, 'LoriDashboard', {
    get: LoriDashboard_getInstance
  });
  _.toString_dqglrj$ = toString_1;
  Object.defineProperty(_, 'legacyLocale', {
    get: get_legacyLocale,
    set: set_legacyLocale
  });
  Object.defineProperty(_, 'locale', {
    get: get_locale,
    set: set_locale
  });
  Object.defineProperty(_, 'selfProfile', {
    get: function () {
      return selfProfile;
    },
    set: function (value) {
      selfProfile = value;
    }
  });
  Object.defineProperty(_, 'loriUrl', {
    get: get_loriUrl
  });
  _.jq_61zpoe$ = jq;
  _.toJson_th5c7u$ = toJson;
  _.toJson_s8jyvk$ = toJson_0;
  _.stringify_s8jyvk$ = stringify;
  $$importsForInline$$['kotlinx-serialization-runtime-js'] = $module$kotlinx_serialization_runtime_js;
  _.loadEmbeddedLocale = loadEmbeddedLocale;
  _.oldMain_kand9s$ = oldMain;
  _.testError = testError;
  var package$net = _.net || (_.net = {});
  var package$perfectdreams = package$net.perfectdreams || (package$net.perfectdreams = {});
  var package$spicymorenitta = package$perfectdreams.spicymorenitta || (package$perfectdreams.spicymorenitta = {});
  var package$application = package$spicymorenitta.application || (package$spicymorenitta.application = {});
  package$application.ApplicationCall = ApplicationCall;
  Object.defineProperty(package$spicymorenitta, 'CookiesUtils', {
    get: CookiesUtils_getInstance
  });
  Object.defineProperty(package$spicymorenitta, 'DoNotRemoveDeadCodeWorkaround', {
    get: DoNotRemoveDeadCodeWorkaround_getInstance
  });
  package$spicymorenitta.GlobalCount = GlobalCount;
  Object.defineProperty(AudioRecordingRoute$Companion$TrackedAudioData, 'Companion', {
    get: AudioRecordingRoute$Companion$TrackedAudioData$Companion_getInstance
  });
  Object.defineProperty(AudioRecordingRoute$Companion$TrackedAudioData, '$serializer', {
    get: AudioRecordingRoute$Companion$TrackedAudioData$$serializer_getInstance
  });
  AudioRecordingRoute$Companion.prototype.TrackedAudioData_init_e4l52z$ = AudioRecordingRoute$Companion$AudioRecordingRoute$Companion$TrackedAudioData_init;
  AudioRecordingRoute$Companion.prototype.TrackedAudioData = AudioRecordingRoute$Companion$TrackedAudioData;
  AudioRecordingRoute$Companion.prototype.TrackedAudioDataWithLengths = AudioRecordingRoute$Companion$TrackedAudioDataWithLengths;
  AudioRecordingRoute$Companion.prototype.TestUserData = AudioRecordingRoute$Companion$TestUserData;
  Object.defineProperty(AudioRecordingRoute, 'Companion', {
    get: AudioRecordingRoute$Companion_getInstance
  });
  var package$routes = package$spicymorenitta.routes || (package$spicymorenitta.routes = {});
  package$routes.AudioRecordingRoute = AudioRecordingRoute;
  package$routes.BaseRoute = BaseRoute;
  CommandsRoute.LorittaJS = CommandsRoute$LorittaJS;
  CommandsRoute.UserImpl = CommandsRoute$UserImpl;
  $$importsForInline$$['ktor-ktor-client-core'] = $module$ktor_ktor_client_core;
  Object.defineProperty(CommandsRoute$Companion$Command, 'Companion', {
    get: CommandsRoute$Companion$Command$Companion_getInstance
  });
  Object.defineProperty(CommandsRoute$Companion$Command, '$serializer', {
    get: CommandsRoute$Companion$Command$$serializer_getInstance
  });
  CommandsRoute$Companion.prototype.Command_init_bzoce2$ = CommandsRoute$Companion$CommandsRoute$Companion$Command_init;
  CommandsRoute$Companion.prototype.Command = CommandsRoute$Companion$Command;
  Object.defineProperty(CommandsRoute, 'Companion', {
    get: CommandsRoute$Companion_getInstance
  });
  package$routes.CommandsRoute = CommandsRoute;
  package$routes.DashboardRoute = DashboardRoute;
  package$routes.DiscordBotBrasileiroRoute = DiscordBotBrasileiroRoute;
  Object.defineProperty(FanArtsRoute$ArtistSortingMethod, 'ALPHABETIC', {
    get: FanArtsRoute$ArtistSortingMethod$ALPHABETIC_getInstance
  });
  Object.defineProperty(FanArtsRoute$ArtistSortingMethod, 'ALPHABETIC_REVERSED', {
    get: FanArtsRoute$ArtistSortingMethod$ALPHABETIC_REVERSED_getInstance
  });
  Object.defineProperty(FanArtsRoute$ArtistSortingMethod, 'FAN_ART_COUNT', {
    get: FanArtsRoute$ArtistSortingMethod$FAN_ART_COUNT_getInstance
  });
  Object.defineProperty(FanArtsRoute$ArtistSortingMethod, 'BEST_ARTISTS', {
    get: FanArtsRoute$ArtistSortingMethod$BEST_ARTISTS_getInstance
  });
  FanArtsRoute.ArtistSortingMethod = FanArtsRoute$ArtistSortingMethod;
  Object.defineProperty(FanArtsRoute$FanArtSortingMethod, 'OLD_TO_NEW', {
    get: FanArtsRoute$FanArtSortingMethod$OLD_TO_NEW_getInstance
  });
  Object.defineProperty(FanArtsRoute$FanArtSortingMethod, 'NEW_TO_OLD', {
    get: FanArtsRoute$FanArtSortingMethod$NEW_TO_OLD_getInstance
  });
  FanArtsRoute.FanArtSortingMethod = FanArtsRoute$FanArtSortingMethod;
  package$routes.FanArtsRoute = FanArtsRoute;
  var package$guilds = package$routes.guilds || (package$routes.guilds = {});
  var package$dashboard = package$guilds.dashboard || (package$guilds.dashboard = {});
  package$dashboard.AuditLogRoute = AuditLogRoute;
  package$dashboard.BadgeRoute = BadgeRoute;
  package$dashboard.DailyMultiplierRoute = DailyMultiplierRoute;
  Object.defineProperty(GeneralConfigRoute, 'Companion', {
    get: GeneralConfigRoute$Companion_getInstance
  });
  package$dashboard.GeneralConfigRoute = GeneralConfigRoute;
  package$dashboard.GeneralDashboardRoute = GeneralDashboardRoute;
  Object.defineProperty(package$dashboard, 'GuildDashboard', {
    get: GuildDashboard_getInstance
  });
  package$dashboard.createToggle_n6sald$ = createToggle;
  package$dashboard.displayUnsavedAlert = displayUnsavedAlert;
  package$dashboard.hideUnsavedAlert = hideUnsavedAlert;
  package$dashboard.resetAnimation_lt8gi4$ = resetAnimation;
  package$dashboard.leftSidebarForGuildDashboard_6sikba$ = leftSidebarForGuildDashboard;
  var package$iframehack = package$dashboard.iframehack || (package$dashboard.iframehack = {});
  package$iframehack.IFrameGeneralDashboardRoute = IFrameGeneralDashboardRoute;
  Object.defineProperty(LevelUpRoute, 'Companion', {
    get: LevelUpRoute$Companion_getInstance
  });
  package$dashboard.LevelUpRoute = LevelUpRoute;
  package$dashboard.PremiumKeyRoute = PremiumKeyRoute;
  Object.defineProperty(RssFeedsRoute, 'Companion', {
    get: RssFeedsRoute$Companion_getInstance
  });
  Object.defineProperty(RssFeedsRoute$DefaultRssFeedEntry, 'Companion', {
    get: RssFeedsRoute$DefaultRssFeedEntry$Companion_getInstance
  });
  Object.defineProperty(RssFeedsRoute$DefaultRssFeedEntry, '$serializer', {
    get: RssFeedsRoute$DefaultRssFeedEntry$$serializer_getInstance
  });
  RssFeedsRoute.DefaultRssFeedEntry_init_2u6d5w$ = RssFeedsRoute$RssFeedsRoute$DefaultRssFeedEntry_init;
  RssFeedsRoute.DefaultRssFeedEntry = RssFeedsRoute$DefaultRssFeedEntry;
  package$dashboard.RssFeedsRoute = RssFeedsRoute;
  Object.defineProperty(TwitterRoute, 'Companion', {
    get: TwitterRoute$Companion_getInstance
  });
  Object.defineProperty(TwitterRoute$TwitterAccountInfo, 'Companion', {
    get: TwitterRoute$TwitterAccountInfo$Companion_getInstance
  });
  Object.defineProperty(TwitterRoute$TwitterAccountInfo, '$serializer', {
    get: TwitterRoute$TwitterAccountInfo$$serializer_getInstance
  });
  TwitterRoute.TwitterAccountInfo_init_jrw4yg$ = TwitterRoute$TwitterRoute$TwitterAccountInfo_init;
  TwitterRoute.TwitterAccountInfo = TwitterRoute$TwitterAccountInfo;
  package$dashboard.TwitterRoute = TwitterRoute;
  package$routes.HomeRoute = HomeRoute;
  package$routes.leftSidebarForProfileDashboard_6sikba$ = leftSidebarForProfileDashboard;
  package$routes.TranslateRoute = TranslateRoute;
  package$routes.UpdateNavbarSizePostRender = UpdateNavbarSizePostRender;
  Object.defineProperty(package$spicymorenitta, 'switchPageStart', {
    get: function () {
      return switchPageStart;
    },
    set: function (value) {
      switchPageStart = value;
    }
  });
  Object.defineProperty(package$spicymorenitta, 'pageCache', {
    get: function () {
      return pageCache;
    }
  });
  Object.defineProperty(package$spicymorenitta, 'ignoreCacheRequests', {
    get: function () {
      return ignoreCacheRequests;
    },
    set: function (value) {
      ignoreCacheRequests = value;
    }
  });
  Object.defineProperty(package$spicymorenitta, 'navbarIsSetup', {
    get: function () {
      return navbarIsSetup;
    },
    set: function (value) {
      navbarIsSetup = value;
    }
  });
  Object.defineProperty(package$spicymorenitta, 'http', {
    get: function () {
      return http;
    }
  });
  Object.defineProperty(package$spicymorenitta, 'locale', {
    get: get_locale_0,
    set: set_locale_0
  });
  Object.defineProperty(SpicyMorenitta, 'Companion', {
    get: SpicyMorenitta$Companion_getInstance
  });
  $$importsForInline$$['kotlinx-coroutines-core'] = $module$kotlinx_coroutines_core;
  package$spicymorenitta.SpicyMorenitta = SpicyMorenitta;
  package$spicymorenitta.main_kand9s$ = main;
  var package$trunfo = package$spicymorenitta.trunfo || (package$spicymorenitta.trunfo = {});
  Object.defineProperty(package$trunfo, 'Trunfo', {
    get: Trunfo_getInstance
  });
  Object.defineProperty(package$trunfo, 'TrunfoGame', {
    get: TrunfoGame_getInstance
  });
  Object.defineProperty(ActionType, 'UNKNOWN', {
    get: ActionType$UNKNOWN_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_GENERAL', {
    get: ActionType$UPDATE_GENERAL_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_MODERATION', {
    get: ActionType$UPDATE_MODERATION_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_COMMAND_LIST', {
    get: ActionType$UPDATE_COMMAND_LIST_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_PERMISSIONS', {
    get: ActionType$UPDATE_PERMISSIONS_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_WELCOMER', {
    get: ActionType$UPDATE_WELCOMER_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_EVENT_LOG', {
    get: ActionType$UPDATE_EVENT_LOG_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_YOUTUBE', {
    get: ActionType$UPDATE_YOUTUBE_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_TWITCH', {
    get: ActionType$UPDATE_TWITCH_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_AUTOROLE', {
    get: ActionType$UPDATE_AUTOROLE_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_INVITE_BLOCK', {
    get: ActionType$UPDATE_INVITE_BLOCK_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_MUSIC', {
    get: ActionType$UPDATE_MUSIC_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_ECONOMY', {
    get: ActionType$UPDATE_ECONOMY_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_TIMERS', {
    get: ActionType$UPDATE_TIMERS_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_STARBOARD', {
    get: ActionType$UPDATE_STARBOARD_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_MISCELLANEOUS', {
    get: ActionType$UPDATE_MISCELLANEOUS_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_CUSTOM_BADGE', {
    get: ActionType$UPDATE_CUSTOM_BADGE_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_DAILY_MULTIPLIER', {
    get: ActionType$UPDATE_DAILY_MULTIPLIER_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_CUSTOM_COMMANDS', {
    get: ActionType$UPDATE_CUSTOM_COMMANDS_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_LEVEL_UP', {
    get: ActionType$UPDATE_LEVEL_UP_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_TEXT_CHANNELS', {
    get: ActionType$UPDATE_TEXT_CHANNELS_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_PREMIUM', {
    get: ActionType$UPDATE_PREMIUM_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_TWITTER', {
    get: ActionType$UPDATE_TWITTER_getInstance
  });
  Object.defineProperty(ActionType, 'UPDATE_RSS_FEEDS', {
    get: ActionType$UPDATE_RSS_FEEDS_getInstance
  });
  Object.defineProperty(ActionType, 'RESET_XP', {
    get: ActionType$RESET_XP_getInstance
  });
  var package$utils = package$spicymorenitta.utils || (package$spicymorenitta.utils = {});
  package$utils.ActionType = ActionType;
  Object.defineProperty(package$utils, 'AdvertisementUtils', {
    get: AdvertisementUtils_getInstance
  });
  Object.defineProperty(package$utils, 'AuthUtils', {
    get: AuthUtils_getInstance
  });
  Object.defineProperty(package$utils, 'page', {
    get: function () {
      return page;
    }
  });
  package$utils.BetterDocument = BetterDocument;
  package$utils.appendBuilder_3t3i6y$ = appendBuilder;
  Object.defineProperty(package$utils, 'DashboardUtils', {
    get: DashboardUtils_getInstance
  });
  package$utils.DateSerializer = DateSerializer;
  Object.defineProperty(package$utils, 'DateUtils', {
    get: DateUtils_getInstance
  });
  Object.defineProperty(package$utils, 'delayedTypingTask', {
    get: function () {
      return delayedTypingTask;
    },
    set: function (value) {
      delayedTypingTask = value;
    }
  });
  package$utils.delayedTyping_pzqx9o$ = delayedTyping;
  package$utils.select_hger2a$ = select_0;
  package$utils.selectAll_hger2a$ = selectAll;
  package$utils.onDOMReady_4bdym6$ = onDOMReady;
  package$utils.onClick_466r4r$ = onClick;
  package$utils.onScroll_nvde5v$ = onScroll;
  package$utils.onScroll_466r4r$ = onScroll_0;
  package$utils.onMouseOver_466r4r$ = onMouseOver;
  package$utils.onMouseOut_466r4r$ = onMouseOut;
  package$utils.onMouseEnter_466r4r$ = onMouseEnter;
  package$utils.onMouseLeave_466r4r$ = onMouseLeave;
  package$utils.offset_ejp6nk$ = offset;
  package$utils.width_ejp6nk$ = width;
  package$utils.Offset = Offset;
  Object.defineProperty(package$utils, 'visibleModal', {
    get: get_visibleModal
  });
  Object.defineProperty(FanArt, 'Companion', {
    get: FanArt$Companion_getInstance
  });
  Object.defineProperty(FanArt, '$serializer', {
    get: FanArt$$serializer_getInstance
  });
  package$utils.FanArt_init_axx04a$ = FanArt_init;
  package$utils.FanArt = FanArt;
  Object.defineProperty(FanArtArtist$Info, 'Companion', {
    get: FanArtArtist$Info$Companion_getInstance
  });
  Object.defineProperty(FanArtArtist$Info, '$serializer', {
    get: FanArtArtist$Info$$serializer_getInstance
  });
  FanArtArtist.Info_init_jytvqc$ = FanArtArtist$FanArtArtist$Info_init;
  FanArtArtist.Info = FanArtArtist$Info;
  Object.defineProperty(FanArtArtist$User, 'Companion', {
    get: FanArtArtist$User$Companion_getInstance
  });
  Object.defineProperty(FanArtArtist$User, '$serializer', {
    get: FanArtArtist$User$$serializer_getInstance
  });
  FanArtArtist.User_init_2u6d5w$ = FanArtArtist$FanArtArtist$User_init;
  FanArtArtist.User = FanArtArtist$User;
  Object.defineProperty(FanArtArtist, 'Companion', {
    get: FanArtArtist$Companion_getInstance
  });
  Object.defineProperty(FanArtArtist, '$serializer', {
    get: FanArtArtist$$serializer_getInstance
  });
  package$utils.FanArtArtist_init_t9ejxc$ = FanArtArtist_init;
  package$utils.FanArtArtist = FanArtArtist;
  Object.defineProperty(GeneralConfig, 'Companion', {
    get: GeneralConfig$Companion_getInstance
  });
  Object.defineProperty(GeneralConfig, '$serializer', {
    get: GeneralConfig$$serializer_getInstance
  });
  package$utils.GeneralConfig_init_lmlwo5$ = GeneralConfig_init;
  package$utils.GeneralConfig = GeneralConfig;
  Object.defineProperty(package$utils, 'GoogleAdSense', {
    get: GoogleAdSense_getInstance
  });
  Object.defineProperty(package$utils, 'GoogleRecaptchaUtils', {
    get: GoogleRecaptchaUtils_getInstance
  });
  Object.defineProperty(GuildConfig, 'Companion', {
    get: GuildConfig$Companion_getInstance
  });
  Object.defineProperty(GuildConfig, '$serializer', {
    get: GuildConfig$$serializer_getInstance
  });
  package$utils.GuildConfig_init_4v7x35$ = GuildConfig_init;
  package$utils.GuildConfig = GuildConfig;
  Object.defineProperty(HttpRequest, 'Companion', {
    get: HttpRequest$Companion_getInstance
  });
  package$utils.HttpRequest = HttpRequest;
  package$utils.HttpResponse = HttpResponse_0;
  package$utils.JsonElement = JsonElement;
  package$utils.JsonObject = JsonObject;
  Object.defineProperty(LevelUpAnnouncementType, 'DISABLED', {
    get: LevelUpAnnouncementType$DISABLED_getInstance
  });
  Object.defineProperty(LevelUpAnnouncementType, 'SAME_CHANNEL', {
    get: LevelUpAnnouncementType$SAME_CHANNEL_getInstance
  });
  Object.defineProperty(LevelUpAnnouncementType, 'DIRECT_MESSAGE', {
    get: LevelUpAnnouncementType$DIRECT_MESSAGE_getInstance
  });
  Object.defineProperty(LevelUpAnnouncementType, 'DIFFERENT_CHANNEL', {
    get: LevelUpAnnouncementType$DIFFERENT_CHANNEL_getInstance
  });
  var package$levelup = package$utils.levelup || (package$utils.levelup = {});
  package$levelup.LevelUpAnnouncementType = LevelUpAnnouncementType;
  Object.defineProperty(BaseLocale, 'Companion', {
    get: BaseLocale$Companion_getInstance
  });
  Object.defineProperty(BaseLocale, '$serializer', {
    get: BaseLocale$$serializer_getInstance
  });
  var package$locale = package$utils.locale || (package$utils.locale = {});
  package$locale.BaseLocale_init_x32e4q$ = BaseLocale_init;
  package$locale.BaseLocale = BaseLocale;
  package$utils.Logging = Logging;
  Object.defineProperty(package$utils, 'loriUrl', {
    get: get_loriUrl_0
  });
  Object.defineProperty(package$utils, 'Placeholders', {
    get: Placeholders_getInstance
  });
  Object.defineProperty(package$utils, 'SaveUtils', {
    get: SaveUtils_getInstance
  });
  Object.defineProperty(package$utils, 'SpicyDashboard', {
    get: SpicyDashboard_getInstance
  });
  Object.defineProperty(TemmieDiscordGuild, 'Companion', {
    get: TemmieDiscordGuild$Companion_getInstance
  });
  Object.defineProperty(TemmieDiscordGuild, '$serializer', {
    get: TemmieDiscordGuild$$serializer_getInstance
  });
  package$utils.TemmieDiscordGuild_init_x6o3w1$ = TemmieDiscordGuild_init;
  package$utils.TemmieDiscordGuild = TemmieDiscordGuild;
  package$utils.TingleOptions = TingleOptions;
  Object.defineProperty(UserIdentification, 'Companion', {
    get: UserIdentification$Companion_getInstance
  });
  Object.defineProperty(UserIdentification, '$serializer', {
    get: UserIdentification$$serializer_getInstance
  });
  package$utils.UserIdentification_init_cw6ceu$ = UserIdentification_init;
  package$utils.UserIdentification = UserIdentification;
  package$utils.generateAd_3bhi8p$ = generateAd;
  Object.defineProperty(WebsiteUtils$UserPermissionLevel, 'OWNER', {
    get: WebsiteUtils$UserPermissionLevel$OWNER_getInstance
  });
  Object.defineProperty(WebsiteUtils$UserPermissionLevel, 'ADMINISTRATOR', {
    get: WebsiteUtils$UserPermissionLevel$ADMINISTRATOR_getInstance
  });
  Object.defineProperty(WebsiteUtils$UserPermissionLevel, 'MANAGER', {
    get: WebsiteUtils$UserPermissionLevel$MANAGER_getInstance
  });
  Object.defineProperty(WebsiteUtils$UserPermissionLevel, 'MEMBER', {
    get: WebsiteUtils$UserPermissionLevel$MEMBER_getInstance
  });
  WebsiteUtils.prototype.UserPermissionLevel = WebsiteUtils$UserPermissionLevel;
  Object.defineProperty(package$utils, 'WebsiteUtils', {
    get: WebsiteUtils_getInstance
  });
  package$utils.createRadioButton_1ltlvh$ = createRadioButton;
  Object.defineProperty(DailyView$DailyResponse, 'Companion', {
    get: DailyView$DailyResponse$Companion_getInstance
  });
  Object.defineProperty(DailyView$DailyResponse, '$serializer', {
    get: DailyView$DailyResponse$$serializer_getInstance
  });
  DailyView.prototype.DailyResponse_init_1i7mve$ = DailyView$DailyView$DailyResponse_init;
  DailyView.prototype.DailyResponse = DailyView$DailyResponse;
  Object.defineProperty(DailyView$Guild, 'Companion', {
    get: DailyView$Guild$Companion_getInstance
  });
  Object.defineProperty(DailyView$Guild, '$serializer', {
    get: DailyView$Guild$$serializer_getInstance
  });
  DailyView.prototype.Guild_init_abzm4l$ = DailyView$DailyView$Guild_init;
  DailyView.prototype.Guild = DailyView$Guild;
  Object.defineProperty(DailyView$Sponsored, 'Companion', {
    get: DailyView$Sponsored$Companion_getInstance
  });
  Object.defineProperty(DailyView$Sponsored, '$serializer', {
    get: DailyView$Sponsored$$serializer_getInstance
  });
  DailyView.prototype.Sponsored_init_5xnnig$ = DailyView$DailyView$Sponsored_init;
  DailyView.prototype.Sponsored = DailyView$Sponsored;
  Object.defineProperty(DailyView$FailedGuildDailyStats, 'Companion', {
    get: DailyView$FailedGuildDailyStats$Companion_getInstance
  });
  Object.defineProperty(DailyView$FailedGuildDailyStats, '$serializer', {
    get: DailyView$FailedGuildDailyStats$$serializer_getInstance
  });
  DailyView.prototype.FailedGuildDailyStats_init_qqpy9l$ = DailyView$DailyView$FailedGuildDailyStats_init;
  DailyView.prototype.FailedGuildDailyStats = DailyView$FailedGuildDailyStats;
  var package$views = package$spicymorenitta.views || (package$spicymorenitta.views = {});
  Object.defineProperty(package$views, 'DailyView', {
    get: DailyView_getInstance
  });
  var package$dashboard_0 = package$views.dashboard || (package$views.dashboard = {});
  Object.defineProperty(package$dashboard_0, 'ReactionRoleView', {
    get: ReactionRoleView_getInstance
  });
  Object.defineProperty(ServerConfig$MiniGuild, 'Companion', {
    get: ServerConfig$MiniGuild$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$MiniGuild, '$serializer', {
    get: ServerConfig$MiniGuild$$serializer_getInstance
  });
  ServerConfig.prototype.MiniGuild_init_2u6d5w$ = ServerConfig$ServerConfig$MiniGuild_init;
  ServerConfig.prototype.MiniGuild = ServerConfig$MiniGuild;
  Object.defineProperty(ServerConfig$Guild, 'Companion', {
    get: ServerConfig$Guild$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$Guild, '$serializer', {
    get: ServerConfig$Guild$$serializer_getInstance
  });
  ServerConfig.prototype.Guild_init_nh1cno$ = ServerConfig$ServerConfig$Guild_init;
  ServerConfig.prototype.Guild = ServerConfig$Guild;
  Object.defineProperty(ServerConfig$SelfMember, 'Companion', {
    get: ServerConfig$SelfMember$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$SelfMember, '$serializer', {
    get: ServerConfig$SelfMember$$serializer_getInstance
  });
  ServerConfig.prototype.SelfMember_init_y1m5jh$ = ServerConfig$ServerConfig$SelfMember_init;
  ServerConfig.prototype.SelfMember = ServerConfig$SelfMember;
  Object.defineProperty(ServerConfig$DonationKey, 'Companion', {
    get: ServerConfig$DonationKey$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$DonationKey, '$serializer', {
    get: ServerConfig$DonationKey$$serializer_getInstance
  });
  ServerConfig.prototype.DonationKey_init_x59ve$ = ServerConfig$ServerConfig$DonationKey_init;
  ServerConfig.prototype.DonationKey = ServerConfig$DonationKey;
  Object.defineProperty(ServerConfig$DonationConfig, 'Companion', {
    get: ServerConfig$DonationConfig$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$DonationConfig, '$serializer', {
    get: ServerConfig$DonationConfig$$serializer_getInstance
  });
  ServerConfig.prototype.DonationConfig_init_mgnrfg$ = ServerConfig$ServerConfig$DonationConfig_init;
  ServerConfig.prototype.DonationConfig = ServerConfig$DonationConfig;
  Object.defineProperty(ServerConfig$LevelUpConfig, 'Companion', {
    get: ServerConfig$LevelUpConfig$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$LevelUpConfig, '$serializer', {
    get: ServerConfig$LevelUpConfig$$serializer_getInstance
  });
  ServerConfig.prototype.LevelUpConfig_init_g8zkvl$ = ServerConfig$ServerConfig$LevelUpConfig_init;
  ServerConfig.prototype.LevelUpConfig = ServerConfig$LevelUpConfig;
  Object.defineProperty(ServerConfig$Announcement, 'Companion', {
    get: ServerConfig$Announcement$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$Announcement, '$serializer', {
    get: ServerConfig$Announcement$$serializer_getInstance
  });
  ServerConfig.prototype.Announcement_init_st15wi$ = ServerConfig$ServerConfig$Announcement_init;
  ServerConfig.prototype.Announcement = ServerConfig$Announcement;
  Object.defineProperty(ServerConfig$RoleByExperience, 'Companion', {
    get: ServerConfig$RoleByExperience$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$RoleByExperience, '$serializer', {
    get: ServerConfig$RoleByExperience$$serializer_getInstance
  });
  ServerConfig.prototype.RoleByExperience_init_fbk0ah$ = ServerConfig$ServerConfig$RoleByExperience_init;
  ServerConfig.prototype.RoleByExperience = ServerConfig$RoleByExperience;
  Object.defineProperty(ServerConfig$ExperienceRoleRate, 'Companion', {
    get: ServerConfig$ExperienceRoleRate$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$ExperienceRoleRate, '$serializer', {
    get: ServerConfig$ExperienceRoleRate$$serializer_getInstance
  });
  ServerConfig.prototype.ExperienceRoleRate_init_g71hbp$ = ServerConfig$ServerConfig$ExperienceRoleRate_init;
  ServerConfig.prototype.ExperienceRoleRate = ServerConfig$ExperienceRoleRate;
  Object.defineProperty(ServerConfig$TrackedTwitterAccount, 'Companion', {
    get: ServerConfig$TrackedTwitterAccount$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$TrackedTwitterAccount, '$serializer', {
    get: ServerConfig$TrackedTwitterAccount$$serializer_getInstance
  });
  ServerConfig.prototype.TrackedTwitterAccount_init_j4fr4l$ = ServerConfig$ServerConfig$TrackedTwitterAccount_init;
  ServerConfig.prototype.TrackedTwitterAccount = ServerConfig$TrackedTwitterAccount;
  Object.defineProperty(ServerConfig$TrackedRssFeed, 'Companion', {
    get: ServerConfig$TrackedRssFeed$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$TrackedRssFeed, '$serializer', {
    get: ServerConfig$TrackedRssFeed$$serializer_getInstance
  });
  ServerConfig.prototype.TrackedRssFeed_init_k0evbt$ = ServerConfig$ServerConfig$TrackedRssFeed_init;
  ServerConfig.prototype.TrackedRssFeed = ServerConfig$TrackedRssFeed;
  Object.defineProperty(ServerConfig$ReactionOption, 'Companion', {
    get: ServerConfig$ReactionOption$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$ReactionOption, '$serializer', {
    get: ServerConfig$ReactionOption$$serializer_getInstance
  });
  ServerConfig.prototype.ReactionOption_init_yxeivv$ = ServerConfig$ServerConfig$ReactionOption_init;
  ServerConfig.prototype.ReactionOption = ServerConfig$ReactionOption;
  Object.defineProperty(ServerConfig$DiscordMessage, 'Companion', {
    get: ServerConfig$DiscordMessage$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$DiscordMessage, '$serializer', {
    get: ServerConfig$DiscordMessage$$serializer_getInstance
  });
  ServerConfig.prototype.DiscordMessage_init_8oii7l$ = ServerConfig$ServerConfig$DiscordMessage_init;
  ServerConfig.prototype.DiscordMessage = ServerConfig$DiscordMessage;
  Object.defineProperty(ServerConfig$DiscordReaction, 'Companion', {
    get: ServerConfig$DiscordReaction$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$DiscordReaction, '$serializer', {
    get: ServerConfig$DiscordReaction$$serializer_getInstance
  });
  ServerConfig.prototype.DiscordReaction_init_ux2jq9$ = ServerConfig$ServerConfig$DiscordReaction_init;
  ServerConfig.prototype.DiscordReaction = ServerConfig$DiscordReaction;
  Object.defineProperty(ServerConfig$Role, 'Companion', {
    get: ServerConfig$Role$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$Role, '$serializer', {
    get: ServerConfig$Role$$serializer_getInstance
  });
  ServerConfig.prototype.Role_init_d6mz5h$ = ServerConfig$ServerConfig$Role_init;
  ServerConfig.prototype.Role = ServerConfig$Role;
  Object.defineProperty(ServerConfig$TextChannel, 'Companion', {
    get: ServerConfig$TextChannel$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$TextChannel, '$serializer', {
    get: ServerConfig$TextChannel$$serializer_getInstance
  });
  ServerConfig.prototype.TextChannel_init_2u6d5w$ = ServerConfig$ServerConfig$TextChannel_init;
  ServerConfig.prototype.TextChannel = ServerConfig$TextChannel;
  Object.defineProperty(ServerConfig$WebAuditLogWrapper, 'Companion', {
    get: ServerConfig$WebAuditLogWrapper$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$WebAuditLogWrapper, '$serializer', {
    get: ServerConfig$WebAuditLogWrapper$$serializer_getInstance
  });
  ServerConfig.prototype.WebAuditLogWrapper_init_47xdxn$ = ServerConfig$ServerConfig$WebAuditLogWrapper_init;
  ServerConfig.prototype.WebAuditLogWrapper = ServerConfig$WebAuditLogWrapper;
  Object.defineProperty(ServerConfig$WebAuditLogEntry, 'Companion', {
    get: ServerConfig$WebAuditLogEntry$Companion_getInstance
  });
  Object.defineProperty(ServerConfig$WebAuditLogEntry, '$serializer', {
    get: ServerConfig$WebAuditLogEntry$$serializer_getInstance
  });
  ServerConfig.prototype.WebAuditLogEntry_init_j4fr4l$ = ServerConfig$ServerConfig$WebAuditLogEntry_init;
  ServerConfig.prototype.WebAuditLogEntry = ServerConfig$WebAuditLogEntry;
  Object.defineProperty(package$dashboard_0, 'ServerConfig', {
    get: ServerConfig_getInstance
  });
  Object.defineProperty(package$dashboard_0, 'Stuff', {
    get: Stuff_getInstance
  });
  DonateView.prototype.DonationReward = DonateView$DonationReward;
  Object.defineProperty(package$views, 'DonateView', {
    get: DonateView_getInstance
  });
  Object.defineProperty(ProfileListView$Profile, 'Companion', {
    get: ProfileListView$Profile$Companion_getInstance
  });
  Object.defineProperty(ProfileListView$Profile, '$serializer', {
    get: ProfileListView$Profile$$serializer_getInstance
  });
  ProfileListView.prototype.Profile_init_we1k8n$ = ProfileListView$ProfileListView$Profile_init;
  ProfileListView.prototype.Profile = ProfileListView$Profile;
  Object.defineProperty(ProfileListView$ProfileLayout, 'Companion', {
    get: ProfileListView$ProfileLayout$Companion_getInstance
  });
  Object.defineProperty(ProfileListView$ProfileLayout, '$serializer', {
    get: ProfileListView$ProfileLayout$$serializer_getInstance
  });
  ProfileListView.prototype.ProfileLayout_init_ainxla$ = ProfileListView$ProfileListView$ProfileLayout_init;
  ProfileListView.prototype.ProfileLayout = ProfileListView$ProfileLayout;
  Object.defineProperty(package$views, 'ProfileListView', {
    get: ProfileListView_getInstance
  });
  Object.defineProperty(package$views, 'ReputationView', {
    get: ReputationView_getInstance
  });
  Object.defineProperty(ShipEffectsView$ShipEffect, 'Companion', {
    get: ShipEffectsView$ShipEffect$Companion_getInstance
  });
  Object.defineProperty(ShipEffectsView$ShipEffect, '$serializer', {
    get: ShipEffectsView$ShipEffect$$serializer_getInstance
  });
  ShipEffectsView.prototype.ShipEffect_init_dlpyca$ = ShipEffectsView$ShipEffectsView$ShipEffect_init;
  ShipEffectsView.prototype.ShipEffect = ShipEffectsView$ShipEffect;
  Object.defineProperty(package$views, 'ShipEffectsView', {
    get: ShipEffectsView_getInstance
  });
  Object.defineProperty(WebsiteThemeUtils$WebsiteTheme, 'DEFAULT', {
    get: WebsiteThemeUtils$WebsiteTheme$DEFAULT_getInstance
  });
  Object.defineProperty(WebsiteThemeUtils$WebsiteTheme, 'DARK_THEME', {
    get: WebsiteThemeUtils$WebsiteTheme$DARK_THEME_getInstance
  });
  WebsiteThemeUtils.prototype.WebsiteTheme = WebsiteThemeUtils$WebsiteTheme;
  Object.defineProperty(package$spicymorenitta, 'WebsiteThemeUtils', {
    get: WebsiteThemeUtils_getInstance
  });
  var package$ws = package$spicymorenitta.ws || (package$spicymorenitta.ws = {});
  package$ws.PingCommand = PingCommand;
  package$ws.WebSocketCommand = WebSocketCommand;
  Object.defineProperty(_, 'SaveStuff', {
    get: SaveStuff_getInstance
  });
  AutoroleConfig.RoleVoteReward = AutoroleConfig$RoleVoteReward;
  var package$userdata = _.userdata || (_.userdata = {});
  package$userdata.AutoroleConfig = AutoroleConfig;
  Object.defineProperty(CounterThemes, 'DEFAULT', {
    get: CounterThemes$DEFAULT_getInstance
  });
  Object.defineProperty(CounterThemes, 'RED', {
    get: CounterThemes$RED_getInstance
  });
  Object.defineProperty(CounterThemes, 'GREEN', {
    get: CounterThemes$GREEN_getInstance
  });
  Object.defineProperty(CounterThemes, 'BLURPLE', {
    get: CounterThemes$BLURPLE_getInstance
  });
  Object.defineProperty(CounterThemes, 'BLACK', {
    get: CounterThemes$BLACK_getInstance
  });
  Object.defineProperty(CounterThemes, 'DELUXE', {
    get: CounterThemes$DELUXE_getInstance
  });
  Object.defineProperty(CounterThemes, 'LORITTA', {
    get: CounterThemes$LORITTA_getInstance
  });
  Object.defineProperty(CounterThemes, 'LORITTA_KAWAI', {
    get: CounterThemes$LORITTA_KAWAI_getInstance
  });
  package$userdata.CounterThemes = CounterThemes;
  Object.defineProperty(package$userdata, 'CounterUtils', {
    get: CounterUtils_getInstance
  });
  package$userdata.EconomyConfig = EconomyConfig;
  package$userdata.MemberCounterConfig = MemberCounterConfig;
  ModerationConfig.WarnAction = ModerationConfig$WarnAction;
  ModerationConfig.Warn = ModerationConfig$Warn;
  Object.defineProperty(ModerationConfig$PunishmentAction, 'BAN', {
    get: ModerationConfig$PunishmentAction$BAN_getInstance
  });
  Object.defineProperty(ModerationConfig$PunishmentAction, 'SOFT_BAN', {
    get: ModerationConfig$PunishmentAction$SOFT_BAN_getInstance
  });
  Object.defineProperty(ModerationConfig$PunishmentAction, 'KICK', {
    get: ModerationConfig$PunishmentAction$KICK_getInstance
  });
  Object.defineProperty(ModerationConfig$PunishmentAction, 'MUTE', {
    get: ModerationConfig$PunishmentAction$MUTE_getInstance
  });
  ModerationConfig.PunishmentAction = ModerationConfig$PunishmentAction;
  package$userdata.ModerationConfig = ModerationConfig;
  package$userdata.StoreItem = StoreItem;
  package$userdata.WelcomerConfig = WelcomerConfig;
  var package$utils_0 = _.utils || (_.utils = {});
  package$utils_0.AbstractCommand = AbstractCommand;
  package$utils_0.CountUpOptions = CountUpOptions;
  package$utils_0.Emote = Emote;
  package$utils_0.RecaptchaOptions = RecaptchaOptions;
  Object.defineProperty(LegacyBaseLocale, 'Companion', {
    get: LegacyBaseLocale$Companion_getInstance
  });
  package$utils_0.LegacyBaseLocale = LegacyBaseLocale;
  package$utils_0.LoriColor = LoriColor;
  package$utils_0.LorittaDailyPayload = LorittaDailyPayload;
  Object.defineProperty(LorittaPartner$Keyword, 'GAMING', {
    get: LorittaPartner$Keyword$GAMING_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'ENTERTAINMENT', {
    get: LorittaPartner$Keyword$ENTERTAINMENT_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'ANIME_AND_MANGA', {
    get: LorittaPartner$Keyword$ANIME_AND_MANGA_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'TELEVISION', {
    get: LorittaPartner$Keyword$TELEVISION_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'ROLEPLAYING', {
    get: LorittaPartner$Keyword$ROLEPLAYING_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'GIVEAWAYS', {
    get: LorittaPartner$Keyword$GIVEAWAYS_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'MEMES', {
    get: LorittaPartner$Keyword$MEMES_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'COMMUNITY', {
    get: LorittaPartner$Keyword$COMMUNITY_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'PROGRAMMING', {
    get: LorittaPartner$Keyword$PROGRAMMING_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'MUSIC', {
    get: LorittaPartner$Keyword$MUSIC_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'MOVIES', {
    get: LorittaPartner$Keyword$MOVIES_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'YOUTUBER', {
    get: LorittaPartner$Keyword$YOUTUBER_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'STREAMER', {
    get: LorittaPartner$Keyword$STREAMER_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'DISCUSSION', {
    get: LorittaPartner$Keyword$DISCUSSION_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'EMOTES', {
    get: LorittaPartner$Keyword$EMOTES_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'NEWS', {
    get: LorittaPartner$Keyword$NEWS_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'ART', {
    get: LorittaPartner$Keyword$ART_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'BOTS', {
    get: LorittaPartner$Keyword$BOTS_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'FASHION_AND_BEAUTY', {
    get: LorittaPartner$Keyword$FASHION_AND_BEAUTY_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'SOFTWARE', {
    get: LorittaPartner$Keyword$SOFTWARE_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'HARDWARE', {
    get: LorittaPartner$Keyword$HARDWARE_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'AESTHETICS', {
    get: LorittaPartner$Keyword$AESTHETICS_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'HOBBIES', {
    get: LorittaPartner$Keyword$HOBBIES_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'CHIT_CHAT', {
    get: LorittaPartner$Keyword$CHIT_CHAT_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'KPOP_AND_KOREAN_CULTURE', {
    get: LorittaPartner$Keyword$KPOP_AND_KOREAN_CULTURE_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'TERROR_AND_CREEPYPASTA', {
    get: LorittaPartner$Keyword$TERROR_AND_CREEPYPASTA_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'LIFE_STYLE', {
    get: LorittaPartner$Keyword$LIFE_STYLE_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'BOOKS_AND_WRITING', {
    get: LorittaPartner$Keyword$BOOKS_AND_WRITING_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'SPORTS', {
    get: LorittaPartner$Keyword$SPORTS_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'FITNESS_AND_HEALTH', {
    get: LorittaPartner$Keyword$FITNESS_AND_HEALTH_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'INTERNET_CULTURE', {
    get: LorittaPartner$Keyword$INTERNET_CULTURE_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'FOOD', {
    get: LorittaPartner$Keyword$FOOD_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'NATURE_AND_SCIENCE', {
    get: LorittaPartner$Keyword$NATURE_AND_SCIENCE_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'CRYPTOCURRENCY', {
    get: LorittaPartner$Keyword$CRYPTOCURRENCY_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'TECNOLOGY', {
    get: LorittaPartner$Keyword$TECNOLOGY_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'FURRY', {
    get: LorittaPartner$Keyword$FURRY_getInstance
  });
  Object.defineProperty(LorittaPartner$Keyword, 'NSFW', {
    get: LorittaPartner$Keyword$NSFW_getInstance
  });
  LorittaPartner.prototype.Keyword = LorittaPartner$Keyword;
  LorittaPartner.prototype.Language = LorittaPartner$Language;
  Object.defineProperty(LorittaPartner$Type, 'SPONSOR', {
    get: LorittaPartner$Type$SPONSOR_getInstance
  });
  Object.defineProperty(LorittaPartner$Type, 'PARTNER', {
    get: LorittaPartner$Type$PARTNER_getInstance
  });
  Object.defineProperty(LorittaPartner$Type, 'NORMAL', {
    get: LorittaPartner$Type$NORMAL_getInstance
  });
  LorittaPartner.prototype.Type = LorittaPartner$Type;
  Object.defineProperty(package$utils_0, 'LorittaPartner', {
    get: LorittaPartner_getInstance
  });
  package$utils_0.LorittaProfile = LorittaProfile;
  Object.defineProperty(package$utils_0, 'LoriWebCodes', {
    get: LoriWebCodes_getInstance
  });
  package$utils_0.Member = Member;
  package$utils_0.Role = Role;
  package$utils_0.ServerConfig = ServerConfig_0;
  package$utils_0.DonationKey = DonationKey;
  package$utils_0.getTextChannelConfig_zc3ojw$ = getTextChannelConfig;
  package$utils_0.getTextChannelConfig_r43l01$ = getTextChannelConfig_0;
  package$utils_0.hasTextChannelConfig_zc3ojw$ = hasTextChannelConfig;
  package$utils_0.hasTextChannelConfig_r43l01$ = hasTextChannelConfig_0;
  package$utils_0.ShowdownExtension = ShowdownExtension;
  package$utils_0.TextChannel = TextChannel;
  package$utils_0.TextChannelConfig = TextChannelConfig;
  package$utils_0.TingleOptions = TingleOptions_0;
  AudioRecordingRoute$Companion$TrackedAudioData$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  BaseRoute.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  BaseRoute.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  BaseRoute.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  BaseRoute.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  BaseRoute.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  Object.defineProperty(CommandsRoute$UserImpl.prototype, 'idAsString', Object.getOwnPropertyDescriptor(User.prototype, 'idAsString'));
  CommandsRoute$Companion$Command$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  RssFeedsRoute$DefaultRssFeedEntry$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  TwitterRoute$TwitterAccountInfo$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  SpicyMorenitta.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  SpicyMorenitta.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  SpicyMorenitta.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  SpicyMorenitta.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  SpicyMorenitta.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  Trunfo.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  Trunfo.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  Trunfo.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  Trunfo.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  Trunfo.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  AdvertisementUtils.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  AdvertisementUtils.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  AdvertisementUtils.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  AdvertisementUtils.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  AdvertisementUtils.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  DateSerializer.prototype.patch_mynpiu$ = KSerializer.prototype.patch_mynpiu$;
  FanArt$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  FanArtArtist$Info$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  FanArtArtist$User$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  FanArtArtist$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  GeneralConfig$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  GoogleAdSense.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  GoogleAdSense.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  GoogleAdSense.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  GoogleAdSense.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  GoogleAdSense.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  GuildConfig$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  BaseLocale$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  BaseLocale.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  BaseLocale.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  BaseLocale.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  BaseLocale.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  BaseLocale.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  TemmieDiscordGuild$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  UserIdentification$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  WebsiteUtils.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  WebsiteUtils.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  WebsiteUtils.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  WebsiteUtils.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  WebsiteUtils.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  DailyView$DailyResponse$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  DailyView$Guild$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  DailyView$Sponsored$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  DailyView$FailedGuildDailyStats$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$MiniGuild$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$Guild$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$SelfMember$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$DonationKey$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$DonationConfig$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$LevelUpConfig$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$Announcement$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$RoleByExperience$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$ExperienceRoleRate$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$TrackedTwitterAccount$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$TrackedRssFeed$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$ReactionOption$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$DiscordMessage$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$DiscordReaction$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$Role$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$TextChannel$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$WebAuditLogWrapper$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ServerConfig$WebAuditLogEntry$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ProfileListView$Profile$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ProfileListView$ProfileLayout$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  ShipEffectsView$ShipEffect$$serializer.prototype.patch_mynpiu$ = GeneratedSerializer.prototype.patch_mynpiu$;
  WebSocketCommand.prototype.success_yhszz7$ = Logging.prototype.success_yhszz7$;
  WebSocketCommand.prototype.info_yhszz7$ = Logging.prototype.info_yhszz7$;
  WebSocketCommand.prototype.warn_yhszz7$ = Logging.prototype.warn_yhszz7$;
  WebSocketCommand.prototype.error_yhszz7$ = Logging.prototype.error_yhszz7$;
  WebSocketCommand.prototype.debug_yhszz7$ = Logging.prototype.debug_yhszz7$;
  selfProfile = null;
  switchPageStart = 0.0;
  pageCache = LinkedHashMap_init();
  ignoreCacheRequests = false;
  navbarIsSetup = false;
  http = HttpClient(js.Js, http$lambda);
  page = new BetterDocument(document);
  delayedTypingTask = null;
  main([]);
  Kotlin.defineModule('SpicyMorenitta', _);
  return _;
}(typeof SpicyMorenitta === 'undefined' ? {} : SpicyMorenitta, kotlin, this['kotlinx-html-js'], this['kotlinx-serialization-runtime-js'], this['loritta-api'], this['ktor-ktor-client-core'], this['kotlinx-coroutines-core'], this['ktor-ktor-http']);

//# sourceMappingURL=SpicyMorenitta.js.map
